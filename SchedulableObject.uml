<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_rTuLcNO3Ee2O0cjNcmYJpQ" name="SchedulableObject">
    <eAnnotations xmi:id="_rYJ_gNO3Ee2O0cjNcmYJpQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_rYJ_gdO3Ee2O0cjNcmYJpQ" source="codegen">
        <details xmi:id="_rYJ_gtO3Ee2O0cjNcmYJpQ" key="codegenDirectory" value="/cs2820-spring23/src"/>
        <details xmi:id="_sd6tsdO3Ee2O0cjNcmYJpQ" key="AssociatedSourceCode" value="/cs2820-spring23/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-spring23/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;2515762246/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelVisualization.java;3549530263/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-spring23/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Description.java;2283427202/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Edge.java;2557287305/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Flow.java;3359544952/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;982524150/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyVisualization.java;3638017576/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-spring23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Node.java;229355987/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramVisualization.java;1367527794/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;4224526319/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;1279026655/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemFactory.java;3225025894/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationFactory.java;923113377/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;3055860927/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationObject.java;1154791723/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Warp.java;1246636550/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpInterface.java;1600303076/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpSystem.java;2193779250/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoad.java;1306107233/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1720498685/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadTest.java;3314002610/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Program.java;144940582/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_Ji62MNejEe2IjMkQsyA0cQ" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_Ji62MdejEe2IjMkQsyA0cQ" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_Ji62MtejEe2IjMkQsyA0cQ" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_Ji62M9ejEe2IjMkQsyA0cQ" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_Ji62NNejEe2IjMkQsyA0cQ" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_r2zqYtO3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_r2zqY9O3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_r2zqZNO3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_r2zqZdO3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_r2zqZtO3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_r2zqZ9O3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_r2zqaNO3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_r2zqadO3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_r2zqatO3Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_r2SF8NO3Ee2O0cjNcmYJpQ" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_r2SF8dO3Ee2O0cjNcmYJpQ" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_r2SF8tO3Ee2O0cjNcmYJpQ" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_r2TUENO3Ee2O0cjNcmYJpQ" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_r22tsNO3Ee2O0cjNcmYJpQ" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_r-p-0tO3Ee2O0cjNcmYJpQ" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_r3GlUNO3Ee2O0cjNcmYJpQ" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_r_AkItO3Ee2O0cjNcmYJpQ" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_r3HzcNO3Ee2O0cjNcmYJpQ" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_r_BLMdO3Ee2O0cjNcmYJpQ" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_r_BLM9O3Ee2O0cjNcmYJpQ" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4Qb4NO3Ee2O0cjNcmYJpQ" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_r_jWsNO3Ee2O0cjNcmYJpQ" general="_r-QWMNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAJzoNO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAJzodO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCcNO3Ee2O0cjNcmYJpQ" name="AbstractMap" specification="_r4RC8dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvCcdO3Ee2O0cjNcmYJpQ" type="_r4Qb4NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4RC8dO3Ee2O0cjNcmYJpQ" name="AbstractMap" method="_sAvCcNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4RC8tO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4RC89O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4RC9NO3Ee2O0cjNcmYJpQ" type="_r4Qb4NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4RqANO3Ee2O0cjNcmYJpQ" name="Activation">
              <generalization xmi:id="_r-UAkdO3Ee2O0cjNcmYJpQ" general="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAJzotO3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" isReadOnly="true" association="_sBYisNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAJzpNO3Ee2O0cjNcmYJpQ" name="edges" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" isReadOnly="true" association="_sBZJwdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAKasdO3Ee2O0cjNcmYJpQ" name="additionalScheduleTimes" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" isReadOnly="true" association="_sBZJxNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAKas9O3Ee2O0cjNcmYJpQ" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAKatNO3Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r_j9w9O3Ee2O0cjNcmYJpQ" client="_r4RqANO3Ee2O0cjNcmYJpQ" supplier="_r_j9wdO3Ee2O0cjNcmYJpQ" contract="_r_j9wdO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCctO3Ee2O0cjNcmYJpQ" name="Activation" specification="_r4RqAdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvCc9O3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAvCdNO3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCddO3Ee2O0cjNcmYJpQ" name="Activation" specification="_r-SLYNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvCdtO3Ee2O0cjNcmYJpQ" name="elem" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAvCd9O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAvCeNO3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCedO3Ee2O0cjNcmYJpQ" name="clone" specification="_r4RqBtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvCetO3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCe9O3Ee2O0cjNcmYJpQ" name="getEdgesByReleaseTime" specification="_r4SREtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvCfNO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCfdO3Ee2O0cjNcmYJpQ" name="getEdgesByLatestReleaseTime" specification="_r4SRFNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvCftO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCf9O3Ee2O0cjNcmYJpQ" name="getEdgesByPeriod" specification="_r4SRFtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvCgNO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCgdO3Ee2O0cjNcmYJpQ" name="getEdgesByDeadline" specification="_r4S4IdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvCgtO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvCg9O3Ee2O0cjNcmYJpQ" name="getEdgesByPriority" specification="_r4S4I9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvChNO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpgNO3Ee2O0cjNcmYJpQ" name="addEdges" specification="_r_kk0NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpgdO3Ee2O0cjNcmYJpQ" name="edges" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpgtO3Ee2O0cjNcmYJpQ" name="addEdge" specification="_r-SLbNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpg9O3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvphNO3Ee2O0cjNcmYJpQ" name="increaseEdgePhases" specification="_r4TfMNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvphdO3Ee2O0cjNcmYJpQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvphtO3Ee2O0cjNcmYJpQ" name="updatePriorityAndRelease" specification="_r4TfMtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvph9O3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpiNO3Ee2O0cjNcmYJpQ" name="addConflict" specification="_r4TfNNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpidO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpitO3Ee2O0cjNcmYJpQ" name="addConflicts" specification="_r_lL4NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpi9O3Ee2O0cjNcmYJpQ" name="conflicts" type="_r-RkU9O3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpjNO3Ee2O0cjNcmYJpQ" name="addCoordinator" specification="_r4TfNtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpjdO3Ee2O0cjNcmYJpQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpjtO3Ee2O0cjNcmYJpQ" name="addCoordinators" specification="_r_lL49O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpj9O3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpkNO3Ee2O0cjNcmYJpQ" name="addScheduleTimes" specification="_r_ly8NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpkdO3Ee2O0cjNcmYJpQ" name="scheduleTime" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpktO3Ee2O0cjNcmYJpQ" name="getNextScheduleTime" specification="_r4TfONO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpk9O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAvplNO3Ee2O0cjNcmYJpQ" type="_r5NeINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpldO3Ee2O0cjNcmYJpQ" name="getMatchingEndTime" specification="_r4UGQNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpltO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAvpl9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpmNO3Ee2O0cjNcmYJpQ" name="getNextStartTime" specification="_r4UGQ9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpmdO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAvpmtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpm9O3Ee2O0cjNcmYJpQ" name="getNextEndTime" specification="_r4UGRtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpnNO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAvpndO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpntO3Ee2O0cjNcmYJpQ" name="getNumEdges" specification="_r4UGSdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpn9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpoNO3Ee2O0cjNcmYJpQ" name="compareTo" specification="_r-SycdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvpodO3Ee2O0cjNcmYJpQ" name="obj" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAvpotO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAvpo9O3Ee2O0cjNcmYJpQ" name="conflictExists" specification="_r-Syd9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAvppNO3Ee2O0cjNcmYJpQ" name="obj" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAvppdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQkNO3Ee2O0cjNcmYJpQ" name="canCombine" specification="_r-SyetO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQkdO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAwQktO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQk9O3Ee2O0cjNcmYJpQ" name="getDelta" specification="_r4UGS9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQlNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQldO3Ee2O0cjNcmYJpQ" name="getExecutionDuration" specification="_r4UtUNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQltO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQl9O3Ee2O0cjNcmYJpQ" name="getCombinedExecutionDuration" specification="_r-TZgdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQmNO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAwQmdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQmtO3Ee2O0cjNcmYJpQ" name="printAll" specification="_r4UtUtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQm9O3Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQnNO3Ee2O0cjNcmYJpQ" name="printAll" specification="_r4UtVNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQndO3Ee2O0cjNcmYJpQ" name="printEdges" specification="_r-TZhNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQntO3Ee2O0cjNcmYJpQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAwQn9O3Ee2O0cjNcmYJpQ" name="edges" type="_r4-0oNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQoNO3Ee2O0cjNcmYJpQ" name="printEdges" specification="_r-TZiNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQodO3Ee2O0cjNcmYJpQ" name="edges" type="_r4-0oNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4RqAdO3Ee2O0cjNcmYJpQ" name="Activation" visibility="package" method="_sAvCctO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4RqA9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4RqBNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4RqAtO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4RqBdO3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4RqBtO3Ee2O0cjNcmYJpQ" name="clone" method="_sAvCedO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-SLZtO3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SREtO3Ee2O0cjNcmYJpQ" name="getEdgesByReleaseTime" method="_sAvCe9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNI8UNejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-SLZ9O3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SRFNO3Ee2O0cjNcmYJpQ" name="getEdgesByLatestReleaseTime" method="_sAvCfdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNI8UdejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-SLaNO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SRFtO3Ee2O0cjNcmYJpQ" name="getEdgesByPeriod" method="_sAvCf9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjYNejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-SLadO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4S4IdO3Ee2O0cjNcmYJpQ" name="getEdgesByDeadline" method="_sAvCgdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjYdejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-SLatO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4S4I9O3Ee2O0cjNcmYJpQ" name="getEdgesByPriority" method="_sAvCg9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjYtejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-SLa9O3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4TfMNO3Ee2O0cjNcmYJpQ" name="increaseEdgePhases" method="_sAvphNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjY9ejEe2IjMkQsyA0cQ">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4TfMdO3Ee2O0cjNcmYJpQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4TfMtO3Ee2O0cjNcmYJpQ" name="updatePriorityAndRelease" method="_sAvphtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjZNejEe2IjMkQsyA0cQ">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r4TfM9O3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4TfNNO3Ee2O0cjNcmYJpQ" name="addConflict" method="_sAvpiNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4TfNdO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4TfNtO3Ee2O0cjNcmYJpQ" name="addCoordinator" method="_sAvpjNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4TfN9O3Ee2O0cjNcmYJpQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4TfONO3Ee2O0cjNcmYJpQ" name="getNextScheduleTime" method="_sAvpktO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjZtejEe2IjMkQsyA0cQ">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4TfOdO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-SycNO3Ee2O0cjNcmYJpQ" type="_r5NeINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4UGQNO3Ee2O0cjNcmYJpQ" name="getMatchingEndTime" method="_sAvpldO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjZ9ejEe2IjMkQsyA0cQ">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4UGQdO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4UGQtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4UGQ9O3Ee2O0cjNcmYJpQ" name="getNextStartTime" method="_sAvpmNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjaNejEe2IjMkQsyA0cQ">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4UGRNO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4UGRdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4UGRtO3Ee2O0cjNcmYJpQ" name="getNextEndTime" method="_sAvpm9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjadejEe2IjMkQsyA0cQ">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4UGR9O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4UGSNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4UGSdO3Ee2O0cjNcmYJpQ" name="getNumEdges" method="_sAvpntO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4UGStO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4UGS9O3Ee2O0cjNcmYJpQ" name="getDelta" method="_sAwQk9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjatejEe2IjMkQsyA0cQ">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4UGTNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4UtUNO3Ee2O0cjNcmYJpQ" name="getExecutionDuration" method="_sAwQldO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4UtUdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4UtUtO3Ee2O0cjNcmYJpQ" name="printAll" method="_sAwQmtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4UtU9O3Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4UtVNO3Ee2O0cjNcmYJpQ" name="printAll" method="_sAwQnNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r-SLYNO3Ee2O0cjNcmYJpQ" name="Activation" visibility="package" method="_sAvCddO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-SLY9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-SLZNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-SLYdO3Ee2O0cjNcmYJpQ" name="elem" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-SLYtO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-SLZdO3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-SLbNO3Ee2O0cjNcmYJpQ" name="addEdge" method="_sAvpgtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-SLbdO3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-SycdO3Ee2O0cjNcmYJpQ" name="compareTo" method="_sAvpoNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-SyctO3Ee2O0cjNcmYJpQ" name="obj" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-Syc9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-Syd9O3Ee2O0cjNcmYJpQ" name="conflictExists" method="_sAvpo9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-SyeNO3Ee2O0cjNcmYJpQ" name="obj" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-SyedO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-SyetO3Ee2O0cjNcmYJpQ" name="canCombine" method="_sAwQkNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-Sye9O3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-TZgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-TZgdO3Ee2O0cjNcmYJpQ" name="getCombinedExecutionDuration" method="_sAwQl9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-TZgtO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-TZg9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-TZhNO3Ee2O0cjNcmYJpQ" name="printEdges" visibility="private" method="_sAwQndO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-TZhdO3Ee2O0cjNcmYJpQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-TZhtO3Ee2O0cjNcmYJpQ" name="edges" type="_r4-0oNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-TZiNO3Ee2O0cjNcmYJpQ" name="printEdges" visibility="private" method="_sAwQoNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-TZidO3Ee2O0cjNcmYJpQ" name="edges" type="_r4-0oNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_kk0NO3Ee2O0cjNcmYJpQ" name="addEdges" method="_sAvpgNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_kk0dO3Ee2O0cjNcmYJpQ" name="edges" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_lL4NO3Ee2O0cjNcmYJpQ" name="addConflicts" method="_sAvpitO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_lL4dO3Ee2O0cjNcmYJpQ" name="conflicts" type="_r-RkU9O3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_lL49O3Ee2O0cjNcmYJpQ" name="addCoordinators" method="_sAvpjtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_lL5NO3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_ly8NO3Ee2O0cjNcmYJpQ" name="addScheduleTimes" method="_sAvpkNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjZdejEe2IjMkQsyA0cQ">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_ly8dO3Ee2O0cjNcmYJpQ" name="scheduleTime" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4WigNO3Ee2O0cjNcmYJpQ" name="Activations">
              <generalization xmi:id="_r-UnoNO3Ee2O0cjNcmYJpQ" general="_r4Qb4NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sALBwNO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sALBwdO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4WigdO3Ee2O0cjNcmYJpQ" name="BasicPoset">
              <ownedComment xmi:id="_LNJja9ejEe2IjMkQsyA0cQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_r-Unp9O3Ee2O0cjNcmYJpQ" general="_r42RwtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQotO3Ee2O0cjNcmYJpQ" name="BasicPoset" specification="_r-UnotO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQo9O3Ee2O0cjNcmYJpQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAwQpNO3Ee2O0cjNcmYJpQ" type="_r4WigdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-UnotO3Ee2O0cjNcmYJpQ" name="BasicPoset" visibility="package" method="_sAwQotO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-UnpNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-UnpdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-Uno9O3Ee2O0cjNcmYJpQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-UnptO3Ee2O0cjNcmYJpQ" type="_r4WigdO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4WigtO3Ee2O0cjNcmYJpQ" name="ChannelAnalysis">
              <ownedComment xmi:id="_LNJjbNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sALBwtO3Ee2O0cjNcmYJpQ" name="program" visibility="private" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBZJx9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sALBxNO3Ee2O0cjNcmYJpQ" name="programTable" visibility="private" type="_r47xUNO3Ee2O0cjNcmYJpQ" association="_sBZw0dO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sALBxtO3Ee2O0cjNcmYJpQ" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQpdO3Ee2O0cjNcmYJpQ" name="ChannelAnalysis" specification="_r-VOsNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQptO3Ee2O0cjNcmYJpQ" name="warp" type="_r5fK8dO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAwQp9O3Ee2O0cjNcmYJpQ" type="_r4WigtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQqNO3Ee2O0cjNcmYJpQ" name="ChannelAnalysis" specification="_r-VOtdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQqdO3Ee2O0cjNcmYJpQ" name="program" type="_r56BsNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAwQqtO3Ee2O0cjNcmYJpQ" type="_r4WigtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQq9O3Ee2O0cjNcmYJpQ" name="isChannelConflict" specification="_r4XJkNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQrNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4XJkNO3Ee2O0cjNcmYJpQ" name="isChannelConflict" method="_sAwQq9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4XJkdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-VOsNO3Ee2O0cjNcmYJpQ" name="ChannelAnalysis" visibility="package" method="_sAwQpdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-VOstO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-VOs9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-VOsdO3Ee2O0cjNcmYJpQ" name="warp" type="_r5fK8dO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-VOtNO3Ee2O0cjNcmYJpQ" type="_r4WigtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-VOtdO3Ee2O0cjNcmYJpQ" name="ChannelAnalysis" visibility="package" method="_sAwQqNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-VOt9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-VOuNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-VOttO3Ee2O0cjNcmYJpQ" name="program" type="_r56BsNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-VOudO3Ee2O0cjNcmYJpQ" type="_r4WigtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4XJktO3Ee2O0cjNcmYJpQ" name="ChannelVisualization">
              <ownedComment xmi:id="_LNJjbdejEe2IjMkQsyA0cQ">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-V1xNO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sALByNO3Ee2O0cjNcmYJpQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sALBydO3Ee2O0cjNcmYJpQ" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sALBytO3Ee2O0cjNcmYJpQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sALo0NO3Ee2O0cjNcmYJpQ" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sALo0dO3Ee2O0cjNcmYJpQ" name="warp" visibility="private" type="_r5d80NO3Ee2O0cjNcmYJpQ" association="_sBZw1NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sALo09O3Ee2O0cjNcmYJpQ" name="ca" visibility="private" type="_r4WigtO3Ee2O0cjNcmYJpQ" association="_sBZw19O3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQrdO3Ee2O0cjNcmYJpQ" name="ChannelVisualization" specification="_r-VOutO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAwQrtO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAwQr9O3Ee2O0cjNcmYJpQ" type="_r4XJktO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-VOutO3Ee2O0cjNcmYJpQ" name="ChannelVisualization" visibility="package" method="_sAwQrdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-V1wdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-V1wtO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-V1wNO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-V1w9O3Ee2O0cjNcmYJpQ" type="_r4XJktO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4XwoNO3Ee2O0cjNcmYJpQ" name="Channels">
              <ownedComment xmi:id="_LNJjbtejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sALo19O3Ee2O0cjNcmYJpQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sALo2dO3Ee2O0cjNcmYJpQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAMP4dO3Ee2O0cjNcmYJpQ" name="channelsAvailable" visibility="package" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBaX4dO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3o9O3Ee2O0cjNcmYJpQ" name="Channels" specification="_r4YXutO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3pNO3Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3pdO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3ptO3Ee2O0cjNcmYJpQ" type="_r4XwoNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3p9O3Ee2O0cjNcmYJpQ" name="getChannelSet" specification="_r4Y-w9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3qNO3Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3qdO3Ee2O0cjNcmYJpQ" type="_r-Q9QtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3qtO3Ee2O0cjNcmYJpQ" name="addNewChannelSet" specification="_r4Y-xtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3q9O3Ee2O0cjNcmYJpQ" name="isEmpty" specification="_r4Y-x9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3rNO3Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3rdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3rtO3Ee2O0cjNcmYJpQ" name="removeChannel" specification="_r4Y-ytO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3r9O3Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3sNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3sdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3stO3Ee2O0cjNcmYJpQ" name="addChannel" specification="_r4Zl0tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3s9O3Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3tNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3tdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3ttO3Ee2O0cjNcmYJpQ" name="getNumChannels" specification="_r4Zl1tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3t9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4YXutO3Ee2O0cjNcmYJpQ" name="Channels" visibility="package" method="_sAw3o9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4Y-wNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4Y-wdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4YXu9O3Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4YXvNO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4Y-wtO3Ee2O0cjNcmYJpQ" type="_r4XwoNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Y-w9O3Ee2O0cjNcmYJpQ" name="getChannelSet" method="_sAw3p9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4Y-xNO3Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_nBEdO3Ee2O0cjNcmYJpQ" type="_r-Q9QtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Y-xtO3Ee2O0cjNcmYJpQ" name="addNewChannelSet" method="_sAw3qtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r4Y-x9O3Ee2O0cjNcmYJpQ" name="isEmpty" method="_sAw3q9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4Y-yNO3Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4Y-ydO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Y-ytO3Ee2O0cjNcmYJpQ" name="removeChannel" method="_sAw3rtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4Y-y9O3Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4Zl0NO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4Zl0dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Zl0tO3Ee2O0cjNcmYJpQ" name="addChannel" method="_sAw3stO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4Zl09O3Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4Zl1NO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4Zl1dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Zl1tO3Ee2O0cjNcmYJpQ" name="getNumChannels" method="_sAw3ttO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4Zl19O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r4YXsNO3Ee2O0cjNcmYJpQ" name="ChannelSet" visibility="private">
                <generalization xmi:id="_r_maANO3Ee2O0cjNcmYJpQ" general="_r-Q9QtO3Ee2O0cjNcmYJpQ"/>
                <ownedAttribute xmi:id="_sALo1dO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sALo1tO3Ee2O0cjNcmYJpQ" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAwQsNO3Ee2O0cjNcmYJpQ" name="ChannelSet" specification="_r4YXsdO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sAwQsdO3Ee2O0cjNcmYJpQ" type="_r4YXsNO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3oNO3Ee2O0cjNcmYJpQ" name="ChannelSet" specification="_r4YXtdO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sAw3odO3Ee2O0cjNcmYJpQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sAw3otO3Ee2O0cjNcmYJpQ" type="_r4YXsNO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r4YXsdO3Ee2O0cjNcmYJpQ" name="ChannelSet" visibility="private" method="_sAwQsNO3Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_r4YXstO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r4YXs9O3Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r4YXtNO3Ee2O0cjNcmYJpQ" type="_r4YXsNO3Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r4YXtdO3Ee2O0cjNcmYJpQ" name="ChannelSet" visibility="private" method="_sAw3oNO3Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_r4YXt9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r4YXuNO3Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r4YXttO3Ee2O0cjNcmYJpQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r4YXudO3Ee2O0cjNcmYJpQ" type="_r4YXsNO3Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4aM4NO3Ee2O0cjNcmYJpQ" name="CodeFragment">
              <ownedAttribute xmi:id="_sAMP5NO3Ee2O0cjNcmYJpQ" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAMP5dO3Ee2O0cjNcmYJpQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAMP5tO3Ee2O0cjNcmYJpQ" name="edges" visibility="package" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBaX5NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAM28tO3Ee2O0cjNcmYJpQ" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAM29NO3Ee2O0cjNcmYJpQ" name="codeFragment" visibility="package" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBaX59O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sANeAdO3Ee2O0cjNcmYJpQ" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANeA9O3Ee2O0cjNcmYJpQ" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3uNO3Ee2O0cjNcmYJpQ" name="CodeFragment" specification="_r4aM4dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3udO3Ee2O0cjNcmYJpQ" type="_r4aM4NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3utO3Ee2O0cjNcmYJpQ" name="CodeFragment" specification="_r_noINO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3u9O3Ee2O0cjNcmYJpQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3vNO3Ee2O0cjNcmYJpQ" name="edges" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAw3vdO3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAw3vtO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3v9O3Ee2O0cjNcmYJpQ" type="_r4aM4NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3wNO3Ee2O0cjNcmYJpQ" name="getCoordinator" specification="_r4aM5dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3wdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3wtO3Ee2O0cjNcmYJpQ" name="instructions" specification="_r4az8NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3w9O3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3xNO3Ee2O0cjNcmYJpQ" name="size" specification="_r4az8tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3xdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3xtO3Ee2O0cjNcmYJpQ" name="generateCodeFragment" specification="_r4az9NO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3x9O3Ee2O0cjNcmYJpQ" name="getBaseInstruction" specification="_r4az9dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3yNO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3ydO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3ytO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3y9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAw3zNO3Ee2O0cjNcmYJpQ" name="push" specification="_r4az-tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAw3zdO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3ztO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw3z9O3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAw30NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxesNO3Ee2O0cjNcmYJpQ" name="pull" specification="_r4bbBNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxesdO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxestO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxes9O3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxetNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxetdO3Ee2O0cjNcmYJpQ" name="ifHas" specification="_r4bbCdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxettO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxet9O3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxeuNO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxeudO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxeutO3Ee2O0cjNcmYJpQ" name="ifNotHas" specification="_r4bbDtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxeu9O3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxevNO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxevdO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxevtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxev9O3Ee2O0cjNcmYJpQ" name="wait" specification="_r4cCENO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxewNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxewdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxewtO3Ee2O0cjNcmYJpQ" name="sleep" specification="_r4cCE9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxew9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxexNO3Ee2O0cjNcmYJpQ" name="reportIfDifferentCoordinators" specification="_r_oPMtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxexdO3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxextO3Ee2O0cjNcmYJpQ" name="multipleCoordinators" specification="_r_oPNdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxex9O3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxeyNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4aM4dO3Ee2O0cjNcmYJpQ" name="CodeFragment" visibility="package" method="_sAw3uNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4aM4tO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4aM49O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNJjb9ejEe2IjMkQsyA0cQ">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4aM5NO3Ee2O0cjNcmYJpQ" type="_r4aM4NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4aM5dO3Ee2O0cjNcmYJpQ" name="getCoordinator" method="_sAw3wNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjcdejEe2IjMkQsyA0cQ">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4aM5tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4az8NO3Ee2O0cjNcmYJpQ" name="instructions" method="_sAw3wtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNJjctejEe2IjMkQsyA0cQ">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_oPMdO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4az8tO3Ee2O0cjNcmYJpQ" name="size" method="_sAw3xNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNKKcNejEe2IjMkQsyA0cQ">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4az89O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4az9NO3Ee2O0cjNcmYJpQ" name="generateCodeFragment" visibility="private" method="_sAw3xtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r4az9dO3Ee2O0cjNcmYJpQ" name="getBaseInstruction" visibility="private" method="_sAw3x9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4az9tO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4az99O3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4az-NO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4az-dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4az-tO3Ee2O0cjNcmYJpQ" name="push" visibility="private" method="_sAw3zNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4bbANO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbAdO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbAtO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbA9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4bbBNO3Ee2O0cjNcmYJpQ" name="pull" visibility="private" method="_sAxesNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4bbBdO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbBtO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbB9O3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbCNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4bbCdO3Ee2O0cjNcmYJpQ" name="ifHas" visibility="private" method="_sAxetdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4bbCtO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbC9O3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbDNO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbDdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4bbDtO3Ee2O0cjNcmYJpQ" name="ifNotHas" visibility="private" method="_sAxeutO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4bbD9O3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbENO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbEdO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bbEtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4cCENO3Ee2O0cjNcmYJpQ" name="wait" method="_sAxev9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4cCEdO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4cCEtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4cCE9O3Ee2O0cjNcmYJpQ" name="sleep" isStatic="true" method="_sAxewtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4cCFNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_noINO3Ee2O0cjNcmYJpQ" name="CodeFragment" visibility="package" method="_sAw3utO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_noJdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_noJtO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNJjcNejEe2IjMkQsyA0cQ">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_noIdO3Ee2O0cjNcmYJpQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_noItO3Ee2O0cjNcmYJpQ" name="edges" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_noI9O3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_noJNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_noJ9O3Ee2O0cjNcmYJpQ" type="_r4aM4NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_oPMtO3Ee2O0cjNcmYJpQ" name="reportIfDifferentCoordinators" visibility="private" method="_sAxexNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_oPM9O3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_oPNdO3Ee2O0cjNcmYJpQ" name="multipleCoordinators" visibility="private" method="_sAxextO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_o2QNO3Ee2O0cjNcmYJpQ" name="coordinators" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_o2QdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4cpINO3Ee2O0cjNcmYJpQ" name="CombinedActivation">
              <generalization xmi:id="_r-YSA9O3Ee2O0cjNcmYJpQ" general="_r4RqANO3Ee2O0cjNcmYJpQ"/>
              <interfaceRealization xmi:id="_r_o2Q9O3Ee2O0cjNcmYJpQ" client="_r4cpINO3Ee2O0cjNcmYJpQ" supplier="_r_j9wdO3Ee2O0cjNcmYJpQ" contract="_r_j9wdO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxeydO3Ee2O0cjNcmYJpQ" name="CombinedActivation" specification="_r4cpIdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxeytO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxey9O3Ee2O0cjNcmYJpQ" type="_r4cpINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxezNO3Ee2O0cjNcmYJpQ" name="CombinedActivation" specification="_r-XD4NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxezdO3Ee2O0cjNcmYJpQ" name="elem" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxeztO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxez9O3Ee2O0cjNcmYJpQ" type="_r4cpINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxe0NO3Ee2O0cjNcmYJpQ" name="CombinedActivation" specification="_r-Xq9dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxe0dO3Ee2O0cjNcmYJpQ" name="priorEntry" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxe0tO3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxe09O3Ee2O0cjNcmYJpQ" type="_r4cpINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxe1NO3Ee2O0cjNcmYJpQ" name="canCombine" specification="_r-Xq-9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxe1dO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxe1tO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4cpIdO3Ee2O0cjNcmYJpQ" name="CombinedActivation" visibility="package" method="_sAxeydO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4cpI9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4cpJNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4cpItO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4cpJdO3Ee2O0cjNcmYJpQ" type="_r4cpINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-XD4NO3Ee2O0cjNcmYJpQ" name="CombinedActivation" visibility="package" method="_sAxezNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-Xq8tO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-Xq89O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-Xq8NO3Ee2O0cjNcmYJpQ" name="elem" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-Xq8dO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-Xq9NO3Ee2O0cjNcmYJpQ" type="_r4cpINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-Xq9dO3Ee2O0cjNcmYJpQ" name="CombinedActivation" visibility="package" method="_sAxe0NO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-Xq-NO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-Xq-dO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-Xq9tO3Ee2O0cjNcmYJpQ" name="priorEntry" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-Xq99O3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-Xq-tO3Ee2O0cjNcmYJpQ" type="_r4cpINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-Xq-9O3Ee2O0cjNcmYJpQ" name="canCombine" method="_sAxe1NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-Xq_NO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-Xq_dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4dQMNO3Ee2O0cjNcmYJpQ" name="CommunicationGraph">
              <ownedComment xmi:id="_LNKKcdejEe2IjMkQsyA0cQ">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-Y5GdO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sANeBdO3Ee2O0cjNcmYJpQ" name="wfm" visibility="package" type="_r4j94NO3Ee2O0cjNcmYJpQ" association="_sBa-8dO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAOFEdO3Ee2O0cjNcmYJpQ" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOFE9O3Ee2O0cjNcmYJpQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOFFdO3Ee2O0cjNcmYJpQ" name="workLoad" visibility="package" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBa-9NO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxe19O3Ee2O0cjNcmYJpQ" name="CommunicationGraph" specification="_r-YSBNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxe2NO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxe2dO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxe2tO3Ee2O0cjNcmYJpQ" type="_r4dQMNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxe29O3Ee2O0cjNcmYJpQ" name="CommunicationGraph" specification="_r-YSCtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxe3NO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxe3dO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAxe3tO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAxe39O3Ee2O0cjNcmYJpQ" type="_r4dQMNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAxe4NO3Ee2O0cjNcmYJpQ" name="createHeader" specification="_r4d3QNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAxe4dO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyFwNO3Ee2O0cjNcmYJpQ" name="createFooter" specification="_r4d3RNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyFwdO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyFwtO3Ee2O0cjNcmYJpQ" name="visualization" specification="_r4eeUdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyFw9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyFxNO3Ee2O0cjNcmYJpQ" name="createWarpFileContent" specification="_r4eeVdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyFxdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4d3QNO3Ee2O0cjNcmYJpQ" name="createHeader" method="_sAxe4NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-Y5FtO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4d3RNO3Ee2O0cjNcmYJpQ" name="createFooter" method="_sAyFwNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-Y5F9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4eeUdO3Ee2O0cjNcmYJpQ" name="visualization" method="_sAyFwtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-Y5GNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4eeVdO3Ee2O0cjNcmYJpQ" name="createWarpFileContent" method="_sAyFxNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4eeVtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-YSBNO3Ee2O0cjNcmYJpQ" name="CommunicationGraph" method="_sAxe19O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-YSB9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-YSCNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-YSBdO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-YSBtO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-YSCdO3Ee2O0cjNcmYJpQ" type="_r4dQMNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-YSCtO3Ee2O0cjNcmYJpQ" name="CommunicationGraph" method="_sAxe29O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-Y5E9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-Y5FNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-Y5ENO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-Y5EdO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-Y5EtO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-Y5FdO3Ee2O0cjNcmYJpQ" type="_r4dQMNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4fFYNO3Ee2O0cjNcmYJpQ" name="ConnectivityPoset">
              <ownedComment xmi:id="_LNKKctejEe2IjMkQsyA0cQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_r-ZgJdO3Ee2O0cjNcmYJpQ" general="_r42RwtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyFxtO3Ee2O0cjNcmYJpQ" name="ConnectivityPoset" specification="_r-ZgINO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyFx9O3Ee2O0cjNcmYJpQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAyFyNO3Ee2O0cjNcmYJpQ" type="_r4fFYNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyFydO3Ee2O0cjNcmYJpQ" name="findCoordinator" specification="_r_pdUdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyFytO3Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAyFy9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-ZgINO3Ee2O0cjNcmYJpQ" name="ConnectivityPoset" visibility="package" method="_sAyFxtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-ZgItO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-ZgI9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-ZgIdO3Ee2O0cjNcmYJpQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-ZgJNO3Ee2O0cjNcmYJpQ" type="_r4fFYNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_pdUdO3Ee2O0cjNcmYJpQ" name="findCoordinator" visibility="protected" method="_sAyFydO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_qEYNO3Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_qEYdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4fscNO3Ee2O0cjNcmYJpQ" name="DeadlineComparator">
              <interfaceRealization xmi:id="_r_qEZtO3Ee2O0cjNcmYJpQ" client="_r4fscNO3Ee2O0cjNcmYJpQ" supplier="_r-ZgJtO3Ee2O0cjNcmYJpQ" contract="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyFzNO3Ee2O0cjNcmYJpQ" name="compare" specification="_r_qrc9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyFzdO3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAyFztO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAyFz9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_qrc9O3Ee2O0cjNcmYJpQ" name="compare" method="_sAyFzNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_qrdNO3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_rSgNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_rSgdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4gTgNO3Ee2O0cjNcmYJpQ" name="Description">
              <ownedComment xmi:id="_LNKKc9ejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r_rShdO3Ee2O0cjNcmYJpQ" general="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAOFF9O3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAOFGNO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyF0NO3Ee2O0cjNcmYJpQ" name="Description" specification="_r4gTgdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyF0dO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyF0tO3Ee2O0cjNcmYJpQ" name="Description" specification="_r4gThdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyF09O3Ee2O0cjNcmYJpQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF1NO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyF1dO3Ee2O0cjNcmYJpQ" name="toString" specification="_r4g6kNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyF1tO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyF19O3Ee2O0cjNcmYJpQ" name="main" specification="_r4g6ldO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyF2NO3Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAyF2dO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.println(&quot;test&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4gTgdO3Ee2O0cjNcmYJpQ" name="Description" method="_sAyF0NO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4gTgtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4gTg9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4gThNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4gThdO3Ee2O0cjNcmYJpQ" name="Description" method="_sAyF0tO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4gTh9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4gTiNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4gThtO3Ee2O0cjNcmYJpQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4gTidO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4g6kNO3Ee2O0cjNcmYJpQ" name="toString" method="_sAyF1dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4g6kdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4g6ldO3Ee2O0cjNcmYJpQ" name="main" isStatic="true" method="_sAyF19O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4g6ltO3Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4g6l9O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4hhoNO3Ee2O0cjNcmYJpQ" name="Edge">
              <generalization xmi:id="_r-auRtO3Ee2O0cjNcmYJpQ" general="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAOsINO3Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAOsIdO3Ee2O0cjNcmYJpQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOsItO3Ee2O0cjNcmYJpQ" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOsI9O3Ee2O0cjNcmYJpQ" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOsJNO3Ee2O0cjNcmYJpQ" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOsJdO3Ee2O0cjNcmYJpQ" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOsJtO3Ee2O0cjNcmYJpQ" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOsJ9O3Ee2O0cjNcmYJpQ" name="state" type="_r4hhodO3Ee2O0cjNcmYJpQ" association="_sBHdANO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAOsKNO3Ee2O0cjNcmYJpQ" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r_r5kNO3Ee2O0cjNcmYJpQ" client="_r4hhoNO3Ee2O0cjNcmYJpQ" supplier="_r_j9wdO3Ee2O0cjNcmYJpQ" contract="_r_j9wdO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyF2tO3Ee2O0cjNcmYJpQ" name="Edge" specification="_r4iIsdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyF29O3Ee2O0cjNcmYJpQ" type="_r4hhoNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAyF3NO3Ee2O0cjNcmYJpQ" name="Edge" specification="_r4iItdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAyF3dO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF3tO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF39O3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF4NO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF4dO3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF4tO3Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF49O3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF5NO3Ee2O0cjNcmYJpQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAyF5dO3Ee2O0cjNcmYJpQ" type="_r4hhoNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src = src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys0NO3Ee2O0cjNcmYJpQ" name="compareTo" specification="_r-auQNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys0dO3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAys0tO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys09O3Ee2O0cjNcmYJpQ" name="toString" specification="_r4iIwdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys1NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, this.flow, this.src, this.snk);&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys1dO3Ee2O0cjNcmYJpQ" name="print" specification="_r4ivxNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys1tO3Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;, headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys19O3Ee2O0cjNcmYJpQ" name="print" specification="_r4ivydO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4iIsdO3Ee2O0cjNcmYJpQ" name="Edge" visibility="package" method="_sAyF2tO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4iIstO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4iIs9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4iItNO3Ee2O0cjNcmYJpQ" type="_r4hhoNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4iItdO3Ee2O0cjNcmYJpQ" name="Edge" visibility="package" method="_sAyF3NO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4iIvtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4iIv9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4iIttO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4iIt9O3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4iIuNO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4iIudO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4iIutO3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4iIu9O3Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4iIvNO3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4iIvdO3Ee2O0cjNcmYJpQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4iIwNO3Ee2O0cjNcmYJpQ" type="_r4hhoNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4iIwdO3Ee2O0cjNcmYJpQ" name="toString" method="_sAys09O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4ivwNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4ivxNO3Ee2O0cjNcmYJpQ" name="print" method="_sAys1dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4ivxdO3Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4ivydO3Ee2O0cjNcmYJpQ" name="print" method="_sAys19O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r-auQNO3Ee2O0cjNcmYJpQ" name="compareTo" method="_sAys0NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-auQdO3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-auQtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r4hhodO3Ee2O0cjNcmYJpQ" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_r4hho9O3Ee2O0cjNcmYJpQ" name="RELEASED"/>
                <ownedLiteral xmi:id="_r4hhpNO3Ee2O0cjNcmYJpQ" name="EXECUTING"/>
                <ownedLiteral xmi:id="_r4iIsNO3Ee2O0cjNcmYJpQ" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4j94NO3Ee2O0cjNcmYJpQ" name="FileManager">
              <ownedComment xmi:id="_LNKKdNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAPTMNO3Ee2O0cjNcmYJpQ" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPTMdO3Ee2O0cjNcmYJpQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys2NO3Ee2O0cjNcmYJpQ" name="FileManager" specification="_r4j94dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys2dO3Ee2O0cjNcmYJpQ" type="_r4j94NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys2tO3Ee2O0cjNcmYJpQ" name="FileManager" specification="_r4j95dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys29O3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys3NO3Ee2O0cjNcmYJpQ" type="_r4j94NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys3dO3Ee2O0cjNcmYJpQ" name="getDocumentsDirectory" specification="_r4j96tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys3tO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys39O3Ee2O0cjNcmYJpQ" name="getCurrentDirectory" specification="_r4j97NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys4NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys4dO3Ee2O0cjNcmYJpQ" name="createFile" specification="_r4kk8dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys4tO3Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys49O3Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys5NO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys5dO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys5tO3Ee2O0cjNcmYJpQ" name="createFile" specification="_r4kk9tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys59O3Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys6NO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys6dO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys6tO3Ee2O0cjNcmYJpQ" name="createDirectory" specification="_r4kk-tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys69O3Ee2O0cjNcmYJpQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys7NO3Ee2O0cjNcmYJpQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys7dO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys7tO3Ee2O0cjNcmYJpQ" name="writeFile" specification="_r4kk_tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys79O3Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys8NO3Ee2O0cjNcmYJpQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAys8dO3Ee2O0cjNcmYJpQ" name="readFile" specification="_r4lMANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAys8tO3Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAys89O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4j94dO3Ee2O0cjNcmYJpQ" name="FileManager" method="_sAys2NO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4j94tO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4j949O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNKKddejEe2IjMkQsyA0cQ">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4j95NO3Ee2O0cjNcmYJpQ" type="_r4j94NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4j95dO3Ee2O0cjNcmYJpQ" name="FileManager" method="_sAys2tO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4j959O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4j96NO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4j95tO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4j96dO3Ee2O0cjNcmYJpQ" type="_r4j94NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4j96tO3Ee2O0cjNcmYJpQ" name="getDocumentsDirectory" method="_sAys3dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4j969O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4j97NO3Ee2O0cjNcmYJpQ" name="getCurrentDirectory" method="_sAys39O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4kk8NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4kk8dO3Ee2O0cjNcmYJpQ" name="createFile" method="_sAys4dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNKKdtejEe2IjMkQsyA0cQ">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4kk8tO3Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kk89O3Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kk9NO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kk9dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4kk9tO3Ee2O0cjNcmYJpQ" name="createFile" method="_sAys5tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4kk99O3Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kk-NO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kk-dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4kk-tO3Ee2O0cjNcmYJpQ" name="createDirectory" method="_sAys6tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4kk-9O3Ee2O0cjNcmYJpQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kk_NO3Ee2O0cjNcmYJpQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kk_dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4kk_tO3Ee2O0cjNcmYJpQ" name="writeFile" method="_sAys7tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4kk_9O3Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4klANO3Ee2O0cjNcmYJpQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4lMANO3Ee2O0cjNcmYJpQ" name="readFile" method="_sAys8dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4lMAdO3Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4lMAtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4lMA9O3Ee2O0cjNcmYJpQ" name="Flow">
              <ownedComment xmi:id="_LNOb6dejEe2IjMkQsyA0cQ">
                <body>Class that represents&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-fmwNO3Ee2O0cjNcmYJpQ" general="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAPTM9O3Ee2O0cjNcmYJpQ" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPTNNO3Ee2O0cjNcmYJpQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPTNdO3Ee2O0cjNcmYJpQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPTNtO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPTN9O3Ee2O0cjNcmYJpQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPTONO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPTOdO3Ee2O0cjNcmYJpQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAP6QNO3Ee2O0cjNcmYJpQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAP6QdO3Ee2O0cjNcmYJpQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAP6QtO3Ee2O0cjNcmYJpQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAP6Q9O3Ee2O0cjNcmYJpQ" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAP6RNO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAP6RdO3Ee2O0cjNcmYJpQ" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAP6RtO3Ee2O0cjNcmYJpQ" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAP6SNO3Ee2O0cjNcmYJpQ" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAP6StO3Ee2O0cjNcmYJpQ" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAP6TNO3Ee2O0cjNcmYJpQ" name="nodes" visibility="package" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBbmAdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAQhUtO3Ee2O0cjNcmYJpQ" name="linkTxAndTotalCost" visibility="package" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBbmBNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAQhVdO3Ee2O0cjNcmYJpQ" name="edges" visibility="package" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBbmB9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sARIYNO3Ee2O0cjNcmYJpQ" name="nodePredecessor" visibility="package" type="_r4ynYdO3Ee2O0cjNcmYJpQ" association="_sBbmCtO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sARIYtO3Ee2O0cjNcmYJpQ" name="edgePredecessor" visibility="package" type="_r4hhoNO3Ee2O0cjNcmYJpQ" association="_sBcNEdO3Ee2O0cjNcmYJpQ"/>
              <interfaceRealization xmi:id="_r_sgoNO3Ee2O0cjNcmYJpQ" client="_r4lMA9O3Ee2O0cjNcmYJpQ" supplier="_r_j9wdO3Ee2O0cjNcmYJpQ" contract="_r_j9wdO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT4NO3Ee2O0cjNcmYJpQ" name="Flow" specification="_r4lzENO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT4dO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAzT4tO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAzT49O3Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAzT5NO3Ee2O0cjNcmYJpQ" type="_r4lMA9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
		this.index = index;&#xD;
		/*&#xD;
		 * Default numTxPerLink is 1 transmission per link. Will be updated based on&#xD;
		 * flow updated based on flow length and reliability parameters&#xD;
		 */&#xD;
		this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1;&#xD;
		this.nodes = new ArrayList&lt;>();&#xD;
		this.edges = new ArrayList&lt;>();&#xD;
		this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
		this.edges = new ArrayList&lt;>();&#xD;
		this.nodePredecessor = null;&#xD;
		this.edgePredecessor = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT5dO3Ee2O0cjNcmYJpQ" name="Flow" specification="_r4lzF9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT5tO3Ee2O0cjNcmYJpQ" type="_r4lMA9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.index = DEFAULT_INDEX;&#xD;
		/*&#xD;
		 * Default numTxPerLink is 1 transmission per link. Will be updated based on&#xD;
		 * flow updated based on flow length and reliability parameters&#xD;
		 */&#xD;
		this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1;&#xD;
		this.nodes = new ArrayList&lt;>();&#xD;
		this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
		this.edges = new ArrayList&lt;>();&#xD;
		this.nodePredecessor = null;&#xD;
		this.edgePredecessor = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT59O3Ee2O0cjNcmYJpQ" name="getInitialPriority" specification="_r4lzG9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT6NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT6dO3Ee2O0cjNcmYJpQ" name="getIndex" specification="_r4maINO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT6tO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT69O3Ee2O0cjNcmYJpQ" name="getNumTxPerLink" specification="_r4maItO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT7NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT7dO3Ee2O0cjNcmYJpQ" name="getNodes" specification="_r4maJNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT7tO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT79O3Ee2O0cjNcmYJpQ" name="getEdges" specification="_r4maJtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT8NO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT8dO3Ee2O0cjNcmYJpQ" name="addEdge" specification="_r-eYoNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT8tO3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT89O3Ee2O0cjNcmYJpQ" name="addNode" specification="_r-e_sNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT9NO3Ee2O0cjNcmYJpQ" name="node" type="_r4ynYdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT9dO3Ee2O0cjNcmYJpQ" name="getLinkTxAndTotalCost" specification="_r4nBMdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT9tO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT99O3Ee2O0cjNcmYJpQ" name="setInitialPriority" specification="_r4nBM9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT-NO3Ee2O0cjNcmYJpQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT-dO3Ee2O0cjNcmYJpQ" name="setIndex" specification="_r4nBNdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT-tO3Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAzT-9O3Ee2O0cjNcmYJpQ" name="setNumTxPerLink" specification="_r4noQNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAzT_NO3Ee2O0cjNcmYJpQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz68NO3Ee2O0cjNcmYJpQ" name="setNodes" specification="_r_tHs9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz68dO3Ee2O0cjNcmYJpQ" name="nodes" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz68tO3Ee2O0cjNcmYJpQ" name="setLinkTxAndTotalCost" specification="_r_tuwdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz689O3Ee2O0cjNcmYJpQ" name="linkTxAndTotalCost" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz69NO3Ee2O0cjNcmYJpQ" name="compareTo" specification="_r-e_stO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz69dO3Ee2O0cjNcmYJpQ" name="flow" type="_r4lMA9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAz69tO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// ascending order (0 is highest priority)&#xD;
		return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz699O3Ee2O0cjNcmYJpQ" name="toString" specification="_r4noQtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz6-NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4lzENO3Ee2O0cjNcmYJpQ" name="Flow" visibility="package" method="_sAzT4NO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4lzFNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4lzFdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNOb6tejEe2IjMkQsyA0cQ">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4lzEdO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4lzEtO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4lzE9O3Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4lzFtO3Ee2O0cjNcmYJpQ" type="_r4lMA9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4lzF9O3Ee2O0cjNcmYJpQ" name="Flow" visibility="package" method="_sAzT5dO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4lzGNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4lzGdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNOb69ejEe2IjMkQsyA0cQ">
                  <body>Default constructor Everything is set to the default value, null or an empty&#xD;
	 * ArrayList.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4lzGtO3Ee2O0cjNcmYJpQ" type="_r4lMA9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4lzG9O3Ee2O0cjNcmYJpQ" name="getInitialPriority" method="_sAzT59O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb7NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the initial priority of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4lzHNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4maINO3Ee2O0cjNcmYJpQ" name="getIndex" method="_sAzT6dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb7dejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the index of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4maIdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4maItO3Ee2O0cjNcmYJpQ" name="getNumTxPerLink" method="_sAzT69O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb7tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the numTxPerLink&lt;/h1>&#xD;
	 * &#xD;
	 * @return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4maI9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4maJNO3Ee2O0cjNcmYJpQ" name="getNodes" method="_sAzT7dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb79ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns an ArrayList of all the nodes in the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_tHsNO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4maJtO3Ee2O0cjNcmYJpQ" name="getEdges" method="_sAzT79O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb8NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns an ArrayList of all the edges in the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the edges</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_tHsdO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4nBMdO3Ee2O0cjNcmYJpQ" name="getLinkTxAndTotalCost" method="_sAzT9dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb89ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the linkTxAndTotalCost ArrayList.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_tHstO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4nBM9O3Ee2O0cjNcmYJpQ" name="setInitialPriority" method="_sAzT99O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb9NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Sets the initialPriority of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4nBNNO3Ee2O0cjNcmYJpQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4nBNdO3Ee2O0cjNcmYJpQ" name="setIndex" method="_sAzT-dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb9dejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Sets the index of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4nBNtO3Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4noQNO3Ee2O0cjNcmYJpQ" name="setNumTxPerLink" method="_sAzT-9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb9tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Sets the numTxPerLink of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4noQdO3Ee2O0cjNcmYJpQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4noQtO3Ee2O0cjNcmYJpQ" name="toString" method="_sAz699O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4noQ9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-eYoNO3Ee2O0cjNcmYJpQ" name="addEdge" method="_sAzT8dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb8dejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Adds an edge to the flow.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Sets the edges predecessor to the current flow edgePredecessor. Then adds the&#xD;
	 * edge to the edge ArrayList. Finally updates the flow attribute&#xD;
	 * edgePredecessor to be the newly added edge.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param edge Edge to add to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-eYodO3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-e_sNO3Ee2O0cjNcmYJpQ" name="addNode" method="_sAzT89O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb8tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Adds a node to the flow.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Sets the nodes predecessor to the current flow nodePredecessor. Then adds the&#xD;
	 * node to the node ArrayList. Finally updates the flow attribute&#xD;
	 * nodePredecessor to be the newly added node.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param node Node to add to the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-e_sdO3Ee2O0cjNcmYJpQ" name="node" type="_r4ynYdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-e_stO3Ee2O0cjNcmYJpQ" name="compareTo" method="_sAz69NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-e_s9O3Ee2O0cjNcmYJpQ" name="flow" type="_r4lMA9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-e_tNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_tHs9O3Ee2O0cjNcmYJpQ" name="setNodes" method="_sAz68NO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb99ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Overwrites the current list of nodes with a new list of nodes.&lt;/h1>&#xD;
	 * &#xD;
	 * @param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_tHtNO3Ee2O0cjNcmYJpQ" name="nodes" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_tuwdO3Ee2O0cjNcmYJpQ" name="setLinkTxAndTotalCost" method="_sAz68tO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb-NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Overwrites the current linkTxAndTotalCost with a new&#xD;
	 * linkTxAndTotalCost.&lt;/h1>&#xD;
	 * &#xD;
	 * @param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_tuwtO3Ee2O0cjNcmYJpQ" name="linkTxAndTotalCost" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4pdcNO3Ee2O0cjNcmYJpQ" name="FlowMap">
              <ownedComment xmi:id="_LNKKeNejEe2IjMkQsyA0cQ">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-g04NO3Ee2O0cjNcmYJpQ" general="_r4Qb4NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sARIZNO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sARIZdO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4pdcdO3Ee2O0cjNcmYJpQ" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_LNKKedejEe2IjMkQsyA0cQ">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-g04tO3Ee2O0cjNcmYJpQ" general="_r4Qb4NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sARIZtO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sARIZ9O3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4qEgNO3Ee2O0cjNcmYJpQ" name="GraphViz">
              <ownedComment xmi:id="_LNKKetejEe2IjMkQsyA0cQ">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-iDAdO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sARIaNO3Ee2O0cjNcmYJpQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sARvcNO3Ee2O0cjNcmYJpQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sARvcdO3Ee2O0cjNcmYJpQ" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sARvctO3Ee2O0cjNcmYJpQ" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sARvc9O3Ee2O0cjNcmYJpQ" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sARvddO3Ee2O0cjNcmYJpQ" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sARvd9O3Ee2O0cjNcmYJpQ" name="wfm" visibility="package" type="_r4j94NO3Ee2O0cjNcmYJpQ" association="_sBcNFNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sARvedO3Ee2O0cjNcmYJpQ" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sARve9O3Ee2O0cjNcmYJpQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sASWgdO3Ee2O0cjNcmYJpQ" name="gv" visibility="package" type="_r4qEgNO3Ee2O0cjNcmYJpQ" association="_sBc0INO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz6-dO3Ee2O0cjNcmYJpQ" name="GraphViz" specification="_r-hb8NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz6-tO3Ee2O0cjNcmYJpQ" name="wfm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAz6-9O3Ee2O0cjNcmYJpQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAz6_NO3Ee2O0cjNcmYJpQ" type="_r4qEgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz6_dO3Ee2O0cjNcmYJpQ" name="GraphViz" specification="_r-hb9tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz6_tO3Ee2O0cjNcmYJpQ" name="wfm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sAz6_9O3Ee2O0cjNcmYJpQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAz7ANO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAz7AdO3Ee2O0cjNcmYJpQ" type="_r4qEgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz7AtO3Ee2O0cjNcmYJpQ" name="visualization" specification="_r4qEgdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz7A9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz7BNO3Ee2O0cjNcmYJpQ" name="initializeGraphVizContent" specification="_r4qrk9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz7BdO3Ee2O0cjNcmYJpQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz7BtO3Ee2O0cjNcmYJpQ" name="finalizeGraphVizContent" specification="_r4qrldO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz7B9O3Ee2O0cjNcmYJpQ" name="getGraphVizContent" specification="_r4qrltO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz7CNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz7CdO3Ee2O0cjNcmYJpQ" name="createGraphVizContent" specification="_r4qrmNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz7CtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz7C9O3Ee2O0cjNcmYJpQ" name="addFlowToGraphViz" specification="_r4qrmtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz7DNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAz7DdO3Ee2O0cjNcmYJpQ" name="addSrcNodeToGraphViz" specification="_r4rSoNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAz7DtO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iANO3Ee2O0cjNcmYJpQ" name="addSnkNodeToGraphViz" specification="_r4rSotO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iAdO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iAtO3Ee2O0cjNcmYJpQ" name="finalizeCurrentFlowInGraphViz" specification="_r4rSpNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iA9O3Ee2O0cjNcmYJpQ" name="addNodeName" specification="_r4rSpdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iBNO3Ee2O0cjNcmYJpQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA0iBdO3Ee2O0cjNcmYJpQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4qEgdO3Ee2O0cjNcmYJpQ" name="visualization" method="_sAz7AtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-iDANO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4qrk9O3Ee2O0cjNcmYJpQ" name="initializeGraphVizContent" method="_sAz7BNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4qrlNO3Ee2O0cjNcmYJpQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4qrldO3Ee2O0cjNcmYJpQ" name="finalizeGraphVizContent" method="_sAz7BtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r4qrltO3Ee2O0cjNcmYJpQ" name="getGraphVizContent" method="_sAz7B9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNKxgNejEe2IjMkQsyA0cQ">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4qrl9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4qrmNO3Ee2O0cjNcmYJpQ" name="createGraphVizContent" method="_sAz7CdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4qrmdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4qrmtO3Ee2O0cjNcmYJpQ" name="addFlowToGraphViz" method="_sAz7C9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4qrm9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4rSoNO3Ee2O0cjNcmYJpQ" name="addSrcNodeToGraphViz" method="_sAz7DdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4rSodO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4rSotO3Ee2O0cjNcmYJpQ" name="addSnkNodeToGraphViz" method="_sA0iANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4rSo9O3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4rSpNO3Ee2O0cjNcmYJpQ" name="finalizeCurrentFlowInGraphViz" method="_sA0iAtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r4rSpdO3Ee2O0cjNcmYJpQ" name="addNodeName" visibility="private" method="_sA0iA9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4rSptO3Ee2O0cjNcmYJpQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4rSp9O3Ee2O0cjNcmYJpQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-hb8NO3Ee2O0cjNcmYJpQ" name="GraphViz" visibility="package" method="_sAz6-dO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-hb89O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-hb9NO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-hb8dO3Ee2O0cjNcmYJpQ" name="wfm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-hb8tO3Ee2O0cjNcmYJpQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-hb9dO3Ee2O0cjNcmYJpQ" type="_r4qEgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-hb9tO3Ee2O0cjNcmYJpQ" name="GraphViz" visibility="package" method="_sAz6_dO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-hb-tO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-hb-9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-hb99O3Ee2O0cjNcmYJpQ" name="wfm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-hb-NO3Ee2O0cjNcmYJpQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-hb-dO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-hb_NO3Ee2O0cjNcmYJpQ" type="_r4qEgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4r5sNO3Ee2O0cjNcmYJpQ" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_LNKxgdejEe2IjMkQsyA0cQ">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_r_uV0NO3Ee2O0cjNcmYJpQ" general="_r-jRI9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sASWg9O3Ee2O0cjNcmYJpQ" name="gv" visibility="package" type="_r4qEgNO3Ee2O0cjNcmYJpQ" association="_sBc0I9O3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iBtO3Ee2O0cjNcmYJpQ" name="GraphVizListener" specification="_r-j4MtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iB9O3Ee2O0cjNcmYJpQ" name="gv" type="_r4qEgNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA0iCNO3Ee2O0cjNcmYJpQ" type="_r4r5sNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iCdO3Ee2O0cjNcmYJpQ" name="buildGraphViz" specification="_r-j4N9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iCtO3Ee2O0cjNcmYJpQ" name="gv" type="_r4qEgNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iC9O3Ee2O0cjNcmYJpQ" name="enterWarpName" specification="_r-kfQdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iDNO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-j4OdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iDdO3Ee2O0cjNcmYJpQ" name="exitWarp" specification="_r-lGUNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iDtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-kfRtO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iD9O3Ee2O0cjNcmYJpQ" name="enterFlowName" specification="_r-lGV9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iENO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-lGVdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iEdO3Ee2O0cjNcmYJpQ" name="exitSrcNode" specification="_r-ltZNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iEtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-ltYtO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iE9O3Ee2O0cjNcmYJpQ" name="exitSnkNode" specification="_r-mUcdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iFNO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-ltadO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iFdO3Ee2O0cjNcmYJpQ" name="exitFlow" specification="_r-mUeNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iFtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-mUdtO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-j4MtO3Ee2O0cjNcmYJpQ" name="GraphVizListener" visibility="private" method="_sA0iBtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-j4NNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-j4NdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-j4M9O3Ee2O0cjNcmYJpQ" name="gv" type="_r4qEgNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-j4NtO3Ee2O0cjNcmYJpQ" type="_r4r5sNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-j4N9O3Ee2O0cjNcmYJpQ" name="buildGraphViz" isStatic="true" method="_sA0iCdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-j4ONO3Ee2O0cjNcmYJpQ" name="gv" type="_r4qEgNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-kfQdO3Ee2O0cjNcmYJpQ" name="enterWarpName" method="_sA0iC9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-kfQtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-j4OdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-lGUNO3Ee2O0cjNcmYJpQ" name="exitWarp" method="_sA0iDdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-lGUdO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-kfRtO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-lGV9O3Ee2O0cjNcmYJpQ" name="enterFlowName" method="_sA0iD9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-lGWNO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-lGVdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-ltZNO3Ee2O0cjNcmYJpQ" name="exitSrcNode" method="_sA0iEdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-ltZdO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-ltYtO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-mUcdO3Ee2O0cjNcmYJpQ" name="exitSnkNode" method="_sA0iE9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-mUctO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-ltadO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-mUeNO3Ee2O0cjNcmYJpQ" name="exitFlow" method="_sA0iFdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-mUedO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-mUdtO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4tH0NO3Ee2O0cjNcmYJpQ" name="GuiVisualization">
              <ownedComment xmi:id="_LNKxgtejEe2IjMkQsyA0cQ">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sASWhdO3Ee2O0cjNcmYJpQ" name="frame" visibility="package" type="_r-nikdO3Ee2O0cjNcmYJpQ" association="_sBc0JtO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAS9kdO3Ee2O0cjNcmYJpQ" name="jtable" visibility="package" type="_r-nildO3Ee2O0cjNcmYJpQ" association="_sBdbMdO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA0iF9O3Ee2O0cjNcmYJpQ" name="GuiVisualization" specification="_r4tH0dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA0iGNO3Ee2O0cjNcmYJpQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA0iGdO3Ee2O0cjNcmYJpQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA0iGtO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA0iG9O3Ee2O0cjNcmYJpQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA0iHNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA0iHdO3Ee2O0cjNcmYJpQ" type="_r4tH0NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JENO3Ee2O0cjNcmYJpQ" name="setVisible" specification="_r4tH29O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JEdO3Ee2O0cjNcmYJpQ" name="resizeColumnWidth" specification="_r_u84NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JEtO3Ee2O0cjNcmYJpQ" name="table" type="_r-nildO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4tH0dO3Ee2O0cjNcmYJpQ" name="GuiVisualization" method="_sA0iF9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4tH1dO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4tH1tO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNKxg9ejEe2IjMkQsyA0cQ">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4tH0tO3Ee2O0cjNcmYJpQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4tH09O3Ee2O0cjNcmYJpQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4tH2NO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4tH1NO3Ee2O0cjNcmYJpQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4tH2dO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4tH19O3Ee2O0cjNcmYJpQ" type="_r4tH0NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4tH29O3Ee2O0cjNcmYJpQ" name="setVisible" method="_sA1JENO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNKxhNejEe2IjMkQsyA0cQ">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r_u84NO3Ee2O0cjNcmYJpQ" name="resizeColumnWidth" visibility="private" method="_sA1JEdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_u84dO3Ee2O0cjNcmYJpQ" name="table" type="_r-nildO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4tu4NO3Ee2O0cjNcmYJpQ" name="InputGraphFile">
              <ownedComment xmi:id="_LNKxhdejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAS9k9O3Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAS9lNO3Ee2O0cjNcmYJpQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAS9ldO3Ee2O0cjNcmYJpQ" name="wfm" visibility="private" type="_r4j94NO3Ee2O0cjNcmYJpQ" association="_sBdbNNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAS9l9O3Ee2O0cjNcmYJpQ" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAS9mNO3Ee2O0cjNcmYJpQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sATkoNO3Ee2O0cjNcmYJpQ" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sATkodO3Ee2O0cjNcmYJpQ" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JE9O3Ee2O0cjNcmYJpQ" name="InputGraphFile" specification="_r-pXwNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JFNO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1JFdO3Ee2O0cjNcmYJpQ" type="_r4tu4NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JFtO3Ee2O0cjNcmYJpQ" name="InputGraphFile" specification="_r-pXxdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JF9O3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1JGNO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JGdO3Ee2O0cjNcmYJpQ" type="_r4tu4NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JGtO3Ee2O0cjNcmYJpQ" name="setGraphFileName" specification="_r4uV8NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JG9O3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JHNO3Ee2O0cjNcmYJpQ" name="verifyGraphFileName" specification="_r4uV8tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JHdO3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JHtO3Ee2O0cjNcmYJpQ" name="readGraphFile" specification="_r4uV9NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JH9O3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JIdO3Ee2O0cjNcmYJpQ" name="getInputGraphFileName" specification="_r4uV99O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JItO3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JI9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JJNO3Ee2O0cjNcmYJpQ" name="readGraphFileContents" specification="_r4uV-tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JJdO3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JJtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JJ9O3Ee2O0cjNcmYJpQ" name="printVerboseMessage" specification="_r4u9ANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JKNO3Ee2O0cjNcmYJpQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JKdO3Ee2O0cjNcmYJpQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JKtO3Ee2O0cjNcmYJpQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4uV8NO3Ee2O0cjNcmYJpQ" name="setGraphFileName" visibility="private" method="_sA1JGtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4uV8dO3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4uV8tO3Ee2O0cjNcmYJpQ" name="verifyGraphFileName" visibility="private" method="_sA1JHNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4uV89O3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4uV9NO3Ee2O0cjNcmYJpQ" name="readGraphFile" method="_sA1JHtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4uV9dO3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4uV9tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4uV99O3Ee2O0cjNcmYJpQ" name="getInputGraphFileName" visibility="private" method="_sA1JIdO3Ee2O0cjNcmYJpQ" raisedException="_r_u84tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4uV-NO3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4uV-dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4uV-tO3Ee2O0cjNcmYJpQ" name="readGraphFileContents" visibility="private" method="_sA1JJNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4uV-9O3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4uV_NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4u9ANO3Ee2O0cjNcmYJpQ" name="printVerboseMessage" visibility="private" method="_sA1JJ9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4u9AdO3Ee2O0cjNcmYJpQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4u9AtO3Ee2O0cjNcmYJpQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4u9A9O3Ee2O0cjNcmYJpQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-pXwNO3Ee2O0cjNcmYJpQ" name="InputGraphFile" method="_sA1JE9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-pXwtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-pXw9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-pXwdO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-pXxNO3Ee2O0cjNcmYJpQ" type="_r4tu4NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-pXxdO3Ee2O0cjNcmYJpQ" name="InputGraphFile" method="_sA1JFtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-pXyNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-pXydO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-pXxtO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-pXx9O3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-pXytO3Ee2O0cjNcmYJpQ" type="_r4tu4NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4u9BNO3Ee2O0cjNcmYJpQ" name="InstructionTimeSlot">
              <generalization xmi:id="_r-p-0NO3Ee2O0cjNcmYJpQ" general="_r5FiUdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sATko9O3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sATkpNO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JK9O3Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" specification="_r4vkENO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JLNO3Ee2O0cjNcmYJpQ" type="_r4u9BNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JLdO3Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" specification="_r4vkFNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JLtO3Ee2O0cjNcmYJpQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JL9O3Ee2O0cjNcmYJpQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JMNO3Ee2O0cjNcmYJpQ" type="_r4u9BNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JMdO3Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" specification="_r4vkGtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JMtO3Ee2O0cjNcmYJpQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA1JM9O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1JNNO3Ee2O0cjNcmYJpQ" type="_r4u9BNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4vkENO3Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" method="_sA1JK9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4vkEdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4vkEtO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4vkE9O3Ee2O0cjNcmYJpQ" type="_r4u9BNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4vkFNO3Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" visibility="package" method="_sA1JLdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4vkF9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4vkGNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4vkFdO3Ee2O0cjNcmYJpQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4vkFtO3Ee2O0cjNcmYJpQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4vkGdO3Ee2O0cjNcmYJpQ" type="_r4u9BNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4vkGtO3Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" visibility="package" method="_sA1JMdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4vkHNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4vkHdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4vkG9O3Ee2O0cjNcmYJpQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4vkH9O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4vkHtO3Ee2O0cjNcmYJpQ" type="_r4u9BNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4wLINO3Ee2O0cjNcmYJpQ" name="LatencyAnalysis">
              <ownedComment xmi:id="_LNKxhtejEe2IjMkQsyA0cQ">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sATkpdO3Ee2O0cjNcmYJpQ" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sATkptO3Ee2O0cjNcmYJpQ" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sATkqNO3Ee2O0cjNcmYJpQ" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sATkqtO3Ee2O0cjNcmYJpQ" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAULsNO3Ee2O0cjNcmYJpQ" name="latencyReport" visibility="private" type="_r4gTgNO3Ee2O0cjNcmYJpQ" association="_sBeCQdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAULstO3Ee2O0cjNcmYJpQ" name="program" visibility="private" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBeCRNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAULtNO3Ee2O0cjNcmYJpQ" name="workload" visibility="private" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBepUdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAULttO3Ee2O0cjNcmYJpQ" name="programTable" visibility="private" type="_r47xUNO3Ee2O0cjNcmYJpQ" association="_sBfQYdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAULuNO3Ee2O0cjNcmYJpQ" name="nodeIndex" visibility="private" type="_r-QWMNO3Ee2O0cjNcmYJpQ" association="_sBfQZNO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1JNdO3Ee2O0cjNcmYJpQ" name="LatencyAnalysis" specification="_r-ql4dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1JNtO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1JN9O3Ee2O0cjNcmYJpQ" type="_r4wLINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wINO3Ee2O0cjNcmYJpQ" name="LatencyAnalysis" specification="_r-ql5tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wIdO3Ee2O0cjNcmYJpQ" name="program" type="_r56BsNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1wItO3Ee2O0cjNcmYJpQ" type="_r4wLINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wI9O3Ee2O0cjNcmYJpQ" name="latencyReport" specification="_r4wLIdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wJNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wJdO3Ee2O0cjNcmYJpQ" name="numMatchingTx" specification="_r4wLItO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wJtO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1wJ9O3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1wKNO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1wKdO3Ee2O0cjNcmYJpQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1wKtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4wLIdO3Ee2O0cjNcmYJpQ" name="latencyReport" method="_sA1wI9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-ql69O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4wLItO3Ee2O0cjNcmYJpQ" name="numMatchingTx" method="_sA1wJdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4wLI9O3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4wLJNO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4wyMNO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4wyMdO3Ee2O0cjNcmYJpQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4wyMtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-ql4dO3Ee2O0cjNcmYJpQ" name="LatencyAnalysis" visibility="package" method="_sA1JNdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-ql49O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-ql5NO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-ql4tO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-ql5dO3Ee2O0cjNcmYJpQ" type="_r4wLINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-ql5tO3Ee2O0cjNcmYJpQ" name="LatencyAnalysis" visibility="package" method="_sA1wINO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-ql6NO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-ql6dO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-ql59O3Ee2O0cjNcmYJpQ" name="program" type="_r56BsNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-ql6tO3Ee2O0cjNcmYJpQ" type="_r4wLINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4xZQNO3Ee2O0cjNcmYJpQ" name="LatencyVisualization">
              <ownedComment xmi:id="_LNKxh9ejEe2IjMkQsyA0cQ">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-rM9dO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAUywtO3Ee2O0cjNcmYJpQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAUyw9O3Ee2O0cjNcmYJpQ" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAUyxNO3Ee2O0cjNcmYJpQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAUyxdO3Ee2O0cjNcmYJpQ" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAUyxtO3Ee2O0cjNcmYJpQ" name="warp" visibility="private" type="_r5d80NO3Ee2O0cjNcmYJpQ" association="_sBf3cdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAUyyNO3Ee2O0cjNcmYJpQ" name="la" visibility="private" type="_r4wLINO3Ee2O0cjNcmYJpQ" association="_sBf3dNO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wK9O3Ee2O0cjNcmYJpQ" name="LatencyVisualization" specification="_r-rM8NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wLNO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1wLdO3Ee2O0cjNcmYJpQ" type="_r4xZQNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-rM8NO3Ee2O0cjNcmYJpQ" name="LatencyVisualization" visibility="package" method="_sA1wK9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-rM8tO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-rM89O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-rM8dO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-rM9NO3Ee2O0cjNcmYJpQ" type="_r4xZQNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4yAUNO3Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_r_vj8NO3Ee2O0cjNcmYJpQ" client="_r4yAUNO3Ee2O0cjNcmYJpQ" supplier="_r-ZgJtO3Ee2O0cjNcmYJpQ" contract="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wLtO3Ee2O0cjNcmYJpQ" name="compare" specification="_r_wLAdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wL9O3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1wMNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1wMdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_wLAdO3Ee2O0cjNcmYJpQ" name="compare" method="_sA1wLtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_wLAtO3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_wLA9O3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_wLBNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4yAUtO3Ee2O0cjNcmYJpQ" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_r_wyENO3Ee2O0cjNcmYJpQ" client="_r4yAUtO3Ee2O0cjNcmYJpQ" supplier="_r-ZgJtO3Ee2O0cjNcmYJpQ" contract="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wMtO3Ee2O0cjNcmYJpQ" name="compare" specification="_r_wyEtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wM9O3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1wNNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1wNdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_wyEtO3Ee2O0cjNcmYJpQ" name="compare" method="_sA1wMtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_wyE9O3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_wyFNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_wyFdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4ynYdO3Ee2O0cjNcmYJpQ" name="Node">
              <generalization xmi:id="_r-sbFdO3Ee2O0cjNcmYJpQ" general="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAVZ0NO3Ee2O0cjNcmYJpQ" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAVZ0dO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAVZ0tO3Ee2O0cjNcmYJpQ" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAVZ09O3Ee2O0cjNcmYJpQ" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAVZ1NO3Ee2O0cjNcmYJpQ" name="edges" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" isReadOnly="true" association="_sBgegdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAVZ1tO3Ee2O0cjNcmYJpQ" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAVZ19O3Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r_xZINO3Ee2O0cjNcmYJpQ" client="_r4ynYdO3Ee2O0cjNcmYJpQ" supplier="_r_j9wdO3Ee2O0cjNcmYJpQ" contract="_r_j9wdO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wNtO3Ee2O0cjNcmYJpQ" name="Node" specification="_r4zOcNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wN9O3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1wONO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1wOdO3Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA1wOtO3Ee2O0cjNcmYJpQ" type="_r4ynYdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		setPriority(priority);&#xD;
		this.index = index;&#xD;
		this.channel = DEFAULT_CHANNEL;&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wO9O3Ee2O0cjNcmYJpQ" name="compareTo" specification="_r-r0ANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wPNO3Ee2O0cjNcmYJpQ" name="node" type="_r4ynYdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA1wPdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wPtO3Ee2O0cjNcmYJpQ" name="toString" specification="_r4zOd9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wP9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wQNO3Ee2O0cjNcmYJpQ" name="addEdge" specification="_r-sbE9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wQdO3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wQtO3Ee2O0cjNcmYJpQ" name="addConflict" specification="_r4zOfNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wQ9O3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wRNO3Ee2O0cjNcmYJpQ" name="numEdges" specification="_r4z1gNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wRdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA1wRtO3Ee2O0cjNcmYJpQ" name="print" specification="_r4z1gtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA1wR9O3Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;, headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XMNO3Ee2O0cjNcmYJpQ" name="print" specification="_r4z1h9O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge : edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4zOcNO3Ee2O0cjNcmYJpQ" name="Node" visibility="package" method="_sA1wNtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4zOdNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4zOddO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4zOcdO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4zOctO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4zOc9O3Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4zOdtO3Ee2O0cjNcmYJpQ" type="_r4ynYdO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4zOd9O3Ee2O0cjNcmYJpQ" name="toString" method="_sA1wPtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4zOeNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4zOfNO3Ee2O0cjNcmYJpQ" name="addConflict" method="_sA1wQtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4zOfdO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4z1gNO3Ee2O0cjNcmYJpQ" name="numEdges" method="_sA1wRNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4z1gdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4z1gtO3Ee2O0cjNcmYJpQ" name="print" method="_sA1wRtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r4z1g9O3Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4z1h9O3Ee2O0cjNcmYJpQ" name="print" method="_sA2XMNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r-r0ANO3Ee2O0cjNcmYJpQ" name="compareTo" method="_sA1wO9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-r0AdO3Ee2O0cjNcmYJpQ" name="node" type="_r4ynYdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-r0AtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-sbE9O3Ee2O0cjNcmYJpQ" name="addEdge" method="_sA1wQNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-sbFNO3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r40ckNO3Ee2O0cjNcmYJpQ" name="NodeMap">
              <ownedComment xmi:id="_LNKxiNejEe2IjMkQsyA0cQ">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-tCINO3Ee2O0cjNcmYJpQ" general="_r4Qb4NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAVZ2NO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAVZ2dO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r41DoNO3Ee2O0cjNcmYJpQ" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_LNKxidejEe2IjMkQsyA0cQ">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-tCKNO3Ee2O0cjNcmYJpQ" general="_r5IlotO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XMdO3Ee2O0cjNcmYJpQ" name="NonPreemptiveSchedule" specification="_r-tCItO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XMtO3Ee2O0cjNcmYJpQ" name="poset" type="_r42RwtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2XM9O3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2XNNO3Ee2O0cjNcmYJpQ" type="_r41DoNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-tCItO3Ee2O0cjNcmYJpQ" name="NonPreemptiveSchedule" visibility="package" method="_sA2XMdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-tCJdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-tCJtO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-tCI9O3Ee2O0cjNcmYJpQ" name="poset" type="_r42RwtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-tCJNO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-tCJ9O3Ee2O0cjNcmYJpQ" type="_r41DoNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r41DodO3Ee2O0cjNcmYJpQ" name="NotImplentedVisualization">
              <generalization xmi:id="_r-tpMdO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAWA4NO3Ee2O0cjNcmYJpQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAWA4dO3Ee2O0cjNcmYJpQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAWA4tO3Ee2O0cjNcmYJpQ" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAWA49O3Ee2O0cjNcmYJpQ" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAWA5NO3Ee2O0cjNcmYJpQ" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAWA5dO3Ee2O0cjNcmYJpQ" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XNdO3Ee2O0cjNcmYJpQ" name="NotImplentedVisualization" specification="_r41DotO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XNtO3Ee2O0cjNcmYJpQ" type="_r41DodO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XN9O3Ee2O0cjNcmYJpQ" name="NotImplentedVisualization" specification="_r41qsNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XONO3Ee2O0cjNcmYJpQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2XOdO3Ee2O0cjNcmYJpQ" type="_r41DodO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XOtO3Ee2O0cjNcmYJpQ" name="visualization" specification="_r41qtdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XO9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r41DotO3Ee2O0cjNcmYJpQ" name="NotImplentedVisualization" visibility="package" method="_sA2XNdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r41Do9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r41DpNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r41DpdO3Ee2O0cjNcmYJpQ" type="_r41DodO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r41qsNO3Ee2O0cjNcmYJpQ" name="NotImplentedVisualization" visibility="package" method="_sA2XN9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r41qstO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r41qs9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r41qsdO3Ee2O0cjNcmYJpQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r41qtNO3Ee2O0cjNcmYJpQ" type="_r41DodO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r41qtdO3Ee2O0cjNcmYJpQ" name="visualization" method="_sA2XOtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-tpMNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r42RwNO3Ee2O0cjNcmYJpQ" name="PeriodComparator">
              <interfaceRealization xmi:id="_r_yAMNO3Ee2O0cjNcmYJpQ" client="_r42RwNO3Ee2O0cjNcmYJpQ" supplier="_r-ZgJtO3Ee2O0cjNcmYJpQ" contract="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XPNO3Ee2O0cjNcmYJpQ" name="compare" specification="_r_yAMtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XPdO3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2XPtO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2XP9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_yAMtO3Ee2O0cjNcmYJpQ" name="compare" method="_sA2XPNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_yAM9O3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_yANNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_yANdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r42RwtO3Ee2O0cjNcmYJpQ" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_LNLYkNejEe2IjMkQsyA0cQ">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAWA5tO3Ee2O0cjNcmYJpQ" name="activations" visibility="private" type="_r4WigNO3Ee2O0cjNcmYJpQ" association="_sBgehNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAWA6NO3Ee2O0cjNcmYJpQ" name="workload" visibility="private" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBhFkdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAWA6tO3Ee2O0cjNcmYJpQ" name="flows" visibility="protected" type="_r4lMA9O3Ee2O0cjNcmYJpQ" association="_sBhFlNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_sAWA7NO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sAWA7dO3Ee2O0cjNcmYJpQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAWA69O3Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAWn8dO3Ee2O0cjNcmYJpQ" name="nodes" visibility="private" type="_r4ynYdO3Ee2O0cjNcmYJpQ" association="_sBhFl9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_sAWn89O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sAWn9NO3Ee2O0cjNcmYJpQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAWn8tO3Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAWn9tO3Ee2O0cjNcmYJpQ" name="nodeMap" visibility="private" type="_r40ckNO3Ee2O0cjNcmYJpQ" association="_sBhsodO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAWn-NO3Ee2O0cjNcmYJpQ" name="priorityQueue" visibility="private" type="_r4-0ptO3Ee2O0cjNcmYJpQ" association="_sBhspNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAWn-9O3Ee2O0cjNcmYJpQ" name="nodeConnectivityMap" visibility="protected" type="_r-QWMNO3Ee2O0cjNcmYJpQ" association="_sBiTsNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAXPAtO3Ee2O0cjNcmYJpQ" name="activationMap" visibility="package" type="_r4pdcdO3Ee2O0cjNcmYJpQ" association="_sBiTs9O3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XQNO3Ee2O0cjNcmYJpQ" name="Poset" specification="_r-uQQdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XQdO3Ee2O0cjNcmYJpQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2XQtO3Ee2O0cjNcmYJpQ" type="_r42RwtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XQ9O3Ee2O0cjNcmYJpQ" name="getNodeConnectivity" specification="_r4240NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XRNO3Ee2O0cjNcmYJpQ" type="_r-QWMNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XRdO3Ee2O0cjNcmYJpQ" name="getNodeNames" specification="_r4240tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XRtO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XR9O3Ee2O0cjNcmYJpQ" name="getNodesNamesOrderedAlphabetically" specification="_r43f4dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XSNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA2XSdO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XStO3Ee2O0cjNcmYJpQ" name="buildPosetOfActivations" specification="_r43f5dO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XS9O3Ee2O0cjNcmYJpQ" name="createEdgeLists" specification="_r43f5tO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XTNO3Ee2O0cjNcmYJpQ" name="createConflictLists" specification="_r43f59O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XTdO3Ee2O0cjNcmYJpQ" name="createGlobalConflictLists" specification="_r43f6NO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XTtO3Ee2O0cjNcmYJpQ" name="createLocalConflictLists" specification="_r43f6dO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2XT9O3Ee2O0cjNcmYJpQ" name="findCoordinator" specification="_r_ynRNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2XUNO3Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2XUdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-QNO3Ee2O0cjNcmYJpQ" name="buildTxArray" specification="_r_zOUdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-QdO3Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2-QtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA2-Q9O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-RNO3Ee2O0cjNcmYJpQ" name="createInitialActivations" specification="_r44G8NO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-RdO3Ee2O0cjNcmYJpQ" name="getMaxTx" specification="_r-u3UNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-RtO3Ee2O0cjNcmYJpQ" name="node" type="_r4ynYdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2-R9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-SNO3Ee2O0cjNcmYJpQ" name="getActivation" specification="_r-u3U9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-SdO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2-StO3Ee2O0cjNcmYJpQ" name="node" type="_r4ynYdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2-S9O3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-TNO3Ee2O0cjNcmYJpQ" name="getHyperPeriod" specification="_r44G8dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-TdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-TtO3Ee2O0cjNcmYJpQ" name="getMaxPhase" specification="_r44G89O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-T9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-UNO3Ee2O0cjNcmYJpQ" name="orderActivations" specification="_r44G9dO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-UdO3Ee2O0cjNcmYJpQ" name="getNextActivation" specification="_r44G9tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-UtO3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-U9O3Ee2O0cjNcmYJpQ" name="addActivation" specification="_r-u3WNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-VNO3Ee2O0cjNcmYJpQ" name="activation" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-VdO3Ee2O0cjNcmYJpQ" name="findBaseStation" specification="_r44G99O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-VtO3Ee2O0cjNcmYJpQ" type="_r4ynYdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4240NO3Ee2O0cjNcmYJpQ" name="getNodeConnectivity" visibility="private" method="_sA2XQ9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_ynQtO3Ee2O0cjNcmYJpQ" type="_r-QWMNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4240tO3Ee2O0cjNcmYJpQ" name="getNodeNames" method="_sA2XRdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_ynQ9O3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r43f4dO3Ee2O0cjNcmYJpQ" name="getNodesNamesOrderedAlphabetically" method="_sA2XR9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r43f4tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r43f49O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r43f5dO3Ee2O0cjNcmYJpQ" name="buildPosetOfActivations" method="_sA2XStO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r43f5tO3Ee2O0cjNcmYJpQ" name="createEdgeLists" visibility="private" method="_sA2XS9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r43f59O3Ee2O0cjNcmYJpQ" name="createConflictLists" visibility="private" method="_sA2XTNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r43f6NO3Ee2O0cjNcmYJpQ" name="createGlobalConflictLists" visibility="private" method="_sA2XTdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r43f6dO3Ee2O0cjNcmYJpQ" name="createLocalConflictLists" visibility="private" method="_sA2XTtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r44G8NO3Ee2O0cjNcmYJpQ" name="createInitialActivations" visibility="private" method="_sA2-RNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r44G8dO3Ee2O0cjNcmYJpQ" name="getHyperPeriod" method="_sA2-TNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r44G8tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r44G89O3Ee2O0cjNcmYJpQ" name="getMaxPhase" method="_sA2-TtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r44G9NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r44G9dO3Ee2O0cjNcmYJpQ" name="orderActivations" method="_sA2-UNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r44G9tO3Ee2O0cjNcmYJpQ" name="getNextActivation" method="_sA2-UdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNLYk9ejEe2IjMkQsyA0cQ">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-u3V9O3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r44G99O3Ee2O0cjNcmYJpQ" name="findBaseStation" visibility="protected" method="_sA2-VdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNLYldejEe2IjMkQsyA0cQ">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-u3WtO3Ee2O0cjNcmYJpQ" type="_r4ynYdO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-uQQdO3Ee2O0cjNcmYJpQ" name="Poset" visibility="package" method="_sA2XQNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-uQQ9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-uQRNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNLYkdejEe2IjMkQsyA0cQ">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-uQQtO3Ee2O0cjNcmYJpQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-uQRdO3Ee2O0cjNcmYJpQ" type="_r42RwtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-u3UNO3Ee2O0cjNcmYJpQ" name="getMaxTx" visibility="private" method="_sA2-RdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-u3UdO3Ee2O0cjNcmYJpQ" name="node" type="_r4ynYdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-u3UtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-u3U9O3Ee2O0cjNcmYJpQ" name="getActivation" visibility="private" method="_sA2-SNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-u3VNO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-u3VdO3Ee2O0cjNcmYJpQ" name="node" type="_r4ynYdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-u3VtO3Ee2O0cjNcmYJpQ" type="_r4RqANO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-u3WNO3Ee2O0cjNcmYJpQ" name="addActivation" method="_sA2-U9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNLYlNejEe2IjMkQsyA0cQ">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-u3WdO3Ee2O0cjNcmYJpQ" name="activation" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_ynRNO3Ee2O0cjNcmYJpQ" name="findCoordinator" visibility="protected" method="_sA2XT9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNLYktejEe2IjMkQsyA0cQ">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_ynRdO3Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_ynRtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_zOUdO3Ee2O0cjNcmYJpQ" name="buildTxArray" visibility="private" method="_sA2-QNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_zOUtO3Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_zOU9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_zOVNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r45VENO3Ee2O0cjNcmYJpQ" name="PreemptiveSchedule">
              <ownedComment xmi:id="_LNLYltejEe2IjMkQsyA0cQ">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-xTn9O3Ee2O0cjNcmYJpQ" general="_r5IlotO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-V9O3Ee2O0cjNcmYJpQ" name="PreemptiveSchedule" specification="_r-veYNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-WNO3Ee2O0cjNcmYJpQ" name="poset" type="_r42RwtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2-WdO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2-WtO3Ee2O0cjNcmYJpQ" type="_r45VENO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-W9O3Ee2O0cjNcmYJpQ" name="continueSearch" specification="_r-wFcdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-XNO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2-XdO3Ee2O0cjNcmYJpQ" name="activation" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2-XtO3Ee2O0cjNcmYJpQ" type="_r_z1YNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-X9O3Ee2O0cjNcmYJpQ" name="toProgram" specification="_r458INO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-YNO3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-YdO3Ee2O0cjNcmYJpQ" name="findPreeptiveChannelAndTime" specification="_r-wFeNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-YtO3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2-Y9O3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2-ZNO3Ee2O0cjNcmYJpQ" type="_r_z1YNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-ZdO3Ee2O0cjNcmYJpQ" name="findAdditionalTime" specification="_r-wsgNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-ZtO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2-Z9O3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2-aNO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA2-adO3Ee2O0cjNcmYJpQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2-atO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA2-a9O3Ee2O0cjNcmYJpQ" name="findMaxTimeAvailable" specification="_r-wshtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA2-bNO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA2-bdO3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA3lUNO3Ee2O0cjNcmYJpQ" type="_r_z1YNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lUdO3Ee2O0cjNcmYJpQ" name="availableTime" specification="_r-wsidO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lUtO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA3lU9O3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA3lVNO3Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA3lVdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lVtO3Ee2O0cjNcmYJpQ" name="addToSchedule" specification="_r-xTk9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lV9O3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA3lWNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA3lWdO3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA3lWtO3Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA3lW9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lXNO3Ee2O0cjNcmYJpQ" name="addToSchedule" specification="_r-xTmdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lXdO3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA3lXtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r458INO3Ee2O0cjNcmYJpQ" name="toProgram" method="_sA2-X9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-wFd9O3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-veYNO3Ee2O0cjNcmYJpQ" name="PreemptiveSchedule" visibility="package" method="_sA2-V9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-veY9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-veZNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-veYdO3Ee2O0cjNcmYJpQ" name="poset" type="_r42RwtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-veYtO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-wFcNO3Ee2O0cjNcmYJpQ" type="_r45VENO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-wFcdO3Ee2O0cjNcmYJpQ" name="continueSearch" visibility="protected" method="_sA2-W9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-wFctO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-wFc9O3Ee2O0cjNcmYJpQ" name="activation" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_z1YtO3Ee2O0cjNcmYJpQ" type="_r_z1YNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-wFeNO3Ee2O0cjNcmYJpQ" name="findPreeptiveChannelAndTime" visibility="private" method="_sA2-YdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-wFedO3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-wFetO3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_z1Y9O3Ee2O0cjNcmYJpQ" type="_r_z1YNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-wsgNO3Ee2O0cjNcmYJpQ" name="findAdditionalTime" visibility="private" method="_sA2-ZdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-wsgdO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-wsgtO3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-wsg9O3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-wshNO3Ee2O0cjNcmYJpQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_z1ZNO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-wshtO3Ee2O0cjNcmYJpQ" name="findMaxTimeAvailable" visibility="private" method="_sA2-a9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-wsh9O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-wsiNO3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_z1ZdO3Ee2O0cjNcmYJpQ" type="_r_z1YNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-wsidO3Ee2O0cjNcmYJpQ" name="availableTime" visibility="private" method="_sA3lUdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-wsitO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-xTkNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xTkdO3Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xTktO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xTk9O3Ee2O0cjNcmYJpQ" name="addToSchedule" visibility="private" method="_sA3lVtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-xTlNO3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-xTldO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xTltO3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xTl9O3Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xTmNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xTmdO3Ee2O0cjNcmYJpQ" name="addToSchedule" visibility="protected" method="_sA3lXNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-xTmtO3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-xTm9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r47KQNO3Ee2O0cjNcmYJpQ" name="PriorityComparator">
              <interfaceRealization xmi:id="_r_0ccNO3Ee2O0cjNcmYJpQ" client="_r47KQNO3Ee2O0cjNcmYJpQ" supplier="_r-ZgJtO3Ee2O0cjNcmYJpQ" contract="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lX9O3Ee2O0cjNcmYJpQ" name="compare" specification="_r_0cctO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lYNO3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA3lYdO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA3lYtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_0cctO3Ee2O0cjNcmYJpQ" name="compare" method="_sA3lX9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_0cc9O3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_0cdNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_0cddO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r47xUNO3Ee2O0cjNcmYJpQ" name="ProgramSchedule">
              <generalization xmi:id="_r-x6oNO3Ee2O0cjNcmYJpQ" general="_r5P6Y9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAX2ENO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAX2EdO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lY9O3Ee2O0cjNcmYJpQ" name="ProgramSchedule" specification="_r47xUdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lZNO3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lZdO3Ee2O0cjNcmYJpQ" name="ProgramSchedule" specification="_r47xVdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lZtO3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA3lZ9O3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA3laNO3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r47xUdO3Ee2O0cjNcmYJpQ" name="ProgramSchedule" method="_sA3lY9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r47xUtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r47xU9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r47xVNO3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r47xVdO3Ee2O0cjNcmYJpQ" name="ProgramSchedule" visibility="package" method="_sA3lZdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r47xWNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r47xWdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r47xVtO3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r47xV9O3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r47xWtO3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r48YYNO3Ee2O0cjNcmYJpQ" name="ProgramVisualization">
              <ownedComment xmi:id="_LNLYmNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-yhudO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAX2EtO3Ee2O0cjNcmYJpQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAX2E9O3Ee2O0cjNcmYJpQ" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAX2FNO3Ee2O0cjNcmYJpQ" name="sourceCode" visibility="private" type="_r47xUNO3Ee2O0cjNcmYJpQ" association="_sBiTttO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAX2FtO3Ee2O0cjNcmYJpQ" name="program" visibility="private" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBi6wdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAX2GNO3Ee2O0cjNcmYJpQ" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3ladO3Ee2O0cjNcmYJpQ" name="ProgramVisualization" specification="_r-yhsdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3latO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA3la9O3Ee2O0cjNcmYJpQ" type="_r48YYNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lbNO3Ee2O0cjNcmYJpQ" name="displayVisualization" specification="_r48YYdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lbdO3Ee2O0cjNcmYJpQ" type="_r4tH0NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lbtO3Ee2O0cjNcmYJpQ" name="createHeader" specification="_r48YZdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lb9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lcNO3Ee2O0cjNcmYJpQ" name="createFooter" specification="_r48_ctO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lcdO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lctO3Ee2O0cjNcmYJpQ" name="createColumnHeader" specification="_r48_dtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3lc9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA3ldNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3lddO3Ee2O0cjNcmYJpQ" name="createVisualizationData" specification="_r48_fdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3ldtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA3ld9O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA3leNO3Ee2O0cjNcmYJpQ" name="createTitle" specification="_r49mhtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA3ledO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r48YYdO3Ee2O0cjNcmYJpQ" name="displayVisualization" method="_sA3lbNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-yhttO3Ee2O0cjNcmYJpQ" type="_r4tH0NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r48YZdO3Ee2O0cjNcmYJpQ" name="createHeader" visibility="protected" method="_sA3lbtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-yht9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r48_ctO3Ee2O0cjNcmYJpQ" name="createFooter" visibility="protected" method="_sA3lcNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-yhuNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r48_dtO3Ee2O0cjNcmYJpQ" name="createColumnHeader" visibility="protected" method="_sA3lctO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r48_d9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r48_eNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r48_fdO3Ee2O0cjNcmYJpQ" name="createVisualizationData" visibility="protected" method="_sA3lddO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r49mgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r49mgdO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r49mhtO3Ee2O0cjNcmYJpQ" name="createTitle" visibility="private" method="_sA3leNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r49mh9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-yhsdO3Ee2O0cjNcmYJpQ" name="ProgramVisualization" visibility="package" method="_sA3ladO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-yhs9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-yhtNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-yhstO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-yhtdO3Ee2O0cjNcmYJpQ" type="_r48YYNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4-NkNO3Ee2O0cjNcmYJpQ" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_r_1DgtO3Ee2O0cjNcmYJpQ" client="_r4-NkNO3Ee2O0cjNcmYJpQ" supplier="_r-ZgJtO3Ee2O0cjNcmYJpQ" contract="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MYNO3Ee2O0cjNcmYJpQ" name="compare" specification="_r_1DhNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MYdO3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4MYtO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4MY9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_1DhNO3Ee2O0cjNcmYJpQ" name="compare" method="_sA4MYNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_1DhdO3Ee2O0cjNcmYJpQ" name="obj1" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_1DhtO3Ee2O0cjNcmYJpQ" name="obj2" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_1Dh9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4-0oNO3Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue">
              <generalization xmi:id="_r4_bsdO3Ee2O0cjNcmYJpQ" general="_r4-0ptO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAYdINO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAYdIdO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MZNO3Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue" specification="_r4-0otO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MZdO3Ee2O0cjNcmYJpQ" type="_r4-0oNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MZtO3Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue" specification="_r-zIwNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MZ9O3Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_r-tpMtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4MaNO3Ee2O0cjNcmYJpQ" type="_r4-0oNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4-0otO3Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue" visibility="package" method="_sA4MZNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r4-0o9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4-0pNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4-0pdO3Ee2O0cjNcmYJpQ" type="_r4-0oNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-zIwNO3Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue" visibility="package" method="_sA4MZtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-zIwtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-zIw9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-zIwdO3Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_r-tpMtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-zIxNO3Ee2O0cjNcmYJpQ" type="_r4-0oNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4_bs9O3Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_J-2kQNejEe2IjMkQsyA0cQ">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages&#xD;
transmitted in flows for the WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The&#xD;
end-to-end reliability for each flow, flow:src->sink, is computed iteratively&#xD;
as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released.&#xD;
All other initial probabilities are 0.0. (That is, the reset of the nodes in&#xD;
the flow have an initial probability value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState =&#xD;
(1-M)*PrevSnkNodeState + M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by&#xD;
the node SinkNode. Thus, the NewSinkNodeState probability will increase each&#xD;
time a push or pull is executed with SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the&#xD;
message reaching that node, and the end-to-end reliability of a flow is the&#xD;
value of the last Flow:SinkNode probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities&#xD;
the comprise the ReliablityMatrix, which is the core of the file&#xD;
visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the&#xD;
instructions for each node, in each time slot, to extract the src and snk&#xD;
nodes in the instruction and then apply the message success probability&#xD;
equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to&#xD;
extract the src and snk nodes from the instruction string in a program&#xD;
schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAYdItO3Ee2O0cjNcmYJpQ" name="DEFAULT_E2E" visibility="private" isLeaf="true" isStatic="true" type="_r_1qktO3Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAYdI9O3Ee2O0cjNcmYJpQ" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAYdJNO3Ee2O0cjNcmYJpQ" name="DEFAULT_MINPACKETRECEPTIONRATE" visibility="private" isLeaf="true" isStatic="true" type="_r_1qktO3Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAYdJdO3Ee2O0cjNcmYJpQ" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAYdJtO3Ee2O0cjNcmYJpQ" name="program" visibility="public" type="_r56BsNO3Ee2O0cjNcmYJpQ" isReadOnly="true" association="_sBi6xNO3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAYdJ9O3Ee2O0cjNcmYJpQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAYdKdO3Ee2O0cjNcmYJpQ" name="e2e" visibility="private" type="_r_1qktO3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAYdKtO3Ee2O0cjNcmYJpQ" value="DEFAULT_E2E"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAZEMdO3Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" visibility="private" type="_r_1qktO3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAZEMtO3Ee2O0cjNcmYJpQ" value="DEFAULT_MINPACKETRECEPTIONRATE"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAZENNO3Ee2O0cjNcmYJpQ" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAZENdO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAZEN9O3Ee2O0cjNcmYJpQ" name="fixed" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAZEONO3Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MadO3Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" specification="_r-0W4tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MatO3Ee2O0cjNcmYJpQ" name="program" type="_r56BsNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4Ma9O3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MbNO3Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" specification="_r_1qlNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MbdO3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4MbtO3Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4Mb9O3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
		this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4McNO3Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" specification="_r5ACwNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4McdO3Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA4MctO3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numFaults = numFaults;&#xD;
		this.fixed = true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4Mc9O3Ee2O0cjNcmYJpQ" name="getReliabilities" specification="_r5ACxdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MdNO3Ee2O0cjNcmYJpQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO implement this operation&#xD;
		return null;&#xD;
//		throw new UnsupportedOperationException(&quot;not implemented&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MddO3Ee2O0cjNcmYJpQ" name="verifyReliabilities" specification="_r5ACxtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MdtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4Me9O3Ee2O0cjNcmYJpQ" name="getM" specification="_r5Ap0tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_J-1WINejEe2IjMkQsyA0cQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
                <language>java</language>
                <body>// should be private&#xD;
		return this.minPacketReceptionRate;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MfdO3Ee2O0cjNcmYJpQ" name="getE2E" specification="_r5Ap1NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_J-1WIdejEe2IjMkQsyA0cQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
                <language>java</language>
                <body>// should be private&#xD;
		return this.e2e;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4Mg9O3Ee2O0cjNcmYJpQ" name="numTxPerLinkAndTotalTxCost" specification="_r-098NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MhNO3Ee2O0cjNcmYJpQ" name="flow" type="_r4lMA9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4MhdO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fixed) {&#xD;
//			return getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
			return getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
		}&#xD;
//		return numTxAttemptsPerLinkAndTotalTxAttempts(flow);&#xD;
		return getTxPerLinkAndTotalTxCost(flow);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MhtO3Ee2O0cjNcmYJpQ" name="getFixedTxPerLinkAndTotalTxCost" specification="_r-0989O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4Mh9O3Ee2O0cjNcmYJpQ" name="flow" type="_r4lMA9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4MiNO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
		var nNodesInFlow = nodesInFlow.size();&#xD;
		ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
		/*&#xD;
		 * Each node will have at most numFaults+1 transmissions. Because we don't know&#xD;
		 * which nodes will send the message over an edge, we give the cost to each&#xD;
		 * node.&#xD;
		 */&#xD;
		for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
			txArrayList.add(numFaults + 1);&#xD;
		}&#xD;
		/*&#xD;
		 * now compute the maximum # of TX, assuming at most numFaults occur on an edge&#xD;
		 * per period, and each edge requires at least one successful TX.&#xD;
		 */&#xD;
		var numEdgesInFlow = nNodesInFlow - 1;&#xD;
		var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
		txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
		return txArrayList;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4MidO3Ee2O0cjNcmYJpQ" name="getTxPerLinkAndTotalTxCost" specification="_r-1lANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4MitO3Ee2O0cjNcmYJpQ" name="flow" type="_r4lMA9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4Mi9O3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// I have no idea what this should be set to and we can't take it in as a&#xD;
		// parameter according to the homework&#xD;
		Double M = 0.99;&#xD;
&#xD;
		var nodesInFlow = flow.nodes;&#xD;
		// The last entry will contain the worst-case cost of transmitting E2E in&#xD;
		// isolation&#xD;
		var nNodesInFlow = nodesInFlow.size();&#xD;
		// var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
		// Array to track nPushes for each node in this flow (same as nTx per link)&#xD;
		// Collections.nCopies initalized to 0&#xD;
		var nPushes = new ArrayList&lt;Integer>(Collections.nCopies(nNodesInFlow + 1, 0));&#xD;
		// deprecated&#xD;
		// Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
		var nHops = nNodesInFlow - 1;&#xD;
		// minLinkReliablityNeded is the minimum reliability needed per link in a flow&#xD;
		// to hit E2E&#xD;
		// reliability for the flow&#xD;
		// use max to handle rounding error when e2e == 1.0&#xD;
		Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops)));&#xD;
		// Now compute reliability of packet reaching each node in the given time slot&#xD;
		// Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
		// each row is a time slot, stating at time 0&#xD;
		// each column represents the reliability of the packet reaching that node at&#xD;
		// the current time slot (i.e., the row it is in)&#xD;
		// will add rows as we compute reliabilities until the final reliability is&#xD;
		// reached for all nodes.&#xD;
		var reliabilityWindow = new ReliabilityTable(); // Vector&lt;Vector&lt;Double>>();&#xD;
		var newReliabilityRow = new ReliabilityRow();&#xD;
		for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
			// create the the row initialized with 0.0 values&#xD;
			newReliabilityRow.add(0.0);&#xD;
		}&#xD;
		// now add row to the reliability window, Time 0&#xD;
		reliabilityWindow.add(newReliabilityRow);&#xD;
//		ReliabilityRow tmpVector = reliabilityWindow.get(0);&#xD;
		// could be an issue here as idk if this needs to be copied or not&#xD;
		var currentReliabilityRow = reliabilityWindow.get(0); // tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
		// var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
		// Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
		// but I din't want to mess with the newReliablityRow vector I use below&#xD;
		// So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
		// We will then update this row with computed values for each node and put it&#xD;
		// back in the matrix&#xD;
		currentReliabilityRow.set(0, 1.0); // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
		// the analysis will end when the e2e reliability matrix is met, initially the&#xD;
		// state&#xD;
		// is not met and will be 0 with this statement&#xD;
		Double e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
		var timeSlot = 0; // start time at 0&#xD;
		// change to while and increment increment timeSlot because we don't know how&#xD;
		// long this schedule window will last&#xD;
		while (e2eReliabilityState &lt; e2e) {&#xD;
			var prevReliabilityRow = currentReliabilityRow;&#xD;
			// would be reliabilityWindow[timeSlot] if working through a schedule&#xD;
			currentReliabilityRow = newReliabilityRow; // .toArray(new Double[newReliabilityRow.size()]);&#xD;
			// Now use each flow:src->sink to update reliability computations&#xD;
			// this is the update formula for the state probabilities&#xD;
			// nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
			// use MinLQ for M in above equation&#xD;
			// NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
			// loop through each node in the flow and update the states for each line (i.e)&#xD;
			// sink->src pair&#xD;
			for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) {&#xD;
				var flowSrcNodeindex = nodeIndex;&#xD;
				var flowSnkNodeindex = nodeIndex + 1;&#xD;
				var prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex); // [flowSrcNodeindex];&#xD;
				var prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex); // [flowSnkNodeindex];&#xD;
				Double nextSnkState;&#xD;
				// do a push until PrevSnk state > e2e to ensure next node reaches target E2E&#xD;
				// BUT skip if&#xD;
				// no chance of success (i.e, source doesn't have packet)&#xD;
				if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) {&#xD;
					// need to continue attempting to Tx, so update current state&#xD;
					nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState);&#xD;
					// increment the number of pushes for for this node to snk node&#xD;
					nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1); // [nodeIndex] += 1;&#xD;
				} else {&#xD;
					// snkNode has met its reliability. Thus move on to the next node and record the&#xD;
					// reliability met&#xD;
					nextSnkState = prevSnkNodeState;&#xD;
				}&#xD;
				// probabilities are non-decreasing so update if we were higher by carrying old&#xD;
				// value forward&#xD;
				if (currentReliabilityRow.get(flowSrcNodeindex) &lt; prevReliabilityRow.get(flowSrcNodeindex)) {&#xD;
					// carry forward the previous state for the src node, which may get overwritten&#xD;
					// later&#xD;
					// by another instruction in this slot&#xD;
					currentReliabilityRow.set(flowSrcNodeindex, prevReliabilityRow.get(flowSrcNodeindex));&#xD;
				}&#xD;
				currentReliabilityRow.set(flowSnkNodeindex, nextSnkState);&#xD;
			}&#xD;
&#xD;
			e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
			// so I think since we just use this reliabilityVector as the same thing as the&#xD;
			// currentReliabilityRow&#xD;
			// we don't need it at all and can just replace currentReliabiliyVector with&#xD;
			// current ReliabilityRow&#xD;
			ReliabilityRow currentReliabilityVector = new ReliabilityRow();&#xD;
			// convert the row to a vector so we can add it to the reliability window&#xD;
//			Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
			if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
				reliabilityWindow.set(timeSlot, (currentReliabilityRow));&#xD;
			} else {&#xD;
				reliabilityWindow.add(currentReliabilityRow);&#xD;
			}&#xD;
			timeSlot += 1; // increase to next time slot&#xD;
		}&#xD;
		var size = reliabilityWindow.size();&#xD;
		// The total (worst-case) cost to transmit E2E in isolation with specified&#xD;
		// reliability&#xD;
		// target is the number of rows in the reliabilityWindow&#xD;
		nPushes.set(nNodesInFlow, size); // [nNodesInFlow] = size;&#xD;
		ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
		nPushesArrayList.addAll(nPushes);&#xD;
//		Collections.addAll(nPushesArrayList, nPushes);&#xD;
		return nPushesArrayList;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5ACwNO3Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" method="_sA4McNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5ACwtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5ACw9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_J-3LUtejEe2IjMkQsyA0cQ">
                  <body>Class constructor specifying the number of faults, sets fixed to true&#xD;
	 * &#xD;
	 * @param numFaults is an Integer representing the number of faults</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5ACwdO3Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ACxNO3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ACxdO3Ee2O0cjNcmYJpQ" name="getReliabilities" method="_sA4Mc9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LU9ejEe2IjMkQsyA0cQ">
                  <body>This method was generated with UML Lab in HW4&#xD;
	 * &#xD;
	 * @return a ReliabilityTable containing reliabilities of a packet reaching each&#xD;
	 *         node in a flow at each time slot</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-0W59O3Ee2O0cjNcmYJpQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ACxtO3Ee2O0cjNcmYJpQ" name="verifyReliabilities" method="_sA4MddO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LVNejEe2IjMkQsyA0cQ">
                  <body>This method declares whether all reliabilities are met&#xD;
	 * &#xD;
	 * I don't know if this should be changed or if its supposed to always return&#xD;
	 * true if packets are always pushed again until the minimum link reliability is&#xD;
	 * met?&#xD;
	 * &#xD;
	 * @return Boolean true</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5ACx9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Ap0tO3Ee2O0cjNcmYJpQ" name="getM" method="_sA4Me9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5Ap09O3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Ap1NO3Ee2O0cjNcmYJpQ" name="getE2E" method="_sA4MfdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5Ap1dO3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-0W4tO3Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" method="_sA4MadO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-0W5NO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-0W5dO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_J-3LUNejEe2IjMkQsyA0cQ">
                  <body>Class constructor specifying the program&#xD;
	 * &#xD;
	 * @param program is the program schedule with flows to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-0W49O3Ee2O0cjNcmYJpQ" name="program" type="_r56BsNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-0W5tO3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-098NO3Ee2O0cjNcmYJpQ" name="numTxPerLinkAndTotalTxCost" method="_sA4Mg9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LVdejEe2IjMkQsyA0cQ">
                  <body>This method calculates a flow's numTxPerLinkAndTotalTxCost based on whether&#xD;
	 * its fault tolerance is fixed&#xD;
	 * &#xD;
	 * If fixed is true, calculates the maximum number of transmissions per link and&#xD;
	 * maximum total transmissions If fixed is false, calculates the number of&#xD;
	 * transmission attempts (pushes) per link and total transmission attempts&#xD;
	 * &#xD;
	 * @param flow is the specified flow to calculate transmissions and cost for&#xD;
	 * @return an ArrayList containing the number of transmissions per link and&#xD;
	 *         total cost of the specified flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-098dO3Ee2O0cjNcmYJpQ" name="flow" type="_r4lMA9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_2RpNO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-0989O3Ee2O0cjNcmYJpQ" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_sA4MhtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LVtejEe2IjMkQsyA0cQ">
                  <body>This method takes a flow and adds its transmissions to an ArrayList. Each&#xD;
	 * node has a max of numFaults +1. Once these are all added to the ArrayList,&#xD;
	 * put the sum of the number of edges of the flow and the max faults in a flow&#xD;
	 * into the ArrayList Method moved from Workload class&#xD;
	 * &#xD;
	 * @param flow is a specified flow object&#xD;
	 * @return an ArrayList containing number of edges and max faults in the&#xD;
	 *         selected flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-099NO3Ee2O0cjNcmYJpQ" name="flow" type="_r4lMA9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_2RpdO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-1lANO3Ee2O0cjNcmYJpQ" name="getTxPerLinkAndTotalTxCost" visibility="private" method="_sA4MidO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LV9ejEe2IjMkQsyA0cQ">
                  <body>This method takes in a flow and calculates the number of transmission&#xD;
	 * attempts per link between nodes and the total transmission attempts Method&#xD;
	 * moved from Workload class&#xD;
	 * &#xD;
	 * @param flow is a specified flow object&#xD;
	 * &#xD;
	 * @return an ArrayList of the number of pushes</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-1lAdO3Ee2O0cjNcmYJpQ" name="flow" type="_r4lMA9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_2RptO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_1qlNO3Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" method="_sA4MbNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_2RodO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_2RotO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_J-3LUdejEe2IjMkQsyA0cQ">
                  <body>Class constructor specifying end-to-end reliability and minimum packet&#xD;
	 * reception rate&#xD;
	 * &#xD;
	 * @param e2e                    is a double representing the end-to-end&#xD;
	 *                               reliability&#xD;
	 * @param minPacketReceptionRate is a double representing the minimum packet&#xD;
	 *                               reception rate</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_1qldO3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_2RoNO3Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_2Ro9O3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r5B38NO3Ee2O0cjNcmYJpQ" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_LNLYmdejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r5B38dO3Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_r_1qktO3Ee2O0cjNcmYJpQ" isReadOnly="true"/>
              <ownedAttribute xmi:id="_r5B38tO3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5B389O3Ee2O0cjNcmYJpQ" name="ReliabilityRow">
              <generalization xmi:id="_r-2MENO3Ee2O0cjNcmYJpQ" general="_r5FiUdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAZrQNO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAZrQdO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zcNO3Ee2O0cjNcmYJpQ" name="ReliabilityRow" specification="_r5CfANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zcdO3Ee2O0cjNcmYJpQ" type="_r5B389O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zctO3Ee2O0cjNcmYJpQ" name="ReliabilityRow" specification="_r_2Rp9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zc9O3Ee2O0cjNcmYJpQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA4zdNO3Ee2O0cjNcmYJpQ" name="element" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4zddO3Ee2O0cjNcmYJpQ" type="_r5B389O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zdtO3Ee2O0cjNcmYJpQ" name="ReliabilityRow" specification="_r_24s9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zd9O3Ee2O0cjNcmYJpQ" name="rowArray" type="_r_1qktO3Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA4zeNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA4zedO3Ee2O0cjNcmYJpQ" type="_r5B389O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5CfANO3Ee2O0cjNcmYJpQ" name="ReliabilityRow" method="_sA4zcNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5CfAdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5CfAtO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5CfA9O3Ee2O0cjNcmYJpQ" type="_r5B389O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_2Rp9O3Ee2O0cjNcmYJpQ" name="ReliabilityRow" visibility="package" method="_sA4zctO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_24sNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_24sdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_2RqNO3Ee2O0cjNcmYJpQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_2RqdO3Ee2O0cjNcmYJpQ" name="element" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_24stO3Ee2O0cjNcmYJpQ" type="_r5B389O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_24s9O3Ee2O0cjNcmYJpQ" name="ReliabilityRow" visibility="package" method="_sA4zdtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_24tdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_24ttO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_24tNO3Ee2O0cjNcmYJpQ" name="rowArray" type="_r_1qktO3Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_24uNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_24t9O3Ee2O0cjNcmYJpQ" type="_r5B389O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5CfBNO3Ee2O0cjNcmYJpQ" name="ReliabilityTable">
              <generalization xmi:id="_r-2zIdO3Ee2O0cjNcmYJpQ" general="_r5P6Y9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAZrQtO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAZrQ9O3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zetO3Ee2O0cjNcmYJpQ" name="ReliabilityTable" specification="_r5DGENO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4ze9O3Ee2O0cjNcmYJpQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zfNO3Ee2O0cjNcmYJpQ" name="ReliabilityTable" specification="_r5DGFNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zfdO3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA4zftO3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA4zf9O3Ee2O0cjNcmYJpQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5DGENO3Ee2O0cjNcmYJpQ" name="ReliabilityTable" method="_sA4zetO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5DGEdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5DGEtO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5DGE9O3Ee2O0cjNcmYJpQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DGFNO3Ee2O0cjNcmYJpQ" name="ReliabilityTable" visibility="package" method="_sA4zfNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5DGF9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5DGGNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5DGFdO3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5DGFtO3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5DGGdO3Ee2O0cjNcmYJpQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5DGGtO3Ee2O0cjNcmYJpQ" name="ReliabilityVisualization">
              <ownedComment xmi:id="_J-3LWNejEe2IjMkQsyA0cQ">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-3aOtO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAZrRNO3Ee2O0cjNcmYJpQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAZrRdO3Ee2O0cjNcmYJpQ" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAZrRtO3Ee2O0cjNcmYJpQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAZrR9O3Ee2O0cjNcmYJpQ" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAZrSNO3Ee2O0cjNcmYJpQ" name="warp" visibility="private" type="_r5d80NO3Ee2O0cjNcmYJpQ" association="_sBi6x9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAZrStO3Ee2O0cjNcmYJpQ" name="ra" visibility="private" type="_r4_bs9O3Ee2O0cjNcmYJpQ" association="_sBjh0dO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_J-0IANejEe2IjMkQsyA0cQ" name="program" visibility="private" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_J-5AgNejEe2IjMkQsyA0cQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zgNO3Ee2O0cjNcmYJpQ" name="ReliabilityVisualization" specification="_r-3aMNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zgdO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4zgtO3Ee2O0cjNcmYJpQ" type="_r5DGGtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
		this.program = ra.getProgram();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zg9O3Ee2O0cjNcmYJpQ" name="visualization" specification="_r5DtINO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zhNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// need to add \n to create new lines in the description&#xD;
		// Reliability Analysis for graph &lt;name>&#xD;
		// Scheduler Name: &lt;name>&#xD;
		// M: &lt;float>&#xD;
		// E2E: &lt;float>&#xD;
		// nChannels: &lt;int>&#xD;
		// flows with nodes i.e F0:A F0:B F1:A ...&#xD;
		// probabilities at each time &#xD;
		Description content = new Description();&#xD;
		content.add(getHeader());&#xD;
		content.add(getScheduler());&#xD;
		content.add(getM());&#xD;
		content.add(getE2E());&#xD;
		content.add(getnChannels());&#xD;
		content.add(getFlowsWithNodes());&#xD;
		content.addAll(reliabiltyTableToDescription(getReliabilities()));&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zhdO3Ee2O0cjNcmYJpQ" name="getHeader" specification="_r5DtIdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zhtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;Reliability Analysis for graph %s\n&quot;, program.workLoad.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zh9O3Ee2O0cjNcmYJpQ" name="getScheduler" specification="_r5DtI9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4ziNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;Scheduler Name: %s\n&quot;, program.schedulerName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zidO3Ee2O0cjNcmYJpQ" name="getM" specification="_r5DtJdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zitO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;M: %.2f\n&quot;, this.ra.getM());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zi9O3Ee2O0cjNcmYJpQ" name="getE2E" specification="_r5DtJ9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zjNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;E2E: %.2f\n&quot;, this.ra.getE2E());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zjdO3Ee2O0cjNcmYJpQ" name="getnChannels" specification="_r5DtKdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zjtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;nChannels: %d\n&quot;, program.nChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zkdO3Ee2O0cjNcmYJpQ" name="reliabiltyTableToDescription" specification="_r-3aNtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zktO3Ee2O0cjNcmYJpQ" name="r" type="_r5CfBNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4zk9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		Description data = new Description();&#xD;
		for (ReliabilityRow row : r) {&#xD;
			String content = &quot;&quot;;&#xD;
			for (Double value : row) {&#xD;
				content += String.format(&quot;%.2f\t&quot;, value);&#xD;
			}&#xD;
			content += &quot;\n&quot;;&#xD;
			data.add(content);&#xD;
		}&#xD;
		return data;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zlNO3Ee2O0cjNcmYJpQ" name="getReliabilities" specification="_r5EUM9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zldO3Ee2O0cjNcmYJpQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
//		return ra.getReliabilities(); THIS IS WHAT NORMALLY SHOULD HAPPEN&#xD;
		return getFakeDataTable();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-1WItejEe2IjMkQsyA0cQ" name="getFlowsWithNodes" specification="_J-U_0NejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_J-1WI9ejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>//should be private&#xD;
		// returns the a string of flows with nodes seperated by tabs in order like F1:A F2:D ... F9:C F10:A F11:B&#xD;
		List&lt;String> flows = program.workLoad.getFlowNamesInOriginalOrder();&#xD;
		if (inStandardForm(flows)) {&#xD;
			sortFlows(flows);	&#xD;
		}&#xD;
		List&lt;String> flowsWithNodes = getFlowsAndNodes(flows);&#xD;
		return listToString(flowsWithNodes);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-1WJNejEe2IjMkQsyA0cQ" name="getFlowsAndNodes" specification="_J-Vm4NejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_J-1WJdejEe2IjMkQsyA0cQ" name="flows" type="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_J-1WJtejEe2IjMkQsyA0cQ" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_J-1WJ9ejEe2IjMkQsyA0cQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;String> flowsWithNodes = new ArrayList&lt;>();&#xD;
		for (String flow : flows) {&#xD;
			for (String node : program.workLoad.getNodesInFlow(flow)) {&#xD;
				flowsWithNodes.add(String.format(&quot;%s:%s&quot;, flow, node));&#xD;
			}&#xD;
		}&#xD;
		return flowsWithNodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-19MNejEe2IjMkQsyA0cQ" name="inStandardForm" specification="_J-WN8dejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_J-19MdejEe2IjMkQsyA0cQ" name="flows" type="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_J-19MtejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all the flow names are in the form F&lt;int>&#xD;
		for (String flow : flows) {&#xD;
			try {&#xD;
				Integer.parseInt(flow.substring(1));&#xD;
			} catch(Exception e) {&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-19M9ejEe2IjMkQsyA0cQ" name="sortFlows" specification="_J-W1AdejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_J-19NNejEe2IjMkQsyA0cQ" name="flows" type="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>// should be private, ensures proper order of numbers&#xD;
		Collections.sort(flows, new Comparator&lt;String>() {&#xD;
			public int compare(String str1, String str2) {&#xD;
				int val1 = Integer.parseInt(str1.substring(1));&#xD;
				int val2 = Integer.parseInt(str2.substring(1));&#xD;
				return val1 - val2;&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-19NdejEe2IjMkQsyA0cQ" name="listToString" specification="_J-jCQNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_J-19NtejEe2IjMkQsyA0cQ" name="arr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_J-19N9ejEe2IjMkQsyA0cQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_J-19ONejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private formats items with \t in between&#xD;
		return listToString(Arrays.asList(arr));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-19OdejEe2IjMkQsyA0cQ" name="listToString" specification="_J-XcEdejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_J-19OtejEe2IjMkQsyA0cQ" name="arr" type="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_J-19O9ejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private formats items with \t in between&#xD;
		String content = &quot;&quot;;&#xD;
		for (String str : arr) {&#xD;
			content += String.format(&quot;%s\t&quot;, str);&#xD;
		}&#xD;
		content += &quot;\n&quot;;&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-19PNejEe2IjMkQsyA0cQ" name="getFakeDataTable" specification="_J-YDIdejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_J-19PdejEe2IjMkQsyA0cQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return"/>
                <language>java</language>
                <body>// don't need to test this because this will never be used when Reliability Analysis is implemented&#xD;
		List&lt;String> flows = program.workLoad.getFlowNamesInOriginalOrder();&#xD;
		if (inStandardForm(flows)) {&#xD;
			sortFlows(flows);&#xD;
		}&#xD;
		int numColumns = getFlowsAndNodes(flows).size();&#xD;
		int numRows = program.scheduleBuilt.size();&#xD;
		ReliabilityTable data = new ReliabilityTable();&#xD;
		for (int i = 0; i &lt; numRows; i++) {&#xD;
			ReliabilityRow dataRow = new ReliabilityRow();&#xD;
			for (int j = 0; j &lt; numColumns; j++) {&#xD;
				dataRow.add((double) (((int) (Math.random() * 100)) / 100.0));&#xD;
			}&#xD;
			data.add(dataRow);&#xD;
		}&#xD;
		return data;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5DtINO3Ee2O0cjNcmYJpQ" name="visualization" method="_sA4zg9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LWtejEe2IjMkQsyA0cQ">
                  <body>This method creates a Description object for the visualization and adds a header and the WorkLoad's &#xD;
	 * information (scheduler, minimum packet reception rate, end-to-end reliability, number of channels,&#xD;
	 * and flows), then adds the reliability probabilities for each flow&#xD;
	 * @return a Description with all the program and reliability information</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-3aNdO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DtIdO3Ee2O0cjNcmYJpQ" name="getHeader" method="_sA4zhdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LW9ejEe2IjMkQsyA0cQ">
                  <body>This method creates a header for the Reliability Analysis with the program's name&#xD;
	 * @return header for the description</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5DtItO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DtI9O3Ee2O0cjNcmYJpQ" name="getScheduler" method="_sA4zh9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LXNejEe2IjMkQsyA0cQ">
                  <body>This method creates a string indicating the program's scheduler name&#xD;
	 * @return scheduler name string</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5DtJNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DtJdO3Ee2O0cjNcmYJpQ" name="getM" method="_sA4zidO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LXdejEe2IjMkQsyA0cQ">
                  <body>This method creates a string indicating the program's minimum packet reception rate (M)&#xD;
	 * @return M string</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5DtJtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DtJ9O3Ee2O0cjNcmYJpQ" name="getE2E" method="_sA4zi9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LXtejEe2IjMkQsyA0cQ">
                  <body>This method creates a string indicating the program's end-to-end reliability (E2E)&#xD;
	 * @return E2E string</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5DtKNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DtKdO3Ee2O0cjNcmYJpQ" name="getnChannels" method="_sA4zjdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3LX9ejEe2IjMkQsyA0cQ">
                  <body>This method creates a string indicating the program's number of channels (nChannels)&#xD;
	 * @return nChannels string</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5EUMNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5EUM9O3Ee2O0cjNcmYJpQ" name="getReliabilities" method="_sA4zlNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3yZtejEe2IjMkQsyA0cQ">
                  <body>This method creates a ReliabilityTable object with the reliabilities from the ReliabilityAnalysis&#xD;
	 * @return table of reliabilities</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-3aOdO3Ee2O0cjNcmYJpQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-3aMNO3Ee2O0cjNcmYJpQ" name="ReliabilityVisualization" visibility="package" method="_sA4zgNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-3aMtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-3aM9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_J-3LWdejEe2IjMkQsyA0cQ">
                  <body>This constructor calls the VisualizationObject constructor and creates a ReliabilityAnalysis object &#xD;
	 * @param warp the WarpInterface to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-3aMdO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-3aNNO3Ee2O0cjNcmYJpQ" type="_r5DGGtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-3aNtO3Ee2O0cjNcmYJpQ" name="reliabiltyTableToDescription" method="_sA4zkdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_J-3yZdejEe2IjMkQsyA0cQ">
                  <body>This method converts a ReliabilityTable to a Description object&#xD;
	 * @param r the ReliabilityTable to convert&#xD;
	 * @return a Description with the information from the ReliabilityTable</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-3aN9O3Ee2O0cjNcmYJpQ" name="r" type="_r5CfBNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-3aONO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_J-U_0NejEe2IjMkQsyA0cQ" name="getFlowsWithNodes" method="_J-1WItejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_J-3LYNejEe2IjMkQsyA0cQ">
                  <body>This method creates a string of the program's flows and their nodes, &#xD;
	 * in order of flow and separated by tabs&#xD;
	 * @return formatted string with flows and nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_J-ibMNejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_J-Vm4NejEe2IjMkQsyA0cQ" name="getFlowsAndNodes" method="_J-1WJNejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_J-3yYNejEe2IjMkQsyA0cQ">
                  <body>This method creates an ArrayList of the program's flows and their nodes&#xD;
	 * @param flows is a list of the program's flows&#xD;
	 * @return flows and nodes ArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_J-Vm4dejEe2IjMkQsyA0cQ" name="flows" type="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_J-Vm4tejEe2IjMkQsyA0cQ" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_J-Vm49ejEe2IjMkQsyA0cQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_J-WN8dejEe2IjMkQsyA0cQ" name="inStandardForm" method="_J-19MNejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_J-3yYdejEe2IjMkQsyA0cQ">
                  <body>This method returns a boolean indicating whether the names of the program's flows &#xD;
	 * are in the form &quot;F&lt;int>&quot; (standard naming convention for flows)&#xD;
	 * @param flows is a list of the program's flows&#xD;
	 * @return true if all flow names are in standard form, false if not</body>
                </ownedComment>
                <ownedParameter xmi:id="_J-WN8tejEe2IjMkQsyA0cQ" name="flows" type="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_J-ibMdejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_J-W1AdejEe2IjMkQsyA0cQ" name="sortFlows" method="_J-19M9ejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_J-3yYtejEe2IjMkQsyA0cQ">
                  <body>This method sorts the flows by number in increasing order&#xD;
	 * @param flows is a list of the program's flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_J-W1AtejEe2IjMkQsyA0cQ" name="flows" type="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_J-XcEdejEe2IjMkQsyA0cQ" name="listToString" method="_J-19OdejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_J-3yZNejEe2IjMkQsyA0cQ">
                  <body>This method creates a string from a list of strings, formatted with tabs between list element&#xD;
	 * @param arr is the list to convert &#xD;
	 * @return a formatted string of the list elements</body>
                </ownedComment>
                <ownedParameter xmi:id="_J-XcEtejEe2IjMkQsyA0cQ" name="arr" type="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_J-jCRdejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_J-YDIdejEe2IjMkQsyA0cQ" name="getFakeDataTable" method="_J-19PNejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_J-3yZ9ejEe2IjMkQsyA0cQ">
                  <body>For debugging?&#xD;
	 * @return ReliabilityTable</body>
                </ownedComment>
                <ownedParameter xmi:id="_J-YDItejEe2IjMkQsyA0cQ" type="_r5CfBNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_J-jCQNejEe2IjMkQsyA0cQ" name="listToString" method="_J-19NdejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_J-3yY9ejEe2IjMkQsyA0cQ">
                  <body>This method creates a string from a string array, formatted with tabs between each array element&#xD;
	 * @param arr is the array to convert&#xD;
	 * @return a formatted string of the array elements</body>
                </ownedComment>
                <ownedParameter xmi:id="_J-jCQdejEe2IjMkQsyA0cQ" name="arr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_J-jCQ9ejEe2IjMkQsyA0cQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_J-jCQtejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5E7QNO3Ee2O0cjNcmYJpQ" name="ReportVisualization">
              <generalization xmi:id="_r-4BStO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAaSUdO3Ee2O0cjNcmYJpQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAaSUtO3Ee2O0cjNcmYJpQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAaSU9O3Ee2O0cjNcmYJpQ" name="content" visibility="private" type="_r4gTgNO3Ee2O0cjNcmYJpQ" association="_sBjh1NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAaSVdO3Ee2O0cjNcmYJpQ" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA4zltO3Ee2O0cjNcmYJpQ" name="ReportVisualization" specification="_r-4BQNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA4zl9O3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4zmNO3Ee2O0cjNcmYJpQ" name="warp" type="_r5OsQdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4zmdO3Ee2O0cjNcmYJpQ" name="content" type="_r4gTgNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA4zmtO3Ee2O0cjNcmYJpQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA4zm9O3Ee2O0cjNcmYJpQ" type="_r5E7QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5agNO3Ee2O0cjNcmYJpQ" name="visualization" specification="_r5E7QdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5agdO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5agtO3Ee2O0cjNcmYJpQ" name="createReport" specification="_r5FiUNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5ag9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5E7QdO3Ee2O0cjNcmYJpQ" name="visualization" method="_sA5agNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-4BSNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5FiUNO3Ee2O0cjNcmYJpQ" name="createReport" visibility="private" method="_sA5agtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-4BSdO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-4BQNO3Ee2O0cjNcmYJpQ" name="ReportVisualization" visibility="package" method="_sA4zltO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-4BRdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-4BRtO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-4BQdO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-4BQtO3Ee2O0cjNcmYJpQ" name="warp" type="_r5OsQdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-4BQ9O3Ee2O0cjNcmYJpQ" name="content" type="_r4gTgNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-4BRNO3Ee2O0cjNcmYJpQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-4BR9O3Ee2O0cjNcmYJpQ" type="_r5E7QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5FiUdO3Ee2O0cjNcmYJpQ" name="Row">
              <generalization xmi:id="_r_3fxtO3Ee2O0cjNcmYJpQ" general="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAaSV9O3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAaSWNO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5ahNO3Ee2O0cjNcmYJpQ" name="Row" specification="_r5GJYdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5ahdO3Ee2O0cjNcmYJpQ" type="_r5FiUdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5ahtO3Ee2O0cjNcmYJpQ" name="Row" specification="_r_24udO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5ah9O3Ee2O0cjNcmYJpQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA5aiNO3Ee2O0cjNcmYJpQ" name="element" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA5aidO3Ee2O0cjNcmYJpQ" type="_r5FiUdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5aitO3Ee2O0cjNcmYJpQ" name="Row" specification="_r_3fwNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5ai9O3Ee2O0cjNcmYJpQ" name="rowArray" type="_r_qrcdO3Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA5ajNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA5ajdO3Ee2O0cjNcmYJpQ" type="_r5FiUdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5ajtO3Ee2O0cjNcmYJpQ" name="Row" specification="_r5GJZdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5aj9O3Ee2O0cjNcmYJpQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA5akNO3Ee2O0cjNcmYJpQ" type="_r5FiUdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5GJYdO3Ee2O0cjNcmYJpQ" name="Row" method="_sA5ahNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5GJYtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5GJY9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5GJZNO3Ee2O0cjNcmYJpQ" type="_r5FiUdO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5GJZdO3Ee2O0cjNcmYJpQ" name="Row" visibility="package" method="_sA5ajtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5GJZ9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5GJaNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5GJZtO3Ee2O0cjNcmYJpQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5GJadO3Ee2O0cjNcmYJpQ" type="_r5FiUdO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_24udO3Ee2O0cjNcmYJpQ" name="Row" visibility="package" method="_sA5ahtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_24vNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_24vdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_24utO3Ee2O0cjNcmYJpQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_24u9O3Ee2O0cjNcmYJpQ" name="element" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_24vtO3Ee2O0cjNcmYJpQ" type="_r5FiUdO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_3fwNO3Ee2O0cjNcmYJpQ" name="Row" visibility="package" method="_sA5aitO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_3fwtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_3fw9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_3fwdO3Ee2O0cjNcmYJpQ" name="rowArray" type="_r_qrcdO3Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_3fxdO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_3fxNO3Ee2O0cjNcmYJpQ" type="_r5FiUdO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5GwcNO3Ee2O0cjNcmYJpQ" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_LNKKd9ejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r_3fyNO3Ee2O0cjNcmYJpQ" general="_r-jRI9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAa5YNO3Ee2O0cjNcmYJpQ" name="workLoad" visibility="package" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBjh19O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAa5YtO3Ee2O0cjNcmYJpQ" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5akdO3Ee2O0cjNcmYJpQ" name="WorkLoadListener" specification="_r-4oUNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5aktO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA5ak9O3Ee2O0cjNcmYJpQ" type="_r5GwcNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5alNO3Ee2O0cjNcmYJpQ" name="buildNodesAndFlows" specification="_r-4oVdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5aldO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5altO3Ee2O0cjNcmYJpQ" name="testPrintStdOut" specification="_r5GwcdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5al9O3Ee2O0cjNcmYJpQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5amNO3Ee2O0cjNcmYJpQ" name="enterWarpName" specification="_r-5PYNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5amdO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-j4OdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5amtO3Ee2O0cjNcmYJpQ" name="enterFlowName" specification="_r-5PZdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5am9O3Ee2O0cjNcmYJpQ" name="ctx" type="_r-lGVdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5anNO3Ee2O0cjNcmYJpQ" name="exitPriority" specification="_r-52cdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5andO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-5PatO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5antO3Ee2O0cjNcmYJpQ" name="exitPeriod" specification="_r-52eNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5an9O3Ee2O0cjNcmYJpQ" name="ctx" type="_r-52dtO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5aoNO3Ee2O0cjNcmYJpQ" name="exitDeadline" specification="_r-6dhdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5aodO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-6dg9O3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5aotO3Ee2O0cjNcmYJpQ" name="exitPhase" specification="_r-7EktO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5ao9O3Ee2O0cjNcmYJpQ" name="ctx" type="_r-7EkNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA5apNO3Ee2O0cjNcmYJpQ" name="exitSrcNode" specification="_r-7El9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA5apdO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-ltYtO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BkNO3Ee2O0cjNcmYJpQ" name="exitSnkNode" specification="_r-7rotO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6BkdO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-ltadO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BktO3Ee2O0cjNcmYJpQ" name="exitFlow" specification="_r-7rp9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6Bk9O3Ee2O0cjNcmYJpQ" name="ctx" type="_r-mUdtO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5GwcdO3Ee2O0cjNcmYJpQ" name="testPrintStdOut" method="_sA5altO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5GwctO3Ee2O0cjNcmYJpQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-4oUNO3Ee2O0cjNcmYJpQ" name="WorkLoadListener" visibility="private" method="_sA5akdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-4oUtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-4oU9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-4oUdO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-4oVNO3Ee2O0cjNcmYJpQ" type="_r5GwcNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-4oVdO3Ee2O0cjNcmYJpQ" name="buildNodesAndFlows" isStatic="true" method="_sA5alNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-4oVtO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-5PYNO3Ee2O0cjNcmYJpQ" name="enterWarpName" method="_sA5amNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-5PYdO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-j4OdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-5PZdO3Ee2O0cjNcmYJpQ" name="enterFlowName" method="_sA5amtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-5PZtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-lGVdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-52cdO3Ee2O0cjNcmYJpQ" name="exitPriority" method="_sA5anNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-52ctO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-5PatO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-52eNO3Ee2O0cjNcmYJpQ" name="exitPeriod" method="_sA5antO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-52edO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-52dtO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-6dhdO3Ee2O0cjNcmYJpQ" name="exitDeadline" method="_sA5aoNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-6dhtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-6dg9O3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-7EktO3Ee2O0cjNcmYJpQ" name="exitPhase" method="_sA5aotO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-7Ek9O3Ee2O0cjNcmYJpQ" name="ctx" type="_r-7EkNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-7El9O3Ee2O0cjNcmYJpQ" name="exitSrcNode" method="_sA5apNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-7EmNO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-ltYtO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-7rotO3Ee2O0cjNcmYJpQ" name="exitSnkNode" method="_sA6BkNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-7ro9O3Ee2O0cjNcmYJpQ" name="ctx" type="_r-ltadO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-7rp9O3Ee2O0cjNcmYJpQ" name="exitFlow" method="_sA6BktO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-7rqNO3Ee2O0cjNcmYJpQ" name="ctx" type="_r-mUdtO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5H-kNO3Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue">
              <generalization xmi:id="_r5IloNO3Ee2O0cjNcmYJpQ" general="_r4-0ptO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAa5ZNO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAa5ZdO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BlNO3Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue" specification="_r_4G0NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6BldO3Ee2O0cjNcmYJpQ" name="comparitor" type="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6BltO3Ee2O0cjNcmYJpQ" type="_r5H-kNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6Bl9O3Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue" specification="_r_4G1tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6BmNO3Ee2O0cjNcmYJpQ" name="comparitor" type="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6BmdO3Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_r-tpMtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6BmtO3Ee2O0cjNcmYJpQ" type="_r5H-kNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_4G0NO3Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue" visibility="package" method="_sA6BlNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_4G0tO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_4G09O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_4G0dO3Ee2O0cjNcmYJpQ" name="comparitor" type="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_4G1NO3Ee2O0cjNcmYJpQ" type="_r5H-kNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_4G1tO3Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue" visibility="package" method="_sA6Bl9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_4G2dO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_4G2tO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_4G19O3Ee2O0cjNcmYJpQ" name="comparitor" type="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_4G2NO3Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_r-tpMtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_4G29O3Ee2O0cjNcmYJpQ" type="_r5H-kNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5IlotO3Ee2O0cjNcmYJpQ" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_LNMmtdejEe2IjMkQsyA0cQ">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAa5ZtO3Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAbgcNO3Ee2O0cjNcmYJpQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAbgcdO3Ee2O0cjNcmYJpQ" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAbgc9O3Ee2O0cjNcmYJpQ" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAbgddO3Ee2O0cjNcmYJpQ" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAbgdtO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAbgeNO3Ee2O0cjNcmYJpQ" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAbgetO3Ee2O0cjNcmYJpQ" name="schedule" visibility="protected" type="_r5M3ENO3Ee2O0cjNcmYJpQ" association="_sBkI4dO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAcHgdO3Ee2O0cjNcmYJpQ" name="poset" visibility="protected" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBkI5NO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6Bm9O3Ee2O0cjNcmYJpQ" name="Schedule" specification="_r-85wNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6BnNO3Ee2O0cjNcmYJpQ" name="poset" type="_r42RwtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6BndO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6BntO3Ee2O0cjNcmYJpQ" type="_r5IlotO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BqdO3Ee2O0cjNcmYJpQ" name="getSchedule" specification="_r5JzytO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6BqtO3Ee2O0cjNcmYJpQ" type="_r5M3ENO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6Bq9O3Ee2O0cjNcmYJpQ" name="buildSchedule" specification="_r5Jzy9O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BrNO3Ee2O0cjNcmYJpQ" name="toProgram" specification="_r5JzzNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6BrdO3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BrtO3Ee2O0cjNcmYJpQ" name="replaceNullWithSleep" specification="_r-85yNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6Br9O3Ee2O0cjNcmYJpQ" name="program" type="_r47xUNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BsNO3Ee2O0cjNcmYJpQ" name="fakeSchedulingToTestRest" specification="_r-85ytO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6BsdO3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BstO3Ee2O0cjNcmYJpQ" name="getChannelAndSetStartTime" specification="_r-85zNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6Bs9O3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6BtNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6ooNO3Ee2O0cjNcmYJpQ" name="findChannelAndTime" specification="_r-9g0tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6oodO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6ootO3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6oo9O3Ee2O0cjNcmYJpQ" type="_r5JMsNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6opNO3Ee2O0cjNcmYJpQ" name="continueSearch" specification="_r-9g1tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6opdO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6optO3Ee2O0cjNcmYJpQ" name="activation" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6op9O3Ee2O0cjNcmYJpQ" type="_r5JMsNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6oqNO3Ee2O0cjNcmYJpQ" name="noOtherChannelConflicts" specification="_r-9g2tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6oqdO3Ee2O0cjNcmYJpQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6oqtO3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6oq9O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6orNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6ordO3Ee2O0cjNcmYJpQ" name="conflictsExist" specification="_r-9g39O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6ortO3Ee2O0cjNcmYJpQ" name="obj" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6or9O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6osNO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6osdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6ostO3Ee2O0cjNcmYJpQ" name="freeOfCoordinatorConflicts" specification="_r--H49O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6os9O3Ee2O0cjNcmYJpQ" name="obj" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6otNO3Ee2O0cjNcmYJpQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6otdO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6ottO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6ot9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6ouNO3Ee2O0cjNcmYJpQ" name="isAvailable" specification="_r--H6dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6oudO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6outO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6ou9O3Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6ovNO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6ovdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6ovtO3Ee2O0cjNcmYJpQ" name="isAvailable" specification="_r--H79O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6ov9O3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6owNO3Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6owdO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6owtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6ow9O3Ee2O0cjNcmYJpQ" name="timeRemaining" specification="_r5Ka0NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6oxNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6oxdO3Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6oxtO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6ox9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6oyNO3Ee2O0cjNcmYJpQ" name="canCombineEntriesInPlace" specification="_r--u8NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6oydO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6oytO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6oy9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6ozNO3Ee2O0cjNcmYJpQ" name="combinedEntriesInPlace" specification="_r--u9NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6ozdO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6oztO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6oz9O3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA6o0NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6o0dO3Ee2O0cjNcmYJpQ" name="addToSchedule" specification="_r--u-dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6o0tO3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA6o09O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6o1NO3Ee2O0cjNcmYJpQ" name="reportNotSchedulable" specification="_r--u_NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA6o1dO3Ee2O0cjNcmYJpQ" name="object" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6o1tO3Ee2O0cjNcmYJpQ" name="printVerbose" specification="_r5LB4tO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6o19O3Ee2O0cjNcmYJpQ" name="print" specification="_r5LB49O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5JzytO3Ee2O0cjNcmYJpQ" name="getSchedule" method="_sA6BqdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmuNejEe2IjMkQsyA0cQ">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-85xtO3Ee2O0cjNcmYJpQ" type="_r5M3ENO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Jzy9O3Ee2O0cjNcmYJpQ" name="buildSchedule" visibility="private" method="_sA6Bq9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5JzzNO3Ee2O0cjNcmYJpQ" name="toProgram" method="_sA6BrNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-85x9O3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Ka0NO3Ee2O0cjNcmYJpQ" name="timeRemaining" visibility="protected" method="_sA6ow9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmvtejEe2IjMkQsyA0cQ">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5Ka0dO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5Ka0tO3Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5LB4NO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5LB4dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5LB4tO3Ee2O0cjNcmYJpQ" name="printVerbose" method="_sA6o1tO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5LB49O3Ee2O0cjNcmYJpQ" name="print" method="_sA6o19O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r-85wNO3Ee2O0cjNcmYJpQ" name="Schedule" visibility="package" method="_sA6Bm9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-85w9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-85xNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-85wdO3Ee2O0cjNcmYJpQ" name="poset" type="_r42RwtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-85wtO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-85xdO3Ee2O0cjNcmYJpQ" type="_r5IlotO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-85yNO3Ee2O0cjNcmYJpQ" name="replaceNullWithSleep" visibility="private" method="_sA6BrtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmudejEe2IjMkQsyA0cQ">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-85ydO3Ee2O0cjNcmYJpQ" name="program" type="_r47xUNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-85ytO3Ee2O0cjNcmYJpQ" name="fakeSchedulingToTestRest" visibility="private" method="_sA6BsNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-85y9O3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-85zNO3Ee2O0cjNcmYJpQ" name="getChannelAndSetStartTime" visibility="protected" method="_sA6BstO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmutejEe2IjMkQsyA0cQ">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-9g0NO3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-9g0dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-9g0tO3Ee2O0cjNcmYJpQ" name="findChannelAndTime" visibility="protected" method="_sA6ooNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-9g09O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-9g1NO3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-9g1dO3Ee2O0cjNcmYJpQ" type="_r5JMsNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-9g1tO3Ee2O0cjNcmYJpQ" name="continueSearch" visibility="protected" method="_sA6opNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmu9ejEe2IjMkQsyA0cQ">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-9g19O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-9g2NO3Ee2O0cjNcmYJpQ" name="activation" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-9g2dO3Ee2O0cjNcmYJpQ" type="_r5JMsNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-9g2tO3Ee2O0cjNcmYJpQ" name="noOtherChannelConflicts" visibility="protected" method="_sA6oqNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-9g29O3Ee2O0cjNcmYJpQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-9g3NO3Ee2O0cjNcmYJpQ" name="schedulableObject" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-9g3dO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-9g3tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-9g39O3Ee2O0cjNcmYJpQ" name="conflictsExist" visibility="protected" method="_sA6ordO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r-9g4NO3Ee2O0cjNcmYJpQ" name="obj" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--H4NO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H4dO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H4tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r--H49O3Ee2O0cjNcmYJpQ" name="freeOfCoordinatorConflicts" visibility="protected" method="_sA6ostO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r--H5NO3Ee2O0cjNcmYJpQ" name="obj" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--H5dO3Ee2O0cjNcmYJpQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H5tO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H59O3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H6NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r--H6dO3Ee2O0cjNcmYJpQ" name="isAvailable" visibility="protected" method="_sA6ouNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmvNejEe2IjMkQsyA0cQ">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_r--H6tO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--H69O3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H7NO3Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H7dO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H7tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r--H79O3Ee2O0cjNcmYJpQ" name="isAvailable" visibility="protected" method="_sA6ovtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmvdejEe2IjMkQsyA0cQ">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_r--H8NO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--H8dO3Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H8tO3Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--H89O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r--u8NO3Ee2O0cjNcmYJpQ" name="canCombineEntriesInPlace" visibility="private" method="_sA6oyNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r--u8dO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--u8tO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--u89O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r--u9NO3Ee2O0cjNcmYJpQ" name="combinedEntriesInPlace" visibility="private" method="_sA6ozNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r--u9dO3Ee2O0cjNcmYJpQ" name="a1" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--u9tO3Ee2O0cjNcmYJpQ" name="a2" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--u99O3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--u-NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r--u-dO3Ee2O0cjNcmYJpQ" name="addToSchedule" visibility="protected" method="_sA6o0dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r--u-tO3Ee2O0cjNcmYJpQ" name="next" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r--u-9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r--u_NO3Ee2O0cjNcmYJpQ" name="reportNotSchedulable" visibility="private" method="_sA6o1NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r--u_dO3Ee2O0cjNcmYJpQ" name="object" type="_r4RqANO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r5JMsNO3Ee2O0cjNcmYJpQ" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_sAcHg9O3Ee2O0cjNcmYJpQ" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAcHhdO3Ee2O0cjNcmYJpQ" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6Bn9O3Ee2O0cjNcmYJpQ" name="ScheduleLocation" specification="_r5JMsdO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA6BoNO3Ee2O0cjNcmYJpQ" type="_r5JMsNO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BodO3Ee2O0cjNcmYJpQ" name="ScheduleLocation" specification="_r5JzwNO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA6BotO3Ee2O0cjNcmYJpQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sA6Bo9O3Ee2O0cjNcmYJpQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sA6BpNO3Ee2O0cjNcmYJpQ" type="_r5JMsNO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6BpdO3Ee2O0cjNcmYJpQ" name="getChannel" specification="_r5JzxtO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA6BptO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA6Bp9O3Ee2O0cjNcmYJpQ" name="getTime" specification="_r5JzyNO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA6BqNO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r5JMsdO3Ee2O0cjNcmYJpQ" name="ScheduleLocation" visibility="package" method="_sA6Bn9O3Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_r5JMstO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r5JMs9O3Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r5JMtNO3Ee2O0cjNcmYJpQ" type="_r5JMsNO3Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r5JzwNO3Ee2O0cjNcmYJpQ" name="ScheduleLocation" visibility="package" method="_sA6BodO3Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_r5Jzw9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r5JzxNO3Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r5JzwdO3Ee2O0cjNcmYJpQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r5JzwtO3Ee2O0cjNcmYJpQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r5JzxdO3Ee2O0cjNcmYJpQ" type="_r5JMsNO3Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r5JzxtO3Ee2O0cjNcmYJpQ" name="getChannel" visibility="protected" method="_sA6BpdO3Ee2O0cjNcmYJpQ">
                  <ownedComment xmi:id="_LNMmttejEe2IjMkQsyA0cQ">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r5Jzx9O3Ee2O0cjNcmYJpQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5JzyNO3Ee2O0cjNcmYJpQ" name="getTime" visibility="protected" method="_sA6Bp9O3Ee2O0cjNcmYJpQ">
                  <ownedComment xmi:id="_LNMmt9ejEe2IjMkQsyA0cQ">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r5JzydO3Ee2O0cjNcmYJpQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5M3ENO3Ee2O0cjNcmYJpQ" name="ScheduleTable">
              <generalization xmi:id="_r-_WANO3Ee2O0cjNcmYJpQ" general="_r5P6Y9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAcukNO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAcukdO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PsNO3Ee2O0cjNcmYJpQ" name="ScheduleTable" specification="_r5M3EdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7PsdO3Ee2O0cjNcmYJpQ" type="_r5M3ENO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PstO3Ee2O0cjNcmYJpQ" name="ScheduleTable" specification="_r5M3FdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7Ps9O3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7PtNO3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7PtdO3Ee2O0cjNcmYJpQ" type="_r5M3ENO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5M3EdO3Ee2O0cjNcmYJpQ" name="ScheduleTable" visibility="package" method="_sA7PsNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5M3EtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5M3E9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5M3FNO3Ee2O0cjNcmYJpQ" type="_r5M3ENO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5M3FdO3Ee2O0cjNcmYJpQ" name="ScheduleTable" visibility="package" method="_sA7PstO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5M3GNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5M3GdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5M3FtO3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5M3F9O3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5M3GtO3Ee2O0cjNcmYJpQ" type="_r5M3ENO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5NeINO3Ee2O0cjNcmYJpQ" name="ScheduleTime">
              <ownedAttribute xmi:id="_sAcuktO3Ee2O0cjNcmYJpQ" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAcuk9O3Ee2O0cjNcmYJpQ" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PttO3Ee2O0cjNcmYJpQ" name="ScheduleTime" specification="_r5NeIdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7Pt9O3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7PuNO3Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7PudO3Ee2O0cjNcmYJpQ" type="_r5NeINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5NeIdO3Ee2O0cjNcmYJpQ" name="ScheduleTime" visibility="package" method="_sA7PttO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5NeJNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5NeJdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5NeItO3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5NeI9O3Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5NeJtO3Ee2O0cjNcmYJpQ" type="_r5NeINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5NeJ9O3Ee2O0cjNcmYJpQ" name="SimulatorInput">
              <ownedComment xmi:id="_LNL_odejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5OFMNO3Ee2O0cjNcmYJpQ" name="SortedPeriodQueue">
              <generalization xmi:id="_r5OFNtO3Ee2O0cjNcmYJpQ" general="_r4-0ptO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAculNO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAculdO3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PutO3Ee2O0cjNcmYJpQ" name="SortedPeriodQueue" specification="_r5OFMtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7Pu9O3Ee2O0cjNcmYJpQ" type="_r5OFMNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PvNO3Ee2O0cjNcmYJpQ" name="SortedPeriodQueue" specification="_r-_9EdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7PvdO3Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_r-tpMtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA7PvtO3Ee2O0cjNcmYJpQ" type="_r5OFMNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5OFMtO3Ee2O0cjNcmYJpQ" name="SortedPeriodQueue" visibility="package" method="_sA7PutO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5OFM9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5OFNNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5OFNdO3Ee2O0cjNcmYJpQ" type="_r5OFMNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-_9EdO3Ee2O0cjNcmYJpQ" name="SortedPeriodQueue" visibility="package" method="_sA7PvNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r-_9E9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-_9FNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-_9EtO3Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_r-tpMtO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r-_9FdO3Ee2O0cjNcmYJpQ" type="_r5OFMNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r5OsQdO3Ee2O0cjNcmYJpQ" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_r_AkIdO3Ee2O0cjNcmYJpQ" general="_r5B38NO3Ee2O0cjNcmYJpQ"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r5OsQtO3Ee2O0cjNcmYJpQ" name="ScheduleChoices">
                <ownedLiteral xmi:id="_r5PTUNO3Ee2O0cjNcmYJpQ" name="PRIORITY"/>
                <ownedLiteral xmi:id="_r5PTUdO3Ee2O0cjNcmYJpQ" name="RM"/>
                <ownedLiteral xmi:id="_r5PTUtO3Ee2O0cjNcmYJpQ" name="DM"/>
                <ownedLiteral xmi:id="_r5PTU9O3Ee2O0cjNcmYJpQ" name="RTHART"/>
                <ownedLiteral xmi:id="_r5PTVNO3Ee2O0cjNcmYJpQ" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r5PTVdO3Ee2O0cjNcmYJpQ" name="POSET_RM"/>
                <ownedLiteral xmi:id="_r5PTVtO3Ee2O0cjNcmYJpQ" name="POSET_DM"/>
                <ownedLiteral xmi:id="_r5PTV9O3Ee2O0cjNcmYJpQ" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r5PTWNO3Ee2O0cjNcmYJpQ" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_r5PTWdO3Ee2O0cjNcmYJpQ" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_r5PTWtO3Ee2O0cjNcmYJpQ" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r5PTW9O3Ee2O0cjNcmYJpQ" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_r5PTXNO3Ee2O0cjNcmYJpQ" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_r5PTXdO3Ee2O0cjNcmYJpQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r5PTXtO3Ee2O0cjNcmYJpQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r5PTX9O3Ee2O0cjNcmYJpQ" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r5PTYNO3Ee2O0cjNcmYJpQ" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r5P6YNO3Ee2O0cjNcmYJpQ" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r5P6YdO3Ee2O0cjNcmYJpQ" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5P6YtO3Ee2O0cjNcmYJpQ" name="SystemFactory">
              <ownedComment xmi:id="_LNL_otejEe2IjMkQsyA0cQ">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KnXVxdejEe2IjMkQsyA0cQ" name="create" specification="_Km738tejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_KnXVxtejEe2IjMkQsyA0cQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_KnXVx9ejEe2IjMkQsyA0cQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_KnXVyNejEe2IjMkQsyA0cQ" name="choice" type="_r_AkItO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_KnXVydejEe2IjMkQsyA0cQ" type="_r5d80NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new WarpSystem(workload, numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Km738tejEe2IjMkQsyA0cQ" name="create" isStatic="true" method="_KnXVxdejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_Km7389ejEe2IjMkQsyA0cQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_Km739NejEe2IjMkQsyA0cQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Km739dejEe2IjMkQsyA0cQ" name="choice" type="_r_AkItO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_Km739tejEe2IjMkQsyA0cQ" type="_r5d80NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5P6Y9O3Ee2O0cjNcmYJpQ" name="Table">
              <generalization xmi:id="_r_5U9dO3Ee2O0cjNcmYJpQ" general="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAcultO3Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAcul9O3Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PxNO3Ee2O0cjNcmYJpQ" name="Table" specification="_r5QhcdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7PxdO3Ee2O0cjNcmYJpQ" type="_r5P6Y9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PxtO3Ee2O0cjNcmYJpQ" name="Table" specification="_r5QhddO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7Px9O3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7PyNO3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7PydO3Ee2O0cjNcmYJpQ" type="_r5P6Y9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PytO3Ee2O0cjNcmYJpQ" name="getNumRows" specification="_r5Qhe9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7Py9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PzNO3Ee2O0cjNcmYJpQ" name="getNumColumns" specification="_r5RIgdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7PzdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7PztO3Ee2O0cjNcmYJpQ" name="set" specification="_r_5U8NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7Pz9O3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7P0NO3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7P0dO3Ee2O0cjNcmYJpQ" name="element" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7P0tO3Ee2O0cjNcmYJpQ" name="get" specification="_r5RIg9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7P09O3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7P1NO3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7P1dO3Ee2O0cjNcmYJpQ" type="_r_qrcdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5QhcdO3Ee2O0cjNcmYJpQ" name="Table" method="_sA7PxNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5QhctO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5Qhc9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5QhdNO3Ee2O0cjNcmYJpQ" type="_r5P6Y9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5QhddO3Ee2O0cjNcmYJpQ" name="Table" method="_sA7PxtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5QheNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5QhedO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5QhdtO3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5Qhd9O3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5QhetO3Ee2O0cjNcmYJpQ" type="_r5P6Y9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Qhe9O3Ee2O0cjNcmYJpQ" name="getNumRows" method="_sA7PytO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5RIgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5RIgdO3Ee2O0cjNcmYJpQ" name="getNumColumns" method="_sA7PzNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5RIgtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5RIg9O3Ee2O0cjNcmYJpQ" name="get" method="_sA7P0tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5RIhNO3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RIhdO3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_5U9NO3Ee2O0cjNcmYJpQ" type="_r_qrcdO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_5U8NO3Ee2O0cjNcmYJpQ" name="set" method="_sA7PztO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_5U8dO3Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_5U8tO3Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_5U89O3Ee2O0cjNcmYJpQ" name="element" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r5RIhtO3Ee2O0cjNcmYJpQ" name="Visualization">
              <ownedComment xmi:id="_LNL_o9ejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r5RvkNO3Ee2O0cjNcmYJpQ" name="SystemChoices">
                <ownedLiteral xmi:id="_r5RvktO3Ee2O0cjNcmYJpQ" name="SOURCE"/>
                <ownedLiteral xmi:id="_r5Rvk9O3Ee2O0cjNcmYJpQ" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_r5RvlNO3Ee2O0cjNcmYJpQ" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_r5RvldO3Ee2O0cjNcmYJpQ" name="LATENCY"/>
                <ownedLiteral xmi:id="_r5RvltO3Ee2O0cjNcmYJpQ" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_r5Rvl9O3Ee2O0cjNcmYJpQ" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_r5RvmNO3Ee2O0cjNcmYJpQ" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r5RvmdO3Ee2O0cjNcmYJpQ" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_r5Rvm9O3Ee2O0cjNcmYJpQ" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_r5RvnNO3Ee2O0cjNcmYJpQ" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_r5SWoNO3Ee2O0cjNcmYJpQ" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_r5SWodO3Ee2O0cjNcmYJpQ" name="toDisplay"/>
              <ownedOperation xmi:id="_r5SWotO3Ee2O0cjNcmYJpQ" name="toFile"/>
              <ownedOperation xmi:id="_r5SWo9O3Ee2O0cjNcmYJpQ" name="toString">
                <ownedParameter xmi:id="_r5SWpNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5SWpdO3Ee2O0cjNcmYJpQ" name="VisualizationFactory">
              <ownedComment xmi:id="_LNL_pNejEe2IjMkQsyA0cQ">
                <body>Factory Class to create a visualization instance. This factory can be used to&#xD;
create different types of visualizations.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KnWusNejEe2IjMkQsyA0cQ" name="createProgramVisualization" specification="_Km7Q4NejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_KnWusdejEe2IjMkQsyA0cQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_KnWustejEe2IjMkQsyA0cQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_KnWus9ejEe2IjMkQsyA0cQ" name="choice" type="_r_BLMdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_KnWutNejEe2IjMkQsyA0cQ" type="_r5RIhtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KnXVwNejEe2IjMkQsyA0cQ" name="createWorkLoadVisualization" specification="_Km7Q5dejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_KnXVwdejEe2IjMkQsyA0cQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_KnXVwtejEe2IjMkQsyA0cQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_KnXVw9ejEe2IjMkQsyA0cQ" name="choice" type="_r_BLM9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_KnXVxNejEe2IjMkQsyA0cQ" type="_r5RIhtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Km7Q4NejEe2IjMkQsyA0cQ" name="createProgramVisualization" isStatic="true" method="_KnWusNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_Km7Q4dejEe2IjMkQsyA0cQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_Km7Q4tejEe2IjMkQsyA0cQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Km7Q49ejEe2IjMkQsyA0cQ" name="choice" type="_r_BLMdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_Km7Q5NejEe2IjMkQsyA0cQ" type="_r5RIhtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Km7Q5dejEe2IjMkQsyA0cQ" name="createWorkLoadVisualization" isStatic="true" method="_KnXVwNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_Km7Q5tejEe2IjMkQsyA0cQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_Km7Q59ejEe2IjMkQsyA0cQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Km738NejEe2IjMkQsyA0cQ" name="choice" type="_r_BLM9O3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_Km738dejEe2IjMkQsyA0cQ" type="_r5RIhtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5S9sNO3Ee2O0cjNcmYJpQ" name="VisualizationImplementation">
              <ownedComment xmi:id="_J-3yaNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAdVoNO3Ee2O0cjNcmYJpQ" name="visualization" visibility="private" type="_r4gTgNO3Ee2O0cjNcmYJpQ" association="_sBkI59O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAdVotO3Ee2O0cjNcmYJpQ" name="fileContent" visibility="private" type="_r4gTgNO3Ee2O0cjNcmYJpQ" association="_sBkv8dO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAdVpNO3Ee2O0cjNcmYJpQ" name="window" visibility="private" type="_r4tH0NO3Ee2O0cjNcmYJpQ" association="_sBkv9NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAdVptO3Ee2O0cjNcmYJpQ" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAdVqNO3Ee2O0cjNcmYJpQ" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAdVqtO3Ee2O0cjNcmYJpQ" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAd8sdO3Ee2O0cjNcmYJpQ" name="fm" visibility="private" type="_r4j94NO3Ee2O0cjNcmYJpQ" association="_sBkv99O3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAd8stO3Ee2O0cjNcmYJpQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAd8tNO3Ee2O0cjNcmYJpQ" name="warp" visibility="private" type="_r5d80NO3Ee2O0cjNcmYJpQ" association="_sBlXAdO3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAd8tdO3Ee2O0cjNcmYJpQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAd8t9O3Ee2O0cjNcmYJpQ" name="workLoad" visibility="private" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBlXBNO3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAd8uNO3Ee2O0cjNcmYJpQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAd8utO3Ee2O0cjNcmYJpQ" name="visualizationObject" visibility="private" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" association="_sBlXB9O3Ee2O0cjNcmYJpQ"/>
              <interfaceRealization xmi:id="_r_CZUNO3Ee2O0cjNcmYJpQ" client="_r5S9sNO3Ee2O0cjNcmYJpQ" supplier="_r5RIhtO3Ee2O0cjNcmYJpQ" contract="_r5RIhtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA72ytO3Ee2O0cjNcmYJpQ" name="VisualizationImplementation" specification="_r_58AtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA72y9O3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA72zNO3Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA72zdO3Ee2O0cjNcmYJpQ" name="choice" type="_r_58ANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA72ztO3Ee2O0cjNcmYJpQ" type="_r5S9sNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
		this.warp = warp;&#xD;
		inputFileName = warp.toWorkload().getInputFileName();&#xD;
		this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
		visualizationObject = null;&#xD;
		createVisualization(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA72z9O3Ee2O0cjNcmYJpQ" name="VisualizationImplementation" specification="_r_58C9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA720NO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA720dO3Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA720tO3Ee2O0cjNcmYJpQ" name="choice" type="_r_58CdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA7209O3Ee2O0cjNcmYJpQ" type="_r5S9sNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
		this.workLoad = workLoad;&#xD;
		inputFileName = workLoad.getInputFileName();&#xD;
		this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
		visualizationObject = null;&#xD;
		createVisualization(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA721NO3Ee2O0cjNcmYJpQ" name="toDisplay" specification="_r5TkwNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
		if (window != null) {&#xD;
			window.setVisible();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA721dO3Ee2O0cjNcmYJpQ" name="toFile" specification="_r5TkxNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA721tO3Ee2O0cjNcmYJpQ" name="toString" specification="_r5TkyNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7219O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA722NO3Ee2O0cjNcmYJpQ" name="createVisualization" specification="_r_6jE9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA722dO3Ee2O0cjNcmYJpQ" name="choice" type="_r_58ANO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
		case SOURCE:&#xD;
			createVisualization(new ProgramVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case RELIABILITIES:&#xD;
			// TODO Implement Reliability Analysis Visualization&#xD;
			createVisualization(new ReliabilityVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case SIMULATOR_INPUT:&#xD;
			// TODO Implement Simulator Input Visualization&#xD;
			createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
			break;&#xD;
&#xD;
		case LATENCY:&#xD;
			// TODO Implement Latency Analysis Visualization&#xD;
			createVisualization(new LatencyVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case CHANNEL:&#xD;
			// TODO Implement Channel Analysis Visualization&#xD;
			createVisualization(new ChannelVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case LATENCY_REPORT:&#xD;
			createVisualization(&#xD;
					new ReportVisualization(fm, warp, new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
			break;&#xD;
&#xD;
		case DEADLINE_REPORT:&#xD;
			createVisualization(new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA722tO3Ee2O0cjNcmYJpQ" name="createVisualization" specification="_r_6jFdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7229O3Ee2O0cjNcmYJpQ" name="choice" type="_r_58CdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
		case COMUNICATION_GRAPH:&#xD;
			// createWarpVisualization();&#xD;
			createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
			break;&#xD;
&#xD;
		case GRAPHVIZ:&#xD;
			createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
			break;&#xD;
&#xD;
		case INPUT_GRAPH:&#xD;
			createVisualization(workLoad);&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA723NO3Ee2O0cjNcmYJpQ" name="createVisualization" specification="_r_6jF9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA723dO3Ee2O0cjNcmYJpQ" name="obj" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
		fileContent = obj.fileVisualization();&#xD;
		/* display is file content printed to console */&#xD;
		fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
		visualizationObject = obj;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA723tO3Ee2O0cjNcmYJpQ" name="createFileNameTemplate" specification="_r5UL0tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7239O3Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA724NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
		var workingDirectory = fm.getBaseDirectory();&#xD;
		var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
		// Now create the fileNameTemplate using full output path and input filename&#xD;
		if (inputFileName.contains(&quot;/&quot;)) {&#xD;
			var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
			fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
		} else {&#xD;
			fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
		}&#xD;
		return fileNameTemplate;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5TkwNO3Ee2O0cjNcmYJpQ" name="toDisplay" method="_sA721NO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5TkxNO3Ee2O0cjNcmYJpQ" name="toFile" method="_sA721dO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5TkyNO3Ee2O0cjNcmYJpQ" name="toString" method="_sA721tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5TkydO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5UL0tO3Ee2O0cjNcmYJpQ" name="createFileNameTemplate" visibility="private" method="_sA723tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5UL09O3Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5UL1NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_58AtO3Ee2O0cjNcmYJpQ" name="VisualizationImplementation" method="_sA72ytO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_58BtO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_58B9O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_58A9O3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_58BNO3Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_58BdO3Ee2O0cjNcmYJpQ" name="choice" type="_r_58ANO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_58CNO3Ee2O0cjNcmYJpQ" type="_r5S9sNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_58C9O3Ee2O0cjNcmYJpQ" name="VisualizationImplementation" method="_sA72z9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_6jENO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_6jEdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_58DNO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_58DdO3Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_58DtO3Ee2O0cjNcmYJpQ" name="choice" type="_r_58CdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_6jEtO3Ee2O0cjNcmYJpQ" type="_r5S9sNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_6jE9O3Ee2O0cjNcmYJpQ" name="createVisualization" visibility="private" method="_sA722NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_6jFNO3Ee2O0cjNcmYJpQ" name="choice" type="_r_58ANO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_6jFdO3Ee2O0cjNcmYJpQ" name="createVisualization" visibility="private" method="_sA722tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_6jFtO3Ee2O0cjNcmYJpQ" name="choice" type="_r_58CdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_6jF9O3Ee2O0cjNcmYJpQ" name="createVisualization" visibility="private" method="_sA723NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_6jGNO3Ee2O0cjNcmYJpQ" name="obj" type="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5VZ8NO3Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_LNL_pdejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAejwNO3Ee2O0cjNcmYJpQ" name="fm" visibility="private" type="_r4j94NO3Ee2O0cjNcmYJpQ" association="_sBl-EdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAejwtO3Ee2O0cjNcmYJpQ" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAejxNO3Ee2O0cjNcmYJpQ" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAejxtO3Ee2O0cjNcmYJpQ" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAejx9O3Ee2O0cjNcmYJpQ" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAejyNO3Ee2O0cjNcmYJpQ" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAejydO3Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA724dO3Ee2O0cjNcmYJpQ" name="VisualizationObject" specification="_r_DncNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA724tO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA7249O3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA725NO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA725dO3Ee2O0cjNcmYJpQ" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;, String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
				String.valueOf(workLoad.getE2e()));&#xD;
		this.suffix = suffix;&#xD;
		visualizationData = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA725tO3Ee2O0cjNcmYJpQ" name="VisualizationObject" specification="_r_Dnd9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA7259O3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA726NO3Ee2O0cjNcmYJpQ" name="warp" type="_r5OsQdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA726dO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA726tO3Ee2O0cjNcmYJpQ" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e());&#xD;
		}&#xD;
		this.suffix = suffix;&#xD;
		visualizationData = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA7269O3Ee2O0cjNcmYJpQ" name="VisualizationObject" specification="_r_DnftO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA727NO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA727dO3Ee2O0cjNcmYJpQ" name="warp" type="_r5OsQdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA727tO3Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA7279O3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA728NO3Ee2O0cjNcmYJpQ" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
					+ nameExtension;&#xD;
		}&#xD;
&#xD;
		this.suffix = suffix;&#xD;
		visualizationData = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA728dO3Ee2O0cjNcmYJpQ" name="VisualizationObject" specification="_r_EOgNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA728tO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA7289O3Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA729NO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA729dO3Ee2O0cjNcmYJpQ" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = nameExtension;&#xD;
		this.suffix = suffix;&#xD;
		visualizationData = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d0NO3Ee2O0cjNcmYJpQ" name="nameExtension" specification="_r_7KINO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d0dO3Ee2O0cjNcmYJpQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA8d0tO3Ee2O0cjNcmYJpQ" name="m" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA8d09O3Ee2O0cjNcmYJpQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA8d1NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d1dO3Ee2O0cjNcmYJpQ" name="nameExtension" specification="_r5WBANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d1tO3Ee2O0cjNcmYJpQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA8d19O3Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA8d2NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d2dO3Ee2O0cjNcmYJpQ" name="getFileManager" specification="_r5WBBNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d2tO3Ee2O0cjNcmYJpQ" type="_r4j94NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d29O3Ee2O0cjNcmYJpQ" name="visualization" specification="_r5WBBdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d3NO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
		var data = createVisualizationData();&#xD;
&#xD;
		if (data != null) {&#xD;
			String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
			content.add(nodeString);&#xD;
&#xD;
			for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
				var row = data[rowIndex];&#xD;
				String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
				content.add(rowString);&#xD;
			}&#xD;
		} else {&#xD;
			content.add(NOT_IMPLEMENTED);&#xD;
		}&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d3dO3Ee2O0cjNcmYJpQ" name="createFile" specification="_r5WBBtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d3tO3Ee2O0cjNcmYJpQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA8d39O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d4NO3Ee2O0cjNcmYJpQ" name="fileVisualization" specification="_r5WBCdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d4dO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
		fileContent.addAll(visualization());&#xD;
		fileContent.addAll(createFooter());&#xD;
		return fileContent;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d4tO3Ee2O0cjNcmYJpQ" name="displayVisualization" specification="_r5WBCtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d49O3Ee2O0cjNcmYJpQ" type="_r4tH0NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null; // not implemented&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d5NO3Ee2O0cjNcmYJpQ" name="createHeader" specification="_r5WoENO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d5dO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d5tO3Ee2O0cjNcmYJpQ" name="createFooter" specification="_r5WoEdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d59O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d6NO3Ee2O0cjNcmYJpQ" name="createColumnHeader" specification="_r5WoEtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d6dO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA8d6tO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] { NOT_IMPLEMENTED };&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d69O3Ee2O0cjNcmYJpQ" name="createVisualizationData" specification="_r5WoFtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d7NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA8d7dO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5WBANO3Ee2O0cjNcmYJpQ" name="nameExtension" visibility="private" method="_sA8d1dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5WBAdO3Ee2O0cjNcmYJpQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5WBAtO3Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5WBA9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WBBNO3Ee2O0cjNcmYJpQ" name="getFileManager" method="_sA8d2dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNL_ptejEe2IjMkQsyA0cQ">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_EOh9O3Ee2O0cjNcmYJpQ" type="_r4j94NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WBBdO3Ee2O0cjNcmYJpQ" name="visualization" method="_sA8d29O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_EOiNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WBBtO3Ee2O0cjNcmYJpQ" name="createFile" method="_sA8d3dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5WBB9O3Ee2O0cjNcmYJpQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5WBCNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WBCdO3Ee2O0cjNcmYJpQ" name="fileVisualization" method="_sA8d4NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_EOidO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WBCtO3Ee2O0cjNcmYJpQ" name="displayVisualization" method="_sA8d4tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_EOitO3Ee2O0cjNcmYJpQ" type="_r4tH0NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WoENO3Ee2O0cjNcmYJpQ" name="createHeader" visibility="protected" method="_sA8d5NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_EOi9O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WoEdO3Ee2O0cjNcmYJpQ" name="createFooter" visibility="protected" method="_sA8d5tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_EOjNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WoEtO3Ee2O0cjNcmYJpQ" name="createColumnHeader" visibility="protected" method="_sA8d6NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5WoE9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5WoFNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WoFtO3Ee2O0cjNcmYJpQ" name="createVisualizationData" visibility="protected" method="_sA8d69O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5WoF9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5WoGNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_DncNO3Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" method="_sA724dO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_DndNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_DnddO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_DncdO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_DnctO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_Dnc9O3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_DndtO3Ee2O0cjNcmYJpQ" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_Dnd9O3Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" method="_sA725tO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_Dne9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_DnfNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_DneNO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_DnedO3Ee2O0cjNcmYJpQ" name="warp" type="_r5OsQdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_DnetO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_DnfdO3Ee2O0cjNcmYJpQ" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_DnftO3Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" method="_sA7269O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_Dng9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_DnhNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_Dnf9O3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_DngNO3Ee2O0cjNcmYJpQ" name="warp" type="_r5OsQdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_DngdO3Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_DngtO3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_DnhdO3Ee2O0cjNcmYJpQ" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_EOgNO3Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" method="_sA728dO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_EOhNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_EOhdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_EOgdO3Ee2O0cjNcmYJpQ" name="fm" type="_r4j94NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_EOgtO3Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_EOg9O3Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_EOhtO3Ee2O0cjNcmYJpQ" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_7KINO3Ee2O0cjNcmYJpQ" name="nameExtension" visibility="private" method="_sA8d0NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_7KIdO3Ee2O0cjNcmYJpQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_7KItO3Ee2O0cjNcmYJpQ" name="m" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_7KI9O3Ee2O0cjNcmYJpQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_7KJNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5X2MNO3Ee2O0cjNcmYJpQ" name="Warp">
              <ownedComment xmi:id="_LNL_p9ejEe2IjMkQsyA0cQ">
                <body>&lt;h1>This is the entry point to the warp program.&lt;/h1>&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAfK0dO3Ee2O0cjNcmYJpQ" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAfK0tO3Ee2O0cjNcmYJpQ" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfK09O3Ee2O0cjNcmYJpQ" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_r_1qktO3Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAfK1NO3Ee2O0cjNcmYJpQ" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfK1dO3Ee2O0cjNcmYJpQ" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_r_1qktO3Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAfK1tO3Ee2O0cjNcmYJpQ" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfK19O3Ee2O0cjNcmYJpQ" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAfK2NO3Ee2O0cjNcmYJpQ" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfK2dO3Ee2O0cjNcmYJpQ" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_r_AkItO3Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAfK2tO3Ee2O0cjNcmYJpQ" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfK29O3Ee2O0cjNcmYJpQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAfx4NO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfx4dO3Ee2O0cjNcmYJpQ" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfx49O3Ee2O0cjNcmYJpQ" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfx5dO3Ee2O0cjNcmYJpQ" name="minLQ" visibility="private" isStatic="true" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAfx59O3Ee2O0cjNcmYJpQ" name="e2e" visibility="private" isStatic="true" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAfx6dO3Ee2O0cjNcmYJpQ" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAfx69O3Ee2O0cjNcmYJpQ" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAgY8dO3Ee2O0cjNcmYJpQ" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAgY89O3Ee2O0cjNcmYJpQ" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAgY9dO3Ee2O0cjNcmYJpQ" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAgY99O3Ee2O0cjNcmYJpQ" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAgY-dO3Ee2O0cjNcmYJpQ" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhAAdO3Ee2O0cjNcmYJpQ" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhAA9O3Ee2O0cjNcmYJpQ" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhABdO3Ee2O0cjNcmYJpQ" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhAB9O3Ee2O0cjNcmYJpQ" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAhACNO3Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhACtO3Ee2O0cjNcmYJpQ" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhnENO3Ee2O0cjNcmYJpQ" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhnEtO3Ee2O0cjNcmYJpQ" name="schedulerSelected" visibility="private" isStatic="true" type="_r_AkItO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d7tO3Ee2O0cjNcmYJpQ" name="main" specification="_r5YdQNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d79O3Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA8d8NO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
		setWarpParameters(args);&#xD;
&#xD;
		// and print out the values if in verbose mode&#xD;
		if (verboseMode) {&#xD;
			printWarpParameters();&#xD;
		}&#xD;
&#xD;
		// Create and visualize the workload&#xD;
		// inputFile string, which may be null,&#xD;
		WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
		if (allRequested) {&#xD;
			for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
				visualize(workLoad, choice); // visualize all Program choices&#xD;
			}&#xD;
			// Create and visualize the Warp System&#xD;
			if (schedulerRequested) {&#xD;
				WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
				verifyPerformanceRequirements(warp);&#xD;
				for (SystemChoices choice : SystemChoices.values()) {&#xD;
					visualize(warp, choice); // visualize all System choices&#xD;
				}&#xD;
			} else { // create a system for all scheduler choices&#xD;
				for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
					schedulerSelected = sch;&#xD;
					WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
					verifyPerformanceRequirements(warp);&#xD;
					for (SystemChoices choice : SystemChoices.values()) {&#xD;
						visualize(warp, choice); // visualize all System choices&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		} else { // visualize warp workload, source program and other requested items&#xD;
			visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
			if (wfRequested) {&#xD;
				visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
			}&#xD;
			if (gvRequested) {&#xD;
				visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
			}&#xD;
			WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
			verifyPerformanceRequirements(warp);&#xD;
			visualize(warp, SystemChoices.SOURCE);&#xD;
			if (caRequested) {&#xD;
				visualize(warp, SystemChoices.CHANNEL);&#xD;
			}&#xD;
			if (laRequested) {&#xD;
				visualize(warp, SystemChoices.LATENCY);&#xD;
			}&#xD;
			if (latencyRequested || laRequested) {&#xD;
				visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
			}&#xD;
			if (raRequested) {&#xD;
				visualize(warp, SystemChoices.RELIABILITIES);&#xD;
			}&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d99O3Ee2O0cjNcmYJpQ" name="verifyPerformanceRequirements" specification="_r_GDttO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d-NO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
		verifyReliabilities(warp);&#xD;
		verifyNoChannelConflicts(warp);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d-dO3Ee2O0cjNcmYJpQ" name="verifyReliabilities" specification="_r_GDuNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d-tO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
			/* RealTime HART doesn't adhere to reliability targets */&#xD;
			if (!warp.reliabilitiesMet()) {&#xD;
				System.err.printf(&#xD;
						&quot;\n\tERROR: Not all flows meet the end-to-end &quot; + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
						String.valueOf(e2e), schedulerSelected.toString());&#xD;
			} else if (verboseMode) {&#xD;
				System.out.printf(&quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
						String.valueOf(e2e), schedulerSelected.toString());&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA8d-9O3Ee2O0cjNcmYJpQ" name="verifyDeadlines" specification="_r_GqwNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA8d_NO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
			System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
					schedulerSelected.toString());&#xD;
			visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
		} else if (verboseMode) {&#xD;
			System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
					schedulerSelected.toString());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E4NO3Ee2O0cjNcmYJpQ" name="verifyNoChannelConflicts" specification="_r_GqwtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9E4dO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
			System.err.printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
			if (!caRequested) { // only need to create the visualization if not already requested&#xD;
				visualize(warp, SystemChoices.CHANNEL);&#xD;
			}&#xD;
		} else if (verboseMode) {&#xD;
			System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E4tO3Ee2O0cjNcmYJpQ" name="setWarpParameters" specification="_r5ZEUNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9E49O3Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA9E5NO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
		// function--need to set up globals?&#xD;
&#xD;
// create holder objects for storing results ...&#xD;
// BooleanHolder debug = new BooleanHolder();&#xD;
		StringHolder schedulerSelected = new StringHolder();&#xD;
		IntHolder channels = new IntHolder();&#xD;
		IntHolder faults = new IntHolder();&#xD;
		DoubleHolder m = new DoubleHolder();&#xD;
		DoubleHolder end2end = new DoubleHolder();&#xD;
		BooleanHolder gui = new BooleanHolder();&#xD;
		BooleanHolder gv = new BooleanHolder();&#xD;
		BooleanHolder wf = new BooleanHolder();&#xD;
		BooleanHolder ra = new BooleanHolder();&#xD;
		BooleanHolder la = new BooleanHolder();&#xD;
		BooleanHolder ca = new BooleanHolder();&#xD;
		BooleanHolder s = new BooleanHolder();&#xD;
		BooleanHolder all = new BooleanHolder();&#xD;
		BooleanHolder latency = new BooleanHolder();&#xD;
		BooleanHolder verbose = new BooleanHolder();&#xD;
		StringHolder input = new StringHolder();&#xD;
		StringHolder output = new StringHolder();&#xD;
&#xD;
// create the parser and specify the allowed options ...&#xD;
		ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
		parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;, schedulerSelected);&#xD;
		parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
		parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
		parser.addOption(&quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;, end2end);&#xD;
		parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;, faults);&#xD;
		parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
		parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
		parser.addOption(&#xD;
				&quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
				wf);&#xD;
		parser.addOption(&quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;, ra);&#xD;
		parser.addOption(&quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
		parser.addOption(&quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
		parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
		parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
		parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
		parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
		parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;, output);&#xD;
		parser.addOption(&#xD;
				&quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
				verbose);&#xD;
// parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
// $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
// match the arguments ...&#xD;
		parser.matchAllArgs(args);&#xD;
&#xD;
// Set WARP system configuration options&#xD;
		if (channels.value > 0) {&#xD;
			nChannels = channels.value; // set option specified&#xD;
		} else {&#xD;
			nChannels = NUM_CHANNELS; // set to default&#xD;
		}&#xD;
		if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
			numFaults = faults.value; // set option specified&#xD;
		} else {&#xD;
			numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
		}&#xD;
		if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
			minLQ = m.value; // set option specified&#xD;
		} else {&#xD;
			minLQ = MIN_LQ; // set to default&#xD;
		}&#xD;
		if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
			e2e = end2end.value; // set option specified&#xD;
		} else {&#xD;
			e2e = E2E; // set to default&#xD;
		}&#xD;
		if (output.value != null) { // default output subdirectory (from working directory)&#xD;
			outputSubDirectory = output.value; // set option specified&#xD;
		} else {&#xD;
			outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
		}&#xD;
&#xD;
		guiRequested = gui.value; // GraphVis file requested flag&#xD;
		gvRequested = gv.value; // GraphVis file requested flag&#xD;
		wfRequested = wf.value; // WARP file requested flag&#xD;
		raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
		laRequested = la.value; // Latency Analysis file requested flag&#xD;
		caRequested = ca.value; // Latency Analysis file requested flag&#xD;
		simRequested = s.value; // Simulation file requested flag&#xD;
		allRequested = all.value; // all out files requested flag&#xD;
		latencyRequested = latency.value; // latency report requested flag&#xD;
		verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
// debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
		inputFile = input.value; // input file specified&#xD;
		if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
			schedulerRequested = true;&#xD;
			switch (schedulerSelected.value) {&#xD;
			case &quot;priority&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
				break;&#xD;
&#xD;
			case &quot;rm&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
				break;&#xD;
&#xD;
			case &quot;dm&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
				break;&#xD;
&#xD;
			case &quot;rtHart&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
				break;&#xD;
&#xD;
			case &quot;poset&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
				break;&#xD;
&#xD;
			default:&#xD;
				Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
				break;&#xD;
			}&#xD;
		} else { // null value when no scheduler specified; so use default&#xD;
			Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E5dO3Ee2O0cjNcmYJpQ" name="printWarpParameters" specification="_r5ZEVNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
		// Print out each of the system configuration values&#xD;
		System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
		System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
		System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
		System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
		System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
		System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
		System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
		System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
		System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
		System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
		System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
		System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
		System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
		System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
		System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
		if (inputFile != null) {&#xD;
			System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
		} else {&#xD;
			System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
		}&#xD;
		System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
		System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
		// System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KnZyANejEe2IjMkQsyA0cQ" name="visualize" specification="_Kl_cwNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_KnZyAdejEe2IjMkQsyA0cQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_KnZyAtejEe2IjMkQsyA0cQ" name="choice" type="_r_BLM9O3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
		if (viz != null) {&#xD;
			if (verboseMode) {&#xD;
				System.out.println(viz.toString());&#xD;
			}&#xD;
			viz.toFile();&#xD;
			if (guiRequested) {&#xD;
				viz.toDisplay();&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KnZyA9ejEe2IjMkQsyA0cQ" name="visualize" specification="_Kl_cw9ejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_KnZyBNejEe2IjMkQsyA0cQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_KnZyBdejEe2IjMkQsyA0cQ" name="choice" type="_r_BLMdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
		if (viz != null) {&#xD;
			viz.toFile();&#xD;
			if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
				/* Only display window when a specific scheduler has been requested */&#xD;
				viz.toDisplay();&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5YdQNO3Ee2O0cjNcmYJpQ" name="main" isStatic="true" method="_sA8d7tO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNL_qNejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Entry point of the warp program.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Sets up the warp parameters according to the command line arguments. The&#xD;
	 * program will print the parameters if it is in verbose mode. Then a workload&#xD;
	 * is created based off of the input file. Finally if all was requested, all&#xD;
	 * visualizations files are made, and if set&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param args command line arguments.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5YdQdO3Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5YdQtO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ZEUNO3Ee2O0cjNcmYJpQ" name="setWarpParameters" visibility="private" isStatic="true" method="_sA9E4tO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmsNejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Sets the class attributes based on the command line arguments.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * If no value is given for an attribute the value will be set to the default.&#xD;
	 * &lt;/p>&#xD;
	 * &lt;h2>Options&lt;/h2>&#xD;
	 * &lt;ul>&#xD;
	 * &lt;li>-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&lt;/li>&#xD;
	 * &lt;li>-c, --channels %d {[1,16]} #number of wireless channels&lt;/li>&#xD;
	 * &lt;li>-m %f {[0.5,1.0]} #minimum link quality in the system&lt;/li>&#xD;
	 * &lt;li>-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for&#xD;
	 * all flows&lt;/li>&#xD;
	 * &lt;li>-f, --faults %d {[1,10]} #number of faults per edge in a flow (per&#xD;
	 * period)&lt;/li>&#xD;
	 * &lt;li>-gui %v #create a gui visualizations&lt;/li>&#xD;
	 * &lt;li>-gv %v #create a graph visualization (.gv) file for GraphViz&lt;/li>&#xD;
	 * &lt;li>-wf %v #create a WARP (.wf) file that shows the maximum number of&#xD;
	 * transmissions on each segment of the flow needed to meet the end-to-end&#xD;
	 * reliability&lt;/li>&#xD;
	 * &lt;li>-ra %v #create a reliability analysis file (tab delimited .csv) for the&#xD;
	 * warp program&lt;/li>&#xD;
	 * &lt;li>-la %v #create a latency analysis file (tab delimited .csv) for the warp&#xD;
	 * program&lt;/li>&#xD;
	 * &lt;li>-ca %v #create a channel analysis file (tab delimited .csv) for the warp&#xD;
	 * program&lt;/li>&#xD;
	 * &lt;li>-s %v #create a simulator input file (.txt) for the warp program&lt;/li>&#xD;
	 * &lt;li>-a, --all %v #create all output files (activates -gv, -wf, -ra, -s)&lt;/li>&#xD;
	 * &lt;li>-l, --latency %v #generates end-to-end latency report file (.txt)&lt;/li>&#xD;
	 * &lt;li>-i, --input %s #&lt;InputFile> of graph flows (workload)&lt;/li>&#xD;
	 * &lt;li>-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&lt;/li>&#xD;
	 * &lt;li>-v, --verbose %v #Echo input file name and parsed contents. Then for each&#xD;
	 * flow instance: show maximum E2E latency and min/max communication cost for&#xD;
	 * that instance of the flow&lt;/li>&#xD;
	 * &lt;/ul>&#xD;
	 * &#xD;
	 * @param args An array of strings of the command line arguments</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5ZEUdO3Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5ZEUtO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ZEVNO3Ee2O0cjNcmYJpQ" name="printWarpParameters" visibility="private" isStatic="true" method="_sA9E5dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmsdejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Prints the warp system configuration parameters&lt;/h1></body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r_GDttO3Ee2O0cjNcmYJpQ" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_sA8d99O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNL_q9ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Verifies a WarpInterface's performance.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Verifies the deadlines, reliabilities and if there are channel conflicts. If&#xD;
	 * something is not verified a message will be printed to the console and in the&#xD;
	 * case of a failure to verify the deadlines or the channel conflicts, a&#xD;
	 * deadline/channel report will be created. If everything is successful a&#xD;
	 * success message will be printed to the console.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp The WarpInterface to verify.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_GDt9O3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_GDuNO3Ee2O0cjNcmYJpQ" name="verifyReliabilities" visibility="private" isStatic="true" method="_sA8d-dO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNL_rNejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Checks if the reliabilities are met on the WarpInterface.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * NOTE: the reliability check is currently not implemented and will always&#xD;
	 * return true. Prints the result of the check to the console.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp The WarpInterface to check the reliabilities of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_GDudO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_GqwNO3Ee2O0cjNcmYJpQ" name="verifyDeadlines" visibility="private" isStatic="true" method="_sA8d-9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNL_rdejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Checks to see if the deadlines are met on the warp interface&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Returns false if there is at least one deadline missed. If a deadline is&#xD;
	 * missed a deadline report file will be created. Result is printed to the&#xD;
	 * console.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp The WarpInterface to check the deadlines of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_GqwdO3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_GqwtO3Ee2O0cjNcmYJpQ" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_sA9E4NO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNL_rtejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Checks if there is a channel conflict in the warp interface.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * The result is printed to the console. If a channel analysis file was not&#xD;
	 * originally requested, one will be made.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp The WarpInterface to check the channel conflicts of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_Gqw9O3Ee2O0cjNcmYJpQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Kl_cwNejEe2IjMkQsyA0cQ" name="visualize" visibility="private" isStatic="true" method="_KnZyANejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_LNL_qdejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Visualizes a workload.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Puts the visualization in the the output folder directory. The type of&#xD;
	 * visualization is determined by the choice object that is passed in.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param workLoad The workload to visualize&#xD;
	 * @param choice   An item from the WorkLoadChoices enum that specifies what&#xD;
	 *                 visualization to create.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Kl_cwdejEe2IjMkQsyA0cQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_Kl_cwtejEe2IjMkQsyA0cQ" name="choice" type="_r_BLM9O3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Kl_cw9ejEe2IjMkQsyA0cQ" name="visualize" visibility="private" isStatic="true" method="_KnZyA9ejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_LNL_qtejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Creates a visualization for a WarpInterface&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Puts the visualization in the the output folder directory. The type of&#xD;
	 * visualization is determined by the choice object that is passed in.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp   a WarpInteface probably a WarpSystem class&#xD;
	 * @param choice An item from the SystemChoices enum that specifies what&#xD;
	 *               visualization to create.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Kl_cxNejEe2IjMkQsyA0cQ" name="warp" type="_r5d80NO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_Kl_cxdejEe2IjMkQsyA0cQ" name="choice" type="_r_BLMdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5aScNO3Ee2O0cjNcmYJpQ" name="WarpDSL">
              <ownedComment xmi:id="_LNMmstejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAhnFNO3Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAhnFdO3Ee2O0cjNcmYJpQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhnFtO3Ee2O0cjNcmYJpQ" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAhnF9O3Ee2O0cjNcmYJpQ" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAhnGNO3Ee2O0cjNcmYJpQ" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAiOINO3Ee2O0cjNcmYJpQ" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E9tO3Ee2O0cjNcmYJpQ" name="getInstructionParameters" specification="_r5bgmNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9E99O3Ee2O0cjNcmYJpQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA9E-NO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5bgmNO3Ee2O0cjNcmYJpQ" name="getInstructionParameters" method="_sA9E9tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5bgmdO3Ee2O0cjNcmYJpQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_8YQNO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r5a5gNO3Ee2O0cjNcmYJpQ" name="InstructionParameters">
                <ownedAttribute xmi:id="_sAiOIdO3Ee2O0cjNcmYJpQ" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAiOItO3Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAiOI9O3Ee2O0cjNcmYJpQ" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAiOJNO3Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAiOJdO3Ee2O0cjNcmYJpQ" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAiOJtO3Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAiOJ9O3Ee2O0cjNcmYJpQ" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAiOKNO3Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAiOKdO3Ee2O0cjNcmYJpQ" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAiOKtO3Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAiOK9O3Ee2O0cjNcmYJpQ" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAiOLNO3Ee2O0cjNcmYJpQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAiOLtO3Ee2O0cjNcmYJpQ" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAiOL9O3Ee2O0cjNcmYJpQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E5tO3Ee2O0cjNcmYJpQ" name="getCoordinator" specification="_r5a5gdO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E59O3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E6NO3Ee2O0cjNcmYJpQ" name="setCoordinator" specification="_r5a5g9O3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E6dO3Ee2O0cjNcmYJpQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E6tO3Ee2O0cjNcmYJpQ" name="setName" specification="_r5a5hdO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E69O3Ee2O0cjNcmYJpQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E7NO3Ee2O0cjNcmYJpQ" name="setFlow" specification="_r5a5h9O3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E7dO3Ee2O0cjNcmYJpQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E7tO3Ee2O0cjNcmYJpQ" name="setSrc" specification="_r5bgkNO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E79O3Ee2O0cjNcmYJpQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E8NO3Ee2O0cjNcmYJpQ" name="setSnk" specification="_r5bgktO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E8dO3Ee2O0cjNcmYJpQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E8tO3Ee2O0cjNcmYJpQ" name="setChannel" specification="_r5bglNO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E89O3Ee2O0cjNcmYJpQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E9NO3Ee2O0cjNcmYJpQ" name="unused" specification="_r5bgltO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E9dO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r5a5gdO3Ee2O0cjNcmYJpQ" name="getCoordinator" method="_sA9E5tO3Ee2O0cjNcmYJpQ">
                  <ownedComment xmi:id="_LNMms9ejEe2IjMkQsyA0cQ">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r5a5gtO3Ee2O0cjNcmYJpQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5a5g9O3Ee2O0cjNcmYJpQ" name="setCoordinator" method="_sA9E6NO3Ee2O0cjNcmYJpQ">
                  <ownedComment xmi:id="_LNMmtNejEe2IjMkQsyA0cQ">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r5a5hNO3Ee2O0cjNcmYJpQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5a5hdO3Ee2O0cjNcmYJpQ" name="setName" visibility="private" method="_sA9E6tO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r5a5htO3Ee2O0cjNcmYJpQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5a5h9O3Ee2O0cjNcmYJpQ" name="setFlow" visibility="private" method="_sA9E7NO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r5a5iNO3Ee2O0cjNcmYJpQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5bgkNO3Ee2O0cjNcmYJpQ" name="setSrc" visibility="private" method="_sA9E7tO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r5bgkdO3Ee2O0cjNcmYJpQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5bgktO3Ee2O0cjNcmYJpQ" name="setSnk" visibility="private" method="_sA9E8NO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r5bgk9O3Ee2O0cjNcmYJpQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5bglNO3Ee2O0cjNcmYJpQ" name="setChannel" visibility="private" method="_sA9E8tO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r5bgldO3Ee2O0cjNcmYJpQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5bgltO3Ee2O0cjNcmYJpQ" name="unused" method="_sA9E9NO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r5bgl9O3Ee2O0cjNcmYJpQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r5cHodO3Ee2O0cjNcmYJpQ" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_r_8_UdO3Ee2O0cjNcmYJpQ" general="_r_8YQdO3Ee2O0cjNcmYJpQ"/>
                <ownedAttribute xmi:id="_sAi1MNO3Ee2O0cjNcmYJpQ" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAi1MtO3Ee2O0cjNcmYJpQ" name="instructionParametersArrayList" visibility="package" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBl-FNO3Ee2O0cjNcmYJpQ"/>
                <ownedAttribute xmi:id="_sAi1NdO3Ee2O0cjNcmYJpQ" name="instructionParameters" visibility="package" type="_r-p-0tO3Ee2O0cjNcmYJpQ" association="_sBmlIdO3Ee2O0cjNcmYJpQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E-dO3Ee2O0cjNcmYJpQ" name="ListenerDsl" specification="_r5cHotO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E-tO3Ee2O0cjNcmYJpQ" type="_r5cHodO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E-9O3Ee2O0cjNcmYJpQ" name="getInstructionParameters" specification="_r5cHptO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E_NO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E_dO3Ee2O0cjNcmYJpQ" name="enterAction" specification="_r_If8NO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9E_tO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_H44NO3Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9E_9O3Ee2O0cjNcmYJpQ" name="exitAction" specification="_r_If9dO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9FANO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_H44NO3Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9FAdO3Ee2O0cjNcmYJpQ" name="exitFlowName" specification="_r_JHAdO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9FAtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_If-tO3Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9FA9O3Ee2O0cjNcmYJpQ" name="exitCmd" specification="_r_JHCNO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9FBNO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_JHBtO3Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9r8NO3Ee2O0cjNcmYJpQ" name="exitSrcNode" specification="_r_JuFtO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9r8dO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_JuFNO3Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9r8tO3Ee2O0cjNcmYJpQ" name="exitSnkNode" specification="_r_KVJNO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9r89O3Ee2O0cjNcmYJpQ" name="ctx" type="_r_KVItO3Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9r9NO3Ee2O0cjNcmYJpQ" name="exitChannel" specification="_r_K8MdO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_sA9r9dO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_KVKdO3Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r5cHotO3Ee2O0cjNcmYJpQ" name="ListenerDsl" visibility="package" method="_sA9E-dO3Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_r5cHo9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r5cHpNO3Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r5cHpdO3Ee2O0cjNcmYJpQ" type="_r5cHodO3Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r5cHptO3Ee2O0cjNcmYJpQ" name="getInstructionParameters" method="_sA9E-9O3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r_8_UNO3Ee2O0cjNcmYJpQ" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_If8NO3Ee2O0cjNcmYJpQ" name="enterAction" method="_sA9E_dO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r_If8dO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_H44NO3Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_If9dO3Ee2O0cjNcmYJpQ" name="exitAction" method="_sA9E_9O3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r_If9tO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_H44NO3Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_JHAdO3Ee2O0cjNcmYJpQ" name="exitFlowName" method="_sA9FAdO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r_JHAtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_If-tO3Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_JHCNO3Ee2O0cjNcmYJpQ" name="exitCmd" method="_sA9FA9O3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r_JuENO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_JHBtO3Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_JuFtO3Ee2O0cjNcmYJpQ" name="exitSrcNode" method="_sA9r8NO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r_JuF9O3Ee2O0cjNcmYJpQ" name="ctx" type="_r_JuFNO3Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_KVJNO3Ee2O0cjNcmYJpQ" name="exitSnkNode" method="_sA9r8tO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r_KVJdO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_KVItO3Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_K8MdO3Ee2O0cjNcmYJpQ" name="exitChannel" method="_sA9r9NO3Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_r_K8MtO3Ee2O0cjNcmYJpQ" name="ctx" type="_r_KVKdO3Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r5d80NO3Ee2O0cjNcmYJpQ" name="WarpInterface">
              <ownedComment xmi:id="_LNL_oNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_r_LjQNO3Ee2O0cjNcmYJpQ" general="_r5OsQdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5d80dO3Ee2O0cjNcmYJpQ" name="toWorkload">
                <ownedParameter xmi:id="_r_MKUNO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5d80tO3Ee2O0cjNcmYJpQ" name="toProgram">
                <ownedParameter xmi:id="_r_MKUdO3Ee2O0cjNcmYJpQ" type="_r56BsNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5d809O3Ee2O0cjNcmYJpQ" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_r_MKUtO3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ej4NO3Ee2O0cjNcmYJpQ" name="toSimulator">
                <ownedParameter xmi:id="_r_MKU9O3Ee2O0cjNcmYJpQ" type="_r5NeJ9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ej4dO3Ee2O0cjNcmYJpQ" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_r_MKVNO3Ee2O0cjNcmYJpQ" type="_r4wLINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ej4tO3Ee2O0cjNcmYJpQ" name="toChannelAnalysis">
                <ownedParameter xmi:id="_r_MKVdO3Ee2O0cjNcmYJpQ" type="_r4WigtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ej49O3Ee2O0cjNcmYJpQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_r5ej5NO3Ee2O0cjNcmYJpQ" name="reliabilitiesMet">
                <ownedParameter xmi:id="_r5ej5dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ej5tO3Ee2O0cjNcmYJpQ" name="deadlinesMet">
                <ownedParameter xmi:id="_r5ej59O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5fK8NO3Ee2O0cjNcmYJpQ" name="WarpPoset">
              <ownedComment xmi:id="_LNLYmtejEe2IjMkQsyA0cQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_r_MKW9O3Ee2O0cjNcmYJpQ" general="_r42RwtO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9r9tO3Ee2O0cjNcmYJpQ" name="WarpPoset" specification="_r_MKVtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9r99O3Ee2O0cjNcmYJpQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA9r-NO3Ee2O0cjNcmYJpQ" type="_r5fK8NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9r-dO3Ee2O0cjNcmYJpQ" name="findCoordinator" specification="_r_8_UtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9r-tO3Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA9r-9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_MKVtO3Ee2O0cjNcmYJpQ" name="WarpPoset" visibility="package" method="_sA9r9tO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_MKWNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_MKWdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_MKV9O3Ee2O0cjNcmYJpQ" name="workload" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_MKWtO3Ee2O0cjNcmYJpQ" type="_r5fK8NO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_8_UtO3Ee2O0cjNcmYJpQ" name="findCoordinator" visibility="protected" method="_sA9r-dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_8_U9O3Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_9mYNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5fK8dO3Ee2O0cjNcmYJpQ" name="WarpSystem">
              <ownedComment xmi:id="_LNMmzNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAjcQdO3Ee2O0cjNcmYJpQ" name="program" visibility="private" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBmlJNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAjcQ9O3Ee2O0cjNcmYJpQ" name="workLoad" visibility="private" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBnMMdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAkDUdO3Ee2O0cjNcmYJpQ" name="ra" visibility="private" type="_r4_bs9O3Ee2O0cjNcmYJpQ" association="_sBnMNNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAkDU9O3Ee2O0cjNcmYJpQ" name="la" visibility="private" type="_r4wLINO3Ee2O0cjNcmYJpQ" association="_sBnzQdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAkDVdO3Ee2O0cjNcmYJpQ" name="ca" visibility="private" type="_r4WigtO3Ee2O0cjNcmYJpQ" association="_sBnzRNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAkDV9O3Ee2O0cjNcmYJpQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAkqYtO3Ee2O0cjNcmYJpQ" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAkqY9O3Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAkqZdO3Ee2O0cjNcmYJpQ" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAkqZtO3Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r_MKXNO3Ee2O0cjNcmYJpQ" client="_r5fK8dO3Ee2O0cjNcmYJpQ" supplier="_r5d80NO3Ee2O0cjNcmYJpQ" contract="_r5d80NO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9r_tO3Ee2O0cjNcmYJpQ" name="WarpSystem" specification="_r_-NcNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9r_9O3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA9sANO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA9sAdO3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA9sAtO3Ee2O0cjNcmYJpQ" type="_r5fK8dO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
		this.numChannels = numChannels;&#xD;
		createProgram(workLoad, numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9sA9O3Ee2O0cjNcmYJpQ" name="toWorkload" specification="_r5fyANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9sBNO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9sBdO3Ee2O0cjNcmYJpQ" name="toProgram" specification="_r5fyBNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9sBtO3Ee2O0cjNcmYJpQ" type="_r56BsNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9sB9O3Ee2O0cjNcmYJpQ" name="toReliabilityAnalysis" specification="_r5gZE9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9sCNO3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
		return ra;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9sCdO3Ee2O0cjNcmYJpQ" name="toSimulator" specification="_r5gZF9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9sCtO3Ee2O0cjNcmYJpQ" type="_r5NeJ9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9sC9O3Ee2O0cjNcmYJpQ" name="toLatencyAnalysis" specification="_r5gZG9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9sDNO3Ee2O0cjNcmYJpQ" type="_r4wLINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
		return la;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9sDdO3Ee2O0cjNcmYJpQ" name="toChannelAnalysis" specification="_r5hAI9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9sDtO3Ee2O0cjNcmYJpQ" type="_r4WigtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
		return ca;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA9sD9O3Ee2O0cjNcmYJpQ" name="reliabilitiesMet" specification="_r5hAJ9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA9sENO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
			ra = new ReliabilityAnalysis(program);&#xD;
		}&#xD;
		return ra.verifyReliabilities();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TANO3Ee2O0cjNcmYJpQ" name="deadlinesMet" specification="_r5hALNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TAdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
		if (program.deadlineMisses().size() > 0) {&#xD;
			result = false;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TAtO3Ee2O0cjNcmYJpQ" name="createProgram" specification="_r_-Nd9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TA9O3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA-TBNO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-TBdO3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TBtO3Ee2O0cjNcmYJpQ" name="getNumFaults" specification="_r5hnMtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TB9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TCNO3Ee2O0cjNcmYJpQ" name="getMinPacketReceptionRate" specification="_r5hnN9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TCdO3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TCtO3Ee2O0cjNcmYJpQ" name="getE2e" specification="_r5hnO9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TC9O3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TDNO3Ee2O0cjNcmYJpQ" name="getName" specification="_r5iOQdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TDdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TDtO3Ee2O0cjNcmYJpQ" name="getSchedulerName" specification="_r5iORtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TD9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TENO3Ee2O0cjNcmYJpQ" name="getNumTransmissions" specification="_r5iOS9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TEdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TEtO3Ee2O0cjNcmYJpQ" name="getOptimizationFlag" specification="_r5iOUNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TE9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5fyANO3Ee2O0cjNcmYJpQ" name="toWorkload" method="_sA9sA9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_MxYNO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5fyBNO3Ee2O0cjNcmYJpQ" name="toProgram" method="_sA9sBdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_MxYdO3Ee2O0cjNcmYJpQ" type="_r56BsNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5gZE9O3Ee2O0cjNcmYJpQ" name="toReliabilityAnalysis" method="_sA9sB9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_MxYtO3Ee2O0cjNcmYJpQ" type="_r4_bs9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5gZF9O3Ee2O0cjNcmYJpQ" name="toSimulator" method="_sA9sCdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_MxY9O3Ee2O0cjNcmYJpQ" type="_r5NeJ9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5gZG9O3Ee2O0cjNcmYJpQ" name="toLatencyAnalysis" method="_sA9sC9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_MxZNO3Ee2O0cjNcmYJpQ" type="_r4wLINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5hAI9O3Ee2O0cjNcmYJpQ" name="toChannelAnalysis" method="_sA9sDdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_MxZdO3Ee2O0cjNcmYJpQ" type="_r4WigtO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5hAJ9O3Ee2O0cjNcmYJpQ" name="reliabilitiesMet" method="_sA9sD9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5hAKNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5hALNO3Ee2O0cjNcmYJpQ" name="deadlinesMet" method="_sA-TANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5hALdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5hnMtO3Ee2O0cjNcmYJpQ" name="getNumFaults" method="_sA-TBtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5hnM9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5hnN9O3Ee2O0cjNcmYJpQ" name="getMinPacketReceptionRate" method="_sA-TCNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_-Ne9O3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5hnO9O3Ee2O0cjNcmYJpQ" name="getE2e" method="_sA-TCtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_-NfNO3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5iOQdO3Ee2O0cjNcmYJpQ" name="getName" method="_sA-TDNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5iOQtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5iORtO3Ee2O0cjNcmYJpQ" name="getSchedulerName" method="_sA-TDtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5iOR9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5iOS9O3Ee2O0cjNcmYJpQ" name="getNumTransmissions" method="_sA-TENO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5iOTNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5iOUNO3Ee2O0cjNcmYJpQ" name="getOptimizationFlag" method="_sA-TEtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5i1UNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5i1VNO3Ee2O0cjNcmYJpQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_r_-NcNO3Ee2O0cjNcmYJpQ" name="WarpSystem" method="_sA9r_tO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_-NdNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_-NddO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_-NcdO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_-NctO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_-Nc9O3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_-NdtO3Ee2O0cjNcmYJpQ" type="_r5fK8dO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_-Nd9O3Ee2O0cjNcmYJpQ" name="createProgram" visibility="private" method="_sA-TAtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_-NeNO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_-NedO3Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_-NetO3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5kDcNO3Ee2O0cjNcmYJpQ" name="WorkLoad">
              <ownedComment xmi:id="_LNMmzdejEe2IjMkQsyA0cQ">
                <body>Build the nodes and flows for the workload described in the workload&#xD;
description file, whose name is passed into the Constructor via the parameter&#xD;
inputFileName. Good default values for the constructors are m = 0.9, e2e =&#xD;
0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r_PNpNO3Ee2O0cjNcmYJpQ" general="_r5qxINO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAlRcNO3Ee2O0cjNcmYJpQ" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAlRcdO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAlRctO3Ee2O0cjNcmYJpQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAlRc9O3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAlRdNO3Ee2O0cjNcmYJpQ" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAlRddO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAlRdtO3Ee2O0cjNcmYJpQ" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAlRd9O3Ee2O0cjNcmYJpQ" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAlReNO3Ee2O0cjNcmYJpQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAlRedO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAlRetO3Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_r_1qktO3Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAlRe9O3Ee2O0cjNcmYJpQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAlRfNO3Ee2O0cjNcmYJpQ" name="e2e" visibility="private" type="_r_1qktO3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAlRfdO3Ee2O0cjNcmYJpQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAlRf9O3Ee2O0cjNcmYJpQ" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAl4gNO3Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAl4gdO3Ee2O0cjNcmYJpQ" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAl4gtO3Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAl4hNO3Ee2O0cjNcmYJpQ" name="flows" type="_r4pdcNO3Ee2O0cjNcmYJpQ" association="_sBJ5QNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAl4hdO3Ee2O0cjNcmYJpQ" name="nodes" type="_r40ckNO3Ee2O0cjNcmYJpQ" association="_sBJ5QtO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAl4htO3Ee2O0cjNcmYJpQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAl4iNO3Ee2O0cjNcmYJpQ" name="flowNamesInOriginalOrder" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBnzR9O3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAmfkdO3Ee2O0cjNcmYJpQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAmfktO3Ee2O0cjNcmYJpQ" name="flowNamesInPriorityOrder" type="_r-Q9QNO3Ee2O0cjNcmYJpQ" association="_sBoaUdO3Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAmflNO3Ee2O0cjNcmYJpQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r_OmkdO3Ee2O0cjNcmYJpQ" client="_r5kDcNO3Ee2O0cjNcmYJpQ" supplier="_r5B38NO3Ee2O0cjNcmYJpQ" contract="_r5B38NO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TFNO3Ee2O0cjNcmYJpQ" name="WorkLoad" specification="_r_-0gNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TFdO3Ee2O0cjNcmYJpQ" name="m" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA-TFtO3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA-TF9O3Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-TGNO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
		setDefaultParameters();&#xD;
		minPacketReceptionRate = m; // use file manager passed to this object&#xD;
		this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
		/*&#xD;
		 * Read input file, build the AST of graph and the listener will build the node&#xD;
		 * and flow data objects&#xD;
		 */&#xD;
		WorkLoadListener.buildNodesAndFlows(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TGdO3Ee2O0cjNcmYJpQ" name="WorkLoad" specification="_r__bk9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TGtO3Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-TG9O3Ee2O0cjNcmYJpQ" name="m" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA-THNO3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sA-THdO3Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-THtO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
		setDefaultParameters();&#xD;
		this.numFaults = numFaults;&#xD;
		minPacketReceptionRate = m; // use file manager passed to this object&#xD;
		this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
		/*&#xD;
		 * Read input file, build the AST of graph and the listener will build the node&#xD;
		 * and flow data objects&#xD;
		 */&#xD;
		WorkLoadListener.buildNodesAndFlows(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TH9O3Ee2O0cjNcmYJpQ" name="setDefaultParameters" specification="_r5kqgNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
		intForFlowNames = true; // default is that node names are all alpha names&#xD;
		flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
		nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
		flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
														// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		numFaults = DEFAULT_TX_NUM;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TINO3Ee2O0cjNcmYJpQ" name="getE2e" specification="_r5kqgdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TIdO3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TItO3Ee2O0cjNcmYJpQ" name="getIntForFlowNames" specification="_r5kqgtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TI9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TJNO3Ee2O0cjNcmYJpQ" name="getName" specification="_r5kqhNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TJdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-TJtO3Ee2O0cjNcmYJpQ" name="setMinPacketReceptionRate" specification="_r__bnNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-TJ9O3Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6ENO3Ee2O0cjNcmYJpQ" name="getMaxPhase" specification="_r5kqhtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6EdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
		return queue.poll().getPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6EtO3Ee2O0cjNcmYJpQ" name="getMinPeriod" specification="_r5kqiNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6E9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
		return queue.poll().getPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6FNO3Ee2O0cjNcmYJpQ" name="setE2e" specification="_r__bntO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6FdO3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6FtO3Ee2O0cjNcmYJpQ" name="setIntForFlowNames" specification="_r5lRkNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6F9O3Ee2O0cjNcmYJpQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6GNO3Ee2O0cjNcmYJpQ" name="setName" specification="_r5lRktO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6GdO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6GtO3Ee2O0cjNcmYJpQ" name="setNodeChannel" specification="_r5lRlNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6G9O3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6HNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
		node.setChannel(channel);&#xD;
		nodes.put(name, node); // update the nodes map with the updated object&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6HdO3Ee2O0cjNcmYJpQ" name="getNodeChannel" specification="_r5lRl9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6HtO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6H9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
		return node.getChannel();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6INO3Ee2O0cjNcmYJpQ" name="addFlow" specification="_r5l4odO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6IdO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
		 * add a new flow node to the Flows dictionary. Only name, priority, and index&#xD;
		 * are changed from default values priority is set to the number of flows&#xD;
		 * already added (index), 0 for first flow This will create a default priority&#xD;
		 * equal to the order listed in the input graph file. We also set index to the&#xD;
		 * same value so we can preserve that order as a secondary sort key. The&#xD;
		 * initalPriority field is probably not needed, but it might be useful in the&#xD;
		 * future?? If the optional flow parameters (priority, period, ...) is set, then&#xD;
		 * this default priority will be over written&#xD;
		 */&#xD;
		if (flows.containsKey(flowName)) {&#xD;
			System.out.printf(&#xD;
					&quot;\n\tWarning! A flow with name %s already exists. &quot; + &quot;It has been replaced with a new flow\n.&quot;, flowName);&#xD;
		}&#xD;
		var index = flows.size();&#xD;
		var flowNode = new Flow(flowName, index, index);&#xD;
		flows.put(flowName, flowNode);&#xD;
		if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
			intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
										// only set it once&#xD;
		}&#xD;
		flowNamesInOriginalOrder.add(flowName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6ItO3Ee2O0cjNcmYJpQ" name="isIntForNodeNames" specification="_r5l4o9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6I9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
		return intForNodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6JNO3Ee2O0cjNcmYJpQ" name="isIntForFlowNames" specification="_r5l4pdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6JdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
		return intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6JtO3Ee2O0cjNcmYJpQ" name="addNodeToFlow" specification="_r5l4p9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6J9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6KNO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
			/*&#xD;
			 * set false because name not is a number; &amp;&amp; above makes sure we only set it&#xD;
			 * once&#xD;
			 */&#xD;
			intForNodeNames = false;&#xD;
		}&#xD;
		if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
											// this node already.&#xD;
			/* If the node already exists, just need to add to the flow */&#xD;
			var index = nodes.size(); // nodeIndex will be the order added&#xD;
			var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
			nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
		}&#xD;
		/*&#xD;
		 * Node is now created and in the nodes map Next we need to get the current flow&#xD;
		 * and add this node to that flow by appending it to the node array for that&#xD;
		 * flow&#xD;
		 */&#xD;
		var flowNode = getFlow(flowName);&#xD;
		var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
		/*&#xD;
		 * the priority is the node's index in the flow, which is the current array size&#xD;
		 */&#xD;
		flowNode.addNode(graphNode);&#xD;
		flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6KdO3Ee2O0cjNcmYJpQ" name="getFlowPriority" specification="_r5l4qtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6KtO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6K9O3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6LNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
		var flow = getFlow(flowName);&#xD;
		Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
		while (nodes.hasNext()) {&#xD;
			var node = nodes.next();&#xD;
			if (node.getName() == nodeName) {&#xD;
				priority = node.getPriority(); // found the src node, set its index&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return priority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6LdO3Ee2O0cjNcmYJpQ" name="setFlowPriority" specification="_r5l4rtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6LtO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6L9O3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPriority(priority);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6MNO3Ee2O0cjNcmYJpQ" name="setFlowPeriod" specification="_r5l4sdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6MdO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6MtO3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPeriod(period);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6M9O3Ee2O0cjNcmYJpQ" name="setFlowDeadline" specification="_r5mfsdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6NNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6NdO3Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setDeadline(deadline);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6NtO3Ee2O0cjNcmYJpQ" name="setFlowPhase" specification="_r5mftNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6N9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6ONO3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPhase(phase);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6OdO3Ee2O0cjNcmYJpQ" name="getFlowIndex" specification="_r5mft9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6OtO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6O9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6PNO3Ee2O0cjNcmYJpQ" name="getFlowPriority" specification="_r5mfutO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6PdO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6PtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPriority();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA-6P9O3Ee2O0cjNcmYJpQ" name="getFlowPeriod" specification="_r5mfvdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA-6QNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA-6QdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hINO3Ee2O0cjNcmYJpQ" name="getFlowDeadline" specification="_r5mfwNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hIdO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hItO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getDeadline();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hI9O3Ee2O0cjNcmYJpQ" name="getFlowPhase" specification="_r5nGwNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hJNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hJdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hJtO3Ee2O0cjNcmYJpQ" name="getFlowTxAttemptsPerLink" specification="_r5nGw9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hJ9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hKNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hKdO3Ee2O0cjNcmYJpQ" name="setFlowsInPriorityOrder" specification="_r5nGxtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		// Now sort by a secondary key, which is index in this case&#xD;
		List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
				.collect(Collectors.toList());&#xD;
		// Now sort by primary key, which is priority in this case&#xD;
		List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		// Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		// in the requested&#xD;
		// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hKtO3Ee2O0cjNcmYJpQ" name="setFlowsInDMorder" specification="_r5nGx9O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		/* Now sort by a secondary key, which is priority in this case */&#xD;
		List&lt;Flow> sortedByPriority = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		/* Now sort by primary key, which is deadline in this case */&#xD;
		List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getDeadline))&#xD;
				.collect(Collectors.toList());&#xD;
		/*&#xD;
		 * Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		 * in the requested order&#xD;
		 */&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hK9O3Ee2O0cjNcmYJpQ" name="setFlowsInRMorder" specification="_r5nGyNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		// Now sort by a secondary key, which is priority in this case&#xD;
		List&lt;Flow> sortedByPriority = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		// Now sort by primary key, which is period in this case&#xD;
		List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
				.collect(Collectors.toList());&#xD;
		// Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		// in the requested&#xD;
		// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hLNO3Ee2O0cjNcmYJpQ" name="setFlowsInRealTimeHARTorder" specification="_r5nGydO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hLdO3Ee2O0cjNcmYJpQ" name="finalizeCurrentFlow" specification="_r5nGytO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hLtO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
			finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
		} else {&#xD;
			finalizeFlowWithE2eParameters(flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hL9O3Ee2O0cjNcmYJpQ" name="nextReleaseTime" specification="_r5nGzNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hMNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hMdO3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hMtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		flow.setLastUpdateTime(currentTime);&#xD;
		flow.setNextReleaseTime(currentTime);&#xD;
		return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hM9O3Ee2O0cjNcmYJpQ" name="nextAbsoluteDeadline" specification="_r5nG0NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hNNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hNdO3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hNtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		flow.setLastUpdateTime(currentTime);&#xD;
		flow.setNextReleaseTime(currentTime);&#xD;
		return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hN9O3Ee2O0cjNcmYJpQ" name="finalizeFlowWithE2eParameters" specification="_r5nt0dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hONO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
		var m = minPacketReceptionRate; // shorten the name :-)&#xD;
		if (flowNode != null) {&#xD;
			var nodes = flowNode.nodes;&#xD;
			int nHops = nodes.size();&#xD;
			if (nHops &lt; 1) {&#xD;
				/*&#xD;
				 * number of hops in flow, but make sure it will be at least 1, else it isn't a&#xD;
				 * flow! || was -1 at end&#xD;
				 */&#xD;
				nHops = 2;&#xD;
			}&#xD;
			Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
								// and when m == 1.0&#xD;
			if (m &lt; 1.0) {&#xD;
				/*&#xD;
				 * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) /&#xD;
				 * log(1 - M) = # txs per hop&#xD;
				 */&#xD;
				nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
			}&#xD;
			/* set numTxPerLink based on M, E2E, and flow length */&#xD;
			flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
			/* Now compute nTx per link to reach E2E requirement. */&#xD;
			// use constructor that doesn't set numFaults so fixed = false &#xD;
			// numTxPerLinkAndTotalTxCost will calculate numTxAttemptsPerLinkAndTotalTxAttempts&#xD;
			ReliabilityAnalysis reliabilityAnalysisObj = new ReliabilityAnalysis(e2e, minPacketReceptionRate);&#xD;
			ArrayList&lt;Integer> linkTxAndTotalCost = reliabilityAnalysisObj.numTxPerLinkAndTotalTxCost(flowNode);            &#xD;
			flowNode.linkTxAndTotalCost = linkTxAndTotalCost;                                                               &#xD;
			flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
		} else { // should never happen...&#xD;
			System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
					+ &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hOdO3Ee2O0cjNcmYJpQ" name="finalizeFlowWithFixedFaultTolerance" specification="_r5nt09O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hOtO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
		if (flowNode != null) {&#xD;
			/* set numTxPerLink based on numFaults */&#xD;
			flowNode.numTxPerLink = numFaults + 1;&#xD;
			/* Now compute nTx per link to reach E2E requirement. */&#xD;
			// use numFaults constructor so fixed = true&#xD;
			// numTxPerLinkAndTotalTxCost will return getFixedTxPerLinkAndTotalTxCost&#xD;
			ReliabilityAnalysis reliabilityAnalysisObj = new ReliabilityAnalysis(numFaults);&#xD;
			ArrayList&lt;Integer> linkTxAndTotalCost = reliabilityAnalysisObj.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
			flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
			flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
		} else { // should never happen...&#xD;
			System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
					+ &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hO9O3Ee2O0cjNcmYJpQ" name="getNodeNamesOrderedAlphabetically" specification="_r5nt1dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hPNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA_hPdO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
		Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
		String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
		Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
		// However, if names are actually strings of integers, then the sort doesn't&#xD;
		// come out&#xD;
		// the way we would like. So, handle that case&#xD;
		var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
		var allIntNames = true; // flag to see if all names are Ints or not&#xD;
		for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
			var nodeName = nodeNames[i];&#xD;
			if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
				// nodeName is an alpha representation of an integer&#xD;
				nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
			} else {&#xD;
				// nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
				allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
										// set it once&#xD;
				break; // can stop the loop once we know not all of the names are ints&#xD;
			}&#xD;
		}&#xD;
		if (allIntNames) {&#xD;
			// If all names are ints, then we need to sort them accordingly&#xD;
			// Otherwise, we get names in what appears to not be in order because&#xD;
			Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
			for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
				nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
			}&#xD;
		}&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hPtO3Ee2O0cjNcmYJpQ" name="getFlow" specification="_r5nt2dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hP9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hQNO3Ee2O0cjNcmYJpQ" type="_r4lMA9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
		if (flow == null) {// return empty node if not found&#xD;
			flow = new Flow();&#xD;
			System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
		}&#xD;
		return flow;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hQdO3Ee2O0cjNcmYJpQ" name="getFlowNames" specification="_r5nt29O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hQtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA_hQ9O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
		// could use new String[list.size()], but due to JVM optimizations new (new&#xD;
		// String[0] is better&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hRNO3Ee2O0cjNcmYJpQ" name="getNodeIndex" specification="_r5oU4dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hRdO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hRtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
		var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
		if (node != null) {&#xD;
			index = node.getIndex();&#xD;
		}&#xD;
		return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sA_hR9O3Ee2O0cjNcmYJpQ" name="getNodesInFlow" specification="_r5oU5NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sA_hSNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sA_hSdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA_hStO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
		// nodes in the flow to create an array of the node names in&#xD;
		// the same order as they exist in the flow specification (i.e., Graph file)&#xD;
		var flow = flows.get(flowName);&#xD;
		String[] nodes;&#xD;
		if (flow != null) {&#xD;
			nodes = new String[flow.nodes.size()];&#xD;
			for (int i = 0; i &lt; nodes.length; i++) {&#xD;
				var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
				nodes[i] = node.getName(); // get the name and store it in the array&#xD;
			}&#xD;
&#xD;
		} else {&#xD;
			nodes = new String[0]; // return empty array&#xD;
			System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
		}&#xD;
		return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIMNO3Ee2O0cjNcmYJpQ" name="getHyperPeriod" specification="_r5oU6dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIMdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
		for (String flowName : getFlowNames()) {&#xD;
			// var dm = new Utlitities();&#xD;
			hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
																				// so far and the current&#xD;
																				// period, then update the&#xD;
																				// hyperPeriod with that&#xD;
																				// value&#xD;
		}&#xD;
		return hyperPeriod;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIMtO3Ee2O0cjNcmYJpQ" name="getTotalTxAttemptsInFlow" specification="_r5oU69O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIM9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAINNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
		var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
		var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
		return totalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAINdO3Ee2O0cjNcmYJpQ" name="getNumTxAttemptsPerLink" specification="_r5oU7tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAINtO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAIN9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sBAIONO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
		var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
		linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of others&#xD;
		return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIOdO3Ee2O0cjNcmYJpQ" name="addEdge" specification="_r_PNodO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIOtO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAIO9O3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
		node.addEdge(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIPNO3Ee2O0cjNcmYJpQ" name="maxFlowLength" specification="_r5o78tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIPdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
		for (Flow flow : flows.values()) {&#xD;
			maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
		}&#xD;
		return maxLength;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5kqgNO3Ee2O0cjNcmYJpQ" name="setDefaultParameters" visibility="private" method="_sA-TH9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5kqgdO3Ee2O0cjNcmYJpQ" name="getE2e" method="_sA-TINO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMm0NejEe2IjMkQsyA0cQ">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_r__bm9O3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5kqgtO3Ee2O0cjNcmYJpQ" name="getIntForFlowNames" method="_sA-TItO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNwNejEe2IjMkQsyA0cQ">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5kqg9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5kqhNO3Ee2O0cjNcmYJpQ" name="getName" method="_sA-TJNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNwdejEe2IjMkQsyA0cQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5kqhdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5kqhtO3Ee2O0cjNcmYJpQ" name="getMaxPhase" method="_sA-6ENO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNw9ejEe2IjMkQsyA0cQ">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5kqh9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5kqiNO3Ee2O0cjNcmYJpQ" name="getMinPeriod" method="_sA-6EtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNxNejEe2IjMkQsyA0cQ">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5kqidO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5lRkNO3Ee2O0cjNcmYJpQ" name="setIntForFlowNames" method="_sA-6FtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNxtejEe2IjMkQsyA0cQ">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5lRkdO3Ee2O0cjNcmYJpQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5lRktO3Ee2O0cjNcmYJpQ" name="setName" method="_sA-6GNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNx9ejEe2IjMkQsyA0cQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5lRk9O3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5lRlNO3Ee2O0cjNcmYJpQ" name="setNodeChannel" method="_sA-6GtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNyNejEe2IjMkQsyA0cQ">
                  <body>@param name    the node whose channel is to be set&#xD;
	 * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5lRldO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5lRltO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5lRl9O3Ee2O0cjNcmYJpQ" name="getNodeChannel" method="_sA-6HdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNydejEe2IjMkQsyA0cQ">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5lRmNO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5l4oNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5l4odO3Ee2O0cjNcmYJpQ" name="addFlow" method="_sA-6INO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNytejEe2IjMkQsyA0cQ">
                  <body>This method will add a new flow to the Flows dictionary. If the flow being&#xD;
	 * added is already in the dictionary it will overwrite the current entry but&#xD;
	 * also produce a warning so the user knows if a flow has already been added&#xD;
	 * &#xD;
	 * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5l4otO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5l4o9O3Ee2O0cjNcmYJpQ" name="isIntForNodeNames" method="_sA-6ItO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNy9ejEe2IjMkQsyA0cQ">
                  <body>@return intForNodeNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5l4pNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5l4pdO3Ee2O0cjNcmYJpQ" name="isIntForFlowNames" method="_sA-6JNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNzNejEe2IjMkQsyA0cQ">
                  <body>@return intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5l4ptO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5l4p9O3Ee2O0cjNcmYJpQ" name="addNodeToFlow" method="_sA-6JtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNzdejEe2IjMkQsyA0cQ">
                  <body>This method takes a node name and adds that node to a flow corresponding to&#xD;
	 * the flow name. The node is appended to the node array for the given flow&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param flowName name of which flow nodeName will be added to&#xD;
	 * @param nodeName name of the node to be added to flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5l4qNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5l4qdO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5l4qtO3Ee2O0cjNcmYJpQ" name="getFlowPriority" method="_sA-6KdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNztejEe2IjMkQsyA0cQ">
                  <body>This method returns the index priority of a node in a flow. It gets the nodes&#xD;
	 * from a given flow name and then iterates through that set flows nodes in&#xD;
	 * order to find the priority of a of the nodeName.&#xD;
	 * &#xD;
	 * @param flowName name of the flow that will contain the desired nodes&#xD;
	 * @param nodeName name of the node in which the priority is desired&#xD;
	 * @return the priority of a node in a specific flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5l4q9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5l4rNO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5l4rdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5l4rtO3Ee2O0cjNcmYJpQ" name="setFlowPriority" method="_sA-6LdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5l4r9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5l4sNO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5l4sdO3Ee2O0cjNcmYJpQ" name="setFlowPeriod" method="_sA-6MNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5l4stO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5mfsNO3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5mfsdO3Ee2O0cjNcmYJpQ" name="setFlowDeadline" method="_sA-6M9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5mfstO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5mfs9O3Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5mftNO3Ee2O0cjNcmYJpQ" name="setFlowPhase" method="_sA-6NtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5mftdO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5mfttO3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5mft9O3Ee2O0cjNcmYJpQ" name="getFlowIndex" method="_sA-6OdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5mfuNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5mfudO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5mfutO3Ee2O0cjNcmYJpQ" name="getFlowPriority" method="_sA-6PNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNz9ejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the priority of the&#xD;
	 * flow node&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer that represents the priority of the flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5mfu9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5mfvNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5mfvdO3Ee2O0cjNcmYJpQ" name="getFlowPeriod" method="_sA-6P9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN0NejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the period from the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that is the period of a flow node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5mfvtO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5mfv9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5mfwNO3Ee2O0cjNcmYJpQ" name="getFlowDeadline" method="_sA_hINO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN0dejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the deadline from the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that is the deadline of a flowNode.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5mfwdO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5mfwtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nGwNO3Ee2O0cjNcmYJpQ" name="getFlowPhase" method="_sA_hI9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN0tejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the phase number of the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that represents the phase of the flow node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5nGwdO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5nGwtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nGw9O3Ee2O0cjNcmYJpQ" name="getFlowTxAttemptsPerLink" method="_sA_hJtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN09ejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the number of tx per&#xD;
	 * link in a flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return and Integer to represent the number of tx per link.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5nGxNO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5nGxdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nGxtO3Ee2O0cjNcmYJpQ" name="setFlowsInPriorityOrder" method="_sA_hKdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN1NejEe2IjMkQsyA0cQ">
                  <body>When called this method sorts flows into priority order. First sort the flows&#xD;
	 * by index and then sort them by priority. Creates a new ArrayList and adds the&#xD;
	 * flows in the new priority order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nGx9O3Ee2O0cjNcmYJpQ" name="setFlowsInDMorder" method="_sA_hKtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN1dejEe2IjMkQsyA0cQ">
                  <body>When called this method sorts flows into deadline order. First sort the flows&#xD;
	 * by priority and then sort them by deadline. Creates a new ArrayList and adds&#xD;
	 * the flows in the new deadline order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nGyNO3Ee2O0cjNcmYJpQ" name="setFlowsInRMorder" method="_sA_hK9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN1tejEe2IjMkQsyA0cQ">
                  <body>When called this method sorts flows into priority order. First sort the flows&#xD;
	 * by priority and then sort them by period. Creates a new ArrayList and adds&#xD;
	 * the flows in the new period order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nGydO3Ee2O0cjNcmYJpQ" name="setFlowsInRealTimeHARTorder" method="_sA_hLNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5nGytO3Ee2O0cjNcmYJpQ" name="finalizeCurrentFlow" method="_sA_hLdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5nGy9O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nGzNO3Ee2O0cjNcmYJpQ" name="nextReleaseTime" method="_sA_hL9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5nGzdO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5nGztO3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5nGz9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nG0NO3Ee2O0cjNcmYJpQ" name="nextAbsoluteDeadline" method="_sA_hM9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5nG0dO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5nG0tO3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5nt0NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nt0dO3Ee2O0cjNcmYJpQ" name="finalizeFlowWithE2eParameters" visibility="private" method="_sA_hN9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN19ejEe2IjMkQsyA0cQ">
                  <body>This method calculates and sets the flow's linkTxAndTotalCost as the numTxAttemptsPerLinkAndTotalTxAttempts&#xD;
	 * based on the E2E (end-to-end) reliability requirement&#xD;
	 * &#xD;
	 * @param flowName is a specified flow object</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5nt0tO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nt09O3Ee2O0cjNcmYJpQ" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_sA_hOdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN2NejEe2IjMkQsyA0cQ">
                  <body>This method calculates and sets the flow's linkTxAndTotalCost as the fixedTxPerLinkAndTotalTxCost&#xD;
	 * with fixed fault tolerance based on the flow's number of faults (numFaults)&#xD;
	 * &#xD;
	 * @param flowName is a specified flow object</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5nt1NO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nt1dO3Ee2O0cjNcmYJpQ" name="getNodeNamesOrderedAlphabetically" method="_sA_hO9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN2dejEe2IjMkQsyA0cQ">
                  <body>This method shall sort the nodes alphabetically. Three different sorting&#xD;
	 * processes are needed based on whether the nodes are integers or letters.&#xD;
	 * &#xD;
	 * @return a String Array of the node names in an alphabetically sorted order</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5nt1tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5nt19O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nt2dO3Ee2O0cjNcmYJpQ" name="getFlow" visibility="private" method="_sA_hPtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5nt2tO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_PNoNO3Ee2O0cjNcmYJpQ" type="_r4lMA9O3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5nt29O3Ee2O0cjNcmYJpQ" name="getFlowNames" method="_sA_hQdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNN2tejEe2IjMkQsyA0cQ">
                  <body>This method returns the flow names in their original order.&#xD;
	 * &#xD;
	 * @return a String Array containing the flow names in their original order.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5nt3NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5nt3dO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5oU4dO3Ee2O0cjNcmYJpQ" name="getNodeIndex" method="_sA_hRNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5oU4tO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5oU49O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5oU5NO3Ee2O0cjNcmYJpQ" name="getNodesInFlow" method="_sA_hR9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNN00NejEe2IjMkQsyA0cQ">
                  <body>This method takes in a flow name and retrieves the nodes in the given flow.&#xD;
	 * If no nodes are present the method will return an empty array.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return a String Array of the nodes in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5oU5dO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5oU5tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5oU59O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5oU6dO3Ee2O0cjNcmYJpQ" name="getHyperPeriod" method="_sBAIMNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb4NejEe2IjMkQsyA0cQ">
                  <body>This method computes the LCM of all periods and then updates the current&#xD;
	 * hyperPeriod to new number.&#xD;
	 * &#xD;
	 * @return an Integer that represents the hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5oU6tO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5oU69O3Ee2O0cjNcmYJpQ" name="getTotalTxAttemptsInFlow" method="_sBAIMtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb4dejEe2IjMkQsyA0cQ">
                  <body>This method takes in a flow name and calculates the total cost of the&#xD;
	 * specified flow.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer representing the total cost of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5oU7NO3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5oU7dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5oU7tO3Ee2O0cjNcmYJpQ" name="getNumTxAttemptsPerLink" method="_sBAINdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb4tejEe2IjMkQsyA0cQ">
                  <body>This method takes in a flow name, gets the flow object and sets a new Array&#xD;
	 * List to the link tx and total cost of the flow. Removes last element because&#xD;
	 * it is just a sum of the others.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer Array containing the link tx and total cost of a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5oU79O3Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5oU8NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5o78NO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5o78tO3Ee2O0cjNcmYJpQ" name="maxFlowLength" method="_sBAIPNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb5NejEe2IjMkQsyA0cQ">
                  <body>This method records the max flow length by looping through all flows and&#xD;
	 * keeping track of the max value.&#xD;
	 * &#xD;
	 * @return an Integer that represents the max length of the flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5o789O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_PNodO3Ee2O0cjNcmYJpQ" name="addEdge" method="_sBAIOdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb49ejEe2IjMkQsyA0cQ">
                  <body>This method adds an edge to a node by getting the node object a and adding an&#xD;
	 * edge.&#xD;
	 * &#xD;
	 * @param nodeName name of the node.&#xD;
	 * @param edge     name of the edge that will be added.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_PNotO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_PNo9O3Ee2O0cjNcmYJpQ" name="edge" type="_r4hhoNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_-0gNO3Ee2O0cjNcmYJpQ" name="WorkLoad" visibility="package" method="_sA-TFNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r__bkNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r__bkdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNMmztejEe2IjMkQsyA0cQ">
                  <body>This method takes the below parameters and constructs nodes and flows using&#xD;
	 * the WorkloadListener build nodes and flows function.&#xD;
	 * &#xD;
	 * @param m             is a double that represents the minimum packet reception&#xD;
	 *                      rate&#xD;
	 * @param e2e           is a double that populates this flow object as the input&#xD;
	 *                      is read&#xD;
	 * @param inputFileName is a String that represents the name of the file used to&#xD;
	 *                      create a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_-0gdO3Ee2O0cjNcmYJpQ" name="m" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_-0gtO3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_-0g9O3Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r__bktO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r__bk9O3Ee2O0cjNcmYJpQ" name="WorkLoad" visibility="package" method="_sA-TGdO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r__bmNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r__bmdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNMmz9ejEe2IjMkQsyA0cQ">
                  <body>This method takes the below parameters and constructs nodes and flows using&#xD;
	 * the WorkloadListener build nodes and flows function.&#xD;
	 * &#xD;
	 * @param numFaults     is an Integer that represents the number of faults in a&#xD;
	 *                      flow.&#xD;
	 * @param m             is a double that represents the minimum packet reception&#xD;
	 *                      rate&#xD;
	 * @param e2e           is a double that populates this flow object as the input&#xD;
	 *                      is read&#xD;
	 * @param inputFileName is a String that represents the name of the file used to&#xD;
	 *                      create a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r__blNO3Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r__bldO3Ee2O0cjNcmYJpQ" name="m" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r__bltO3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r__bl9O3Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r__bmtO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r__bnNO3Ee2O0cjNcmYJpQ" name="setMinPacketReceptionRate" method="_sA-TJtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNwtejEe2IjMkQsyA0cQ">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r__bndO3Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r__bntO3Ee2O0cjNcmYJpQ" name="setE2e" method="_sA-6FNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNNNxdejEe2IjMkQsyA0cQ">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r__bn9O3Ee2O0cjNcmYJpQ" name="e2e" type="_r_1qktO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5qxINO3Ee2O0cjNcmYJpQ" name="WorkLoadDescription">
              <ownedComment xmi:id="_LNLYl9ejEe2IjMkQsyA0cQ">
                <body>Reads the input file, whose name is passed as input parameter to the&#xD;
constructor, and builds a Description object based on the contents. Each line&#xD;
of the file is an entry (string) in the Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_r_RC1NO3Ee2O0cjNcmYJpQ" general="_r5VZ8NO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAnGoNO3Ee2O0cjNcmYJpQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAnGodO3Ee2O0cjNcmYJpQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAnGotO3Ee2O0cjNcmYJpQ" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAnGo9O3Ee2O0cjNcmYJpQ" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAnGpNO3Ee2O0cjNcmYJpQ" name="description" visibility="private" type="_r4gTgNO3Ee2O0cjNcmYJpQ" association="_sBoaVNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAnGptO3Ee2O0cjNcmYJpQ" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAntsNO3Ee2O0cjNcmYJpQ" name="fm" visibility="private" type="_r4j94NO3Ee2O0cjNcmYJpQ" association="_sBoaV9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAntstO3Ee2O0cjNcmYJpQ" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIPtO3Ee2O0cjNcmYJpQ" name="WorkLoadDescription" specification="_r5qxIdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIP9O3Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAIQNO3Ee2O0cjNcmYJpQ" type="_r5qxINO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
		this.fm = this.getFileManager();&#xD;
		initialize(inputFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIQdO3Ee2O0cjNcmYJpQ" name="visualization" specification="_r5qxJtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIQtO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIQ9O3Ee2O0cjNcmYJpQ" name="fileVisualization" specification="_r5rYMNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIRNO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIRdO3Ee2O0cjNcmYJpQ" name="toString" specification="_r5rYNNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIRtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAIR9O3Ee2O0cjNcmYJpQ" name="initialize" specification="_r5rYOdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAISNO3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
		InputGraphFile gf = new InputGraphFile(fm);&#xD;
		inputGraphString = gf.readGraphFile(inputFile);&#xD;
		this.inputFileName = gf.getGraphFileName();&#xD;
		description = new Description(inputGraphString);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAISdO3Ee2O0cjNcmYJpQ" name="main" specification="_r5rYO9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAIStO3Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sBAIS9O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoadDescription wld = new WorkLoadDescription(fileName);&#xD;
		Description content = wld.visualization();&#xD;
		// remove empty lines&#xD;
		for (int i = content.size() - 1; i >= 0; i--) {&#xD;
			// equals &quot;&quot; if the line only contains whitespace and newlines&#xD;
			if (content.get(i).trim().equals(&quot;&quot;)) {&#xD;
				content.remove(i);&#xD;
			}&#xD;
		}&#xD;
		// The title is the first word in the first index of the content&#xD;
		// split doesn't remove spaces from the middle&#xD;
		String title = content.remove(0).trim().split(&quot; &quot;)[0];&#xD;
		// there is a } at the end so remove it&#xD;
		content.remove(content.size() - 1);&#xD;
		// sort alphabetically&#xD;
		// Collator is a comparator that sorts string alphabetically&#xD;
		Collections.sort(content, Collator.getInstance());&#xD;
		System.out.println(title);&#xD;
		for (int i = 1; i &lt;= content.size(); i++) {&#xD;
			System.out.println(&quot;Flow &quot; + i + &quot;: &quot; + content.get(i - 1).trim());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5qxIdO3Ee2O0cjNcmYJpQ" name="WorkLoadDescription" visibility="package" method="_sBAIPtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5qxI9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5qxJNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5qxItO3Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5qxJdO3Ee2O0cjNcmYJpQ" type="_r5qxINO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qxJtO3Ee2O0cjNcmYJpQ" name="visualization" method="_sBAIQdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_RC0tO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5rYMNO3Ee2O0cjNcmYJpQ" name="fileVisualization" method="_sBAIQ9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_RC09O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5rYNNO3Ee2O0cjNcmYJpQ" name="toString" method="_sBAIRdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5rYNdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5rYOdO3Ee2O0cjNcmYJpQ" name="initialize" visibility="private" method="_sBAIR9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5rYOtO3Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5rYO9O3Ee2O0cjNcmYJpQ" name="main" isStatic="true" method="_sBAISdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5rYPNO3Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5rYPdO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5r_QNO3Ee2O0cjNcmYJpQ" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_sAnts9O3Ee2O0cjNcmYJpQ" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAnttNO3Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAnttdO3Ee2O0cjNcmYJpQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAntttO3Ee2O0cjNcmYJpQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAntt9O3Ee2O0cjNcmYJpQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAntuNO3Ee2O0cjNcmYJpQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAntudO3Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAntutO3Ee2O0cjNcmYJpQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAntu9O3Ee2O0cjNcmYJpQ" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAntvNO3Ee2O0cjNcmYJpQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAoUwNO3Ee2O0cjNcmYJpQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAoUwtO3Ee2O0cjNcmYJpQ" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAoUw9O3Ee2O0cjNcmYJpQ" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAoUxNO3Ee2O0cjNcmYJpQ" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAoUxdO3Ee2O0cjNcmYJpQ" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAoUx9O3Ee2O0cjNcmYJpQ" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAoUydO3Ee2O0cjNcmYJpQ" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAo70NO3Ee2O0cjNcmYJpQ" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAo70dO3Ee2O0cjNcmYJpQ" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAo70tO3Ee2O0cjNcmYJpQ" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAo709O3Ee2O0cjNcmYJpQ" name="predecessor" type="_r5r_QNO3Ee2O0cjNcmYJpQ" association="_sBLHUNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAo71NO3Ee2O0cjNcmYJpQ" name="endTimes" visibility="private" type="_r4-0ptO3Ee2O0cjNcmYJpQ" association="_sBpBYdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sApi4dO3Ee2O0cjNcmYJpQ" name="subObjects" type="_r_Rp4tO3Ee2O0cjNcmYJpQ" isReadOnly="true" association="_sBpBZNO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvQNO3Ee2O0cjNcmYJpQ" name="SchedulableObject" specification="_r5smUNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvQdO3Ee2O0cjNcmYJpQ" type="_r5r_QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvQtO3Ee2O0cjNcmYJpQ" name="SchedulableObject" specification="_r_SQ8dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvQ9O3Ee2O0cjNcmYJpQ" name="obj" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBAvRNO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvRdO3Ee2O0cjNcmYJpQ" type="_r5r_QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvRtO3Ee2O0cjNcmYJpQ" name="SchedulableObject" specification="_r5smVNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvR9O3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvSNO3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvSdO3Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvStO3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvS9O3Ee2O0cjNcmYJpQ" type="_r5r_QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvTNO3Ee2O0cjNcmYJpQ" name="SchedulableObject" specification="_r5tNZtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvTdO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvTtO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvT9O3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvUNO3Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvUdO3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBAvUtO3Ee2O0cjNcmYJpQ" type="_r5r_QNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvU9O3Ee2O0cjNcmYJpQ" name="setDefaultParameters" specification="_r5tNb9O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvVNO3Ee2O0cjNcmYJpQ" name="getAllEndTimes" specification="_r5tNcNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvVdO3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvVtO3Ee2O0cjNcmYJpQ" name="addToEndTimes" specification="_r5t0cNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvV9O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvWNO3Ee2O0cjNcmYJpQ" name="peekEndTimes" specification="_r5t0ctO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvWdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvWtO3Ee2O0cjNcmYJpQ" name="pollEndTimes" specification="_r5t0dNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvW9O3Ee2O0cjNcmYJpQ" name="addSubObject" specification="_r_S4ANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvXNO3Ee2O0cjNcmYJpQ" name="obj" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvXdO3Ee2O0cjNcmYJpQ" name="getName" specification="_r5t0ddO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvXtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvX9O3Ee2O0cjNcmYJpQ" name="setName" specification="_r5t0d9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvYNO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvYdO3Ee2O0cjNcmYJpQ" name="getReleaseTime" specification="_r5t0edO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvYtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvY9O3Ee2O0cjNcmYJpQ" name="getPhase" specification="_r5t0e9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvZNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvZdO3Ee2O0cjNcmYJpQ" name="getStartTime" specification="_r5t0fdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvZtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvZ9O3Ee2O0cjNcmYJpQ" name="setEndTime" specification="_r5t0f9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvaNO3Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBAvadO3Ee2O0cjNcmYJpQ" name="setStartTime" specification="_r5ubgNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBAvatO3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWUNO3Ee2O0cjNcmYJpQ" name="setReleaseTime" specification="_r5ubgtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWUdO3Ee2O0cjNcmYJpQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWUtO3Ee2O0cjNcmYJpQ" name="setPeriod" specification="_r5ubhNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWU9O3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWVNO3Ee2O0cjNcmYJpQ" name="setPhase" specification="_r5ubhtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWVdO3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWVtO3Ee2O0cjNcmYJpQ" name="setNextReleaseTime" specification="_r5ubiNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWV9O3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWWNO3Ee2O0cjNcmYJpQ" name="maxPhaseComparison" specification="_r_S4AtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWWdO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWWtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWW9O3Ee2O0cjNcmYJpQ" name="maxPhaseComparison" specification="_r_S4BdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWXNO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWXdO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWXtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWX9O3Ee2O0cjNcmYJpQ" name="deadlineComparison" specification="_r_S4CdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWYNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWYdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWYtO3Ee2O0cjNcmYJpQ" name="deadlineComparison" specification="_r_TfENO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWY9O3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWZNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWZdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWZtO3Ee2O0cjNcmYJpQ" name="periodComparison" specification="_r_TfFNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWZ9O3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWaNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWadO3Ee2O0cjNcmYJpQ" name="periodComparison" specification="_r_TfF9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWatO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWa9O3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWbNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWbdO3Ee2O0cjNcmYJpQ" name="priorityComparison" specification="_r_TfG9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWbtO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWb9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWcNO3Ee2O0cjNcmYJpQ" name="priorityComparison" specification="_r_UGItO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWcdO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWctO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWc9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWdNO3Ee2O0cjNcmYJpQ" name="releaseTimeComparison" specification="_r_UGJtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWddO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWdtO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWd9O3Ee2O0cjNcmYJpQ" name="releaseTimeComparison" specification="_r_UGKdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWeNO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWedO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWetO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWe9O3Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparison" specification="_r_UtMNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWfNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWfdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWftO3Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparison" specification="_r_UtM9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWf9O3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWgNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBBWgdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBBWgtO3Ee2O0cjNcmYJpQ" name="compareAscendingOrder" specification="_r5vCkNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBBWg9O3Ee2O0cjNcmYJpQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBBWhNO3Ee2O0cjNcmYJpQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBBWhdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9YNO3Ee2O0cjNcmYJpQ" name="compareDescendingOrder" specification="_r5vClNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBB9YdO3Ee2O0cjNcmYJpQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBB9YtO3Ee2O0cjNcmYJpQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBB9Y9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9ZNO3Ee2O0cjNcmYJpQ" name="print" specification="_r5vpoNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBB9ZdO3Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9ZtO3Ee2O0cjNcmYJpQ" name="print" specification="_r5vpotO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5smUNO3Ee2O0cjNcmYJpQ" name="SchedulableObject" visibility="package" method="_sBAvQNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5smUdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5smUtO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5smU9O3Ee2O0cjNcmYJpQ" type="_r5r_QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5smVNO3Ee2O0cjNcmYJpQ" name="SchedulableObject" visibility="package" method="_sBAvRtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5tNY9O3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5tNZNO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5smVdO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNYNO3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNYdO3Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNYtO3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNZdO3Ee2O0cjNcmYJpQ" type="_r5r_QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5tNZtO3Ee2O0cjNcmYJpQ" name="SchedulableObject" visibility="package" method="_sBAvTNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r5tNbNO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5tNbdO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5tNZ9O3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNaNO3Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNadO3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNatO3Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNa9O3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tNbtO3Ee2O0cjNcmYJpQ" type="_r5r_QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5tNb9O3Ee2O0cjNcmYJpQ" name="setDefaultParameters" visibility="private" method="_sBAvU9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5tNcNO3Ee2O0cjNcmYJpQ" name="getAllEndTimes" method="_sBAvVNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmwNejEe2IjMkQsyA0cQ">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_SQ99O3Ee2O0cjNcmYJpQ" type="_r4-0ptO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5t0cNO3Ee2O0cjNcmYJpQ" name="addToEndTimes" method="_sBAvVtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5t0cdO3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5t0ctO3Ee2O0cjNcmYJpQ" name="peekEndTimes" method="_sBAvWNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5t0c9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5t0dNO3Ee2O0cjNcmYJpQ" name="pollEndTimes" method="_sBAvWtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5t0ddO3Ee2O0cjNcmYJpQ" name="getName" method="_sBAvXdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmwdejEe2IjMkQsyA0cQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5t0dtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5t0d9O3Ee2O0cjNcmYJpQ" name="setName" method="_sBAvX9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmwtejEe2IjMkQsyA0cQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5t0eNO3Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5t0edO3Ee2O0cjNcmYJpQ" name="getReleaseTime" method="_sBAvYdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmw9ejEe2IjMkQsyA0cQ">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5t0etO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5t0e9O3Ee2O0cjNcmYJpQ" name="getPhase" method="_sBAvY9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmxNejEe2IjMkQsyA0cQ">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5t0fNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5t0fdO3Ee2O0cjNcmYJpQ" name="getStartTime" method="_sBAvZdO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmxdejEe2IjMkQsyA0cQ">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5t0ftO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5t0f9O3Ee2O0cjNcmYJpQ" name="setEndTime" method="_sBAvZ9O3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmxtejEe2IjMkQsyA0cQ">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5t0gNO3Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ubgNO3Ee2O0cjNcmYJpQ" name="setStartTime" method="_sBAvadO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmx9ejEe2IjMkQsyA0cQ">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5ubgdO3Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ubgtO3Ee2O0cjNcmYJpQ" name="setReleaseTime" method="_sBBWUNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmyNejEe2IjMkQsyA0cQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5ubg9O3Ee2O0cjNcmYJpQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ubhNO3Ee2O0cjNcmYJpQ" name="setPeriod" method="_sBBWUtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmydejEe2IjMkQsyA0cQ">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5ubhdO3Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ubhtO3Ee2O0cjNcmYJpQ" name="setPhase" method="_sBBWVNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmytejEe2IjMkQsyA0cQ">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5ubh9O3Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ubiNO3Ee2O0cjNcmYJpQ" name="setNextReleaseTime" method="_sBBWVtO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNMmy9ejEe2IjMkQsyA0cQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5ubidO3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5vCkNO3Ee2O0cjNcmYJpQ" name="compareAscendingOrder" method="_sBBWgtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5vCkdO3Ee2O0cjNcmYJpQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5vCktO3Ee2O0cjNcmYJpQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5vCk9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5vClNO3Ee2O0cjNcmYJpQ" name="compareDescendingOrder" method="_sBB9YNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5vCldO3Ee2O0cjNcmYJpQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5vCltO3Ee2O0cjNcmYJpQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5vCl9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5vpoNO3Ee2O0cjNcmYJpQ" name="print" method="_sBB9ZNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5vpodO3Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5vpotO3Ee2O0cjNcmYJpQ" name="print" method="_sBB9ZtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r_SQ8dO3Ee2O0cjNcmYJpQ" name="SchedulableObject" visibility="package" method="_sBAvQtO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_r_SQ9NO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_SQ9dO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_LNMmv9ejEe2IjMkQsyA0cQ">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_SQ8tO3Ee2O0cjNcmYJpQ" name="obj" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_SQ89O3Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_SQ9tO3Ee2O0cjNcmYJpQ" type="_r5r_QNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_S4ANO3Ee2O0cjNcmYJpQ" name="addSubObject" method="_sBAvW9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_S4AdO3Ee2O0cjNcmYJpQ" name="obj" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_S4AtO3Ee2O0cjNcmYJpQ" name="maxPhaseComparison" method="_sBBWWNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_S4A9O3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_S4BNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_S4BdO3Ee2O0cjNcmYJpQ" name="maxPhaseComparison" method="_sBBWW9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_S4BtO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_S4B9O3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_S4CNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_S4CdO3Ee2O0cjNcmYJpQ" name="deadlineComparison" method="_sBBWX9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_S4CtO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_S4C9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_TfENO3Ee2O0cjNcmYJpQ" name="deadlineComparison" method="_sBBWYtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_TfEdO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_TfEtO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_TfE9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_TfFNO3Ee2O0cjNcmYJpQ" name="periodComparison" method="_sBBWZtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_TfFdO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_TfFtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_TfF9O3Ee2O0cjNcmYJpQ" name="periodComparison" method="_sBBWadO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_TfGNO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_TfGdO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_TfGtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_TfG9O3Ee2O0cjNcmYJpQ" name="priorityComparison" method="_sBBWbdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_UGINO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UGIdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_UGItO3Ee2O0cjNcmYJpQ" name="priorityComparison" method="_sBBWcNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_UGI9O3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UGJNO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UGJdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_UGJtO3Ee2O0cjNcmYJpQ" name="releaseTimeComparison" method="_sBBWdNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_UGJ9O3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UGKNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_UGKdO3Ee2O0cjNcmYJpQ" name="releaseTimeComparison" method="_sBBWd9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_UGKtO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UGK9O3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UGLNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_UtMNO3Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparison" method="_sBBWe9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_UtMdO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UtMtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_UtM9O3Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparison" method="_sBBWftO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_UtNNO3Ee2O0cjNcmYJpQ" name="obj1" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UtNdO3Ee2O0cjNcmYJpQ" name="obj2" type="_r5r_QNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_UtNtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5xe0NO3Ee2O0cjNcmYJpQ" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9Z9O3Ee2O0cjNcmYJpQ" name="testAddFlow" specification="_r5xe0dO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F2&quot;;&#xD;
		//Add flow to workload&#xD;
		wld.addFlow(flowName);&#xD;
		&#xD;
		//check flows in the created workload, and return true if flowName&#xD;
		//is in it&#xD;
		assertTrue(wld.getFlows().containsKey(flowName), String.format(&quot;Expected true but got false&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9aNO3Ee2O0cjNcmYJpQ" name="testAddFlowOverwritten" specification="_r5yF49O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		&#xD;
		wld.addFlow(flowName);&#xD;
		&#xD;
		assertTrue(wld.getFlows().containsKey(flowName), String.format(&quot;Expected true but got false&quot;));&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9adO3Ee2O0cjNcmYJpQ" name="testAddNodeToFlow" specification="_r5yF6tO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		String nodeName = &quot;A&quot;;&#xD;
				&#xD;
		//Adds a node to the flow in workload&#xD;
		wld.addNodeToFlow(flowName, nodeName);&#xD;
		&#xD;
		//Checking to see if the added node is present in workload.&#xD;
		assertTrue(wld.getNodes().containsKey(nodeName),String.format(&quot;Expected true but got false&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9atO3Ee2O0cjNcmYJpQ" name="testAddNodeToFlowEmpty" specification="_r5yF8dO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;EmptyWorkload.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		String nodeName = &quot;A&quot;;&#xD;
		&#xD;
		wld.addFlow(flowName);&#xD;
		wld.addNodeToFlow(flowName, nodeName);&#xD;
		&#xD;
		assertTrue(wld.getNodes().containsKey(nodeName), String.format(&quot;Expected true but got false&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9a9O3Ee2O0cjNcmYJpQ" name="testSetFlowPriority" specification="_r5yF-NO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		Integer priority = 0;&#xD;
		//sets priority to given flow&#xD;
		wld.setFlowPriority(flowName, priority);&#xD;
	    int actual = wld.getFlowPriority(flowName);&#xD;
		//checks to see if the priority has been correctly set to flowName&#xD;
		assertEquals(priority, actual,String.format(&quot;Expected %d Flow Priority but got %d.&quot;, priority, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9bNO3Ee2O0cjNcmYJpQ" name="testGetFlowTxAttemptsPerLink" specification="_r5ys9tO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		&#xD;
		int numAttempts = wld.getFlowTxAttemptsPerLink(flowName);&#xD;
		int expected = 3;&#xD;
		&#xD;
		&#xD;
		assertEquals(expected,numAttempts, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, numAttempts));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9bdO3Ee2O0cjNcmYJpQ" name="testGetFlowNames" specification="_r5ys_dO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99, &quot;Example1a.txt&quot;);&#xD;
		String[] flowNames = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(flowNames));&#xD;
		&#xD;
		List&lt;String> actual = wld.getFlowNamesInOriginalOrder();&#xD;
		&#xD;
		assertEquals(expected, actual, String.format(&quot;Expected Flow names %s, but got %s&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9btO3Ee2O0cjNcmYJpQ" name="testGetFlowNamesEmpty" specification="_r5ytBNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;EmptyWorkload.txt&quot;);&#xD;
		String[] flowNames = {};&#xD;
		&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(flowNames));&#xD;
		&#xD;
		List&lt;String> actual = wld.getFlowNamesInOriginalOrder();&#xD;
		&#xD;
		assertEquals(expected, actual, String.format(&quot;Expected Flow names %s, but got %s&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9b9O3Ee2O0cjNcmYJpQ" name="testGetNodeIndexExisting" specification="_r5zUAtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		&#xD;
		String nodeName = &quot;B&quot;;&#xD;
		&#xD;
		int actual = wld.getNodeIndex(nodeName);&#xD;
		int expected = 1;&#xD;
		&#xD;
		assertEquals(expected,actual,String.format(&quot;Expected Node index %d but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBB9cNO3Ee2O0cjNcmYJpQ" name="testGetNodeIndexNonExisting" specification="_r5zUCdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		&#xD;
		String nodeName = &quot;null&quot;;&#xD;
		&#xD;
		int actual = wld.getNodeIndex(nodeName);&#xD;
		int expected = 0;&#xD;
		&#xD;
		assertEquals(expected,actual,String.format(&quot;Expected node index %d but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkcNO3Ee2O0cjNcmYJpQ" name="testGetNumTxAttemptsPerLink" specification="_r5zUENO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99, &quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		&#xD;
		Integer[] expected = {2,2,0};&#xD;
		Integer[] actual = wld.getNumTxAttemptsPerLink(flowName);&#xD;
&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkcdO3Ee2O0cjNcmYJpQ" name="testMaxFlowLength" specification="_r5zUF9O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example2.txt&quot;);&#xD;
		//6 is the highest length of a flow in Example2.txt&#xD;
		int expected = 6;&#xD;
		int actual = wld.maxFlowLength();&#xD;
		&#xD;
		assertEquals(expected,actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkctO3Ee2O0cjNcmYJpQ" name="testMaxFlowLengthEmpty" specification="_r5z7FtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;EmptyWorkload.txt&quot;);&#xD;
		//6 is the highest length of a flow in Example2.txt&#xD;
		int expected = 0;&#xD;
		int actual = wld.maxFlowLength();&#xD;
		&#xD;
		assertEquals(expected,actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkc9O3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowNonExistentFlow" specification="_r5z7HdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;Nonexistent Flow&quot;;&#xD;
&#xD;
		// If the lambda does not throw an IndexOutOfBoundsException,&#xD;
		// then the test will fail&#xD;
		Exception thrown = assertThrows(IndexOutOfBoundsException.class, () -> wld.getTotalTxAttemptsInFlow(flowName),&#xD;
				&quot;An IndexOutOfBounds exception was expected but not thrown.&quot;);&#xD;
		&#xD;
		// expected and actual error messages&#xD;
		String expectedErrorMessage = &quot;Index -1 out of bounds for length 0&quot;;&#xD;
		String actualErrorMessage = thrown.getMessage();&#xD;
&#xD;
		// Checking to make sure the error message from the exception is what I expected&#xD;
		assertEquals(expectedErrorMessage, actualErrorMessage, String.format(&#xD;
				&quot;Error message is incorrect. Expected %s but got %s&quot;, expectedErrorMessage, actualErrorMessage));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkdNO3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlow1" specification="_r5z7JNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		System.out.println(String.format(&quot;Num: %d&quot;, wld.getTotalTxAttemptsInFlow(flowName)));&#xD;
		int expected = 2;&#xD;
		int actual = wld.getTotalTxAttemptsInFlow(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkddO3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlow2" specification="_r50iJtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String flowName = &quot;AF4&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		int expected = 2;&#xD;
		int actual = wld.getTotalTxAttemptsInFlow(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkdtO3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlowNumFaults1" specification="_r50iLdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(6, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		System.out.println(String.format(&quot;Num: %d&quot;, wld.getTotalTxAttemptsInFlow(flowName)));&#xD;
		int expected = 14;&#xD;
		int actual = wld.getTotalTxAttemptsInFlow(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkd9O3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlowNumFaults2" specification="_r50iNNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(5, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String flowName = &quot;AF4&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		int expected = 42;&#xD;
		int actual = wld.getTotalTxAttemptsInFlow(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkeNO3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityNonExistentFlow" specification="_r51JNtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;Nonexistent Flow&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		// when a node does not exist a blank flow is created and&#xD;
		// the priority is set by default to 0&#xD;
		int expected = 0;&#xD;
		int actual = wld.getFlowPriority(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkedO3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityDefaultPriority" specification="_r51JPdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		// 0 is the default priority and the priority is not specified in Example.txt&#xD;
		int expected = 0;&#xD;
		int actual = wld.getFlowPriority(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCketO3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityCustomPriority1" specification="_r51wRNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1A.txt&quot;);&#xD;
		&#xD;
		// Create expected and actual values&#xD;
		{&#xD;
			String flowName = &quot;F0&quot;;&#xD;
			// 0 is the priority set for F0 in Example1A.txt&#xD;
			int expected = 0;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		{&#xD;
			String flowName = &quot;F1&quot;;&#xD;
			// 1 is the priority set for F1 in Example1A.txt&#xD;
			int expected = 1;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
			&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCke9O3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityCustomPriority2" specification="_r51wS9O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// Create expected and actual values&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow1&quot;;&#xD;
			// 70 is the priority set for RandomFlow1 in CustomWorkloadByZach.txt&#xD;
			int expected = 70;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow2&quot;;&#xD;
			// 48 is the priority set for RandomFlow2 in CustomWOrkloadByZach.txt&#xD;
			int expected = 48;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
			&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow3&quot;;&#xD;
			// 23 is the priority set for RandomFlow3 in CustomWOrkloadByZach.txt&#xD;
			int expected = 23;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
			&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkfNO3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityWithNodes" specification="_r51wUtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1a.txt&quot;);&#xD;
		&#xD;
		String nodeName = &quot;B&quot;;&#xD;
		{&#xD;
			// Set up values&#xD;
			String flowName = &quot;F0&quot;;&#xD;
			int expected = 0;&#xD;
			int actual = wld.getFlowPriority(flowName, nodeName);&#xD;
		&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		{&#xD;
			// Set up values&#xD;
			String flowName = &quot;F1&quot;;&#xD;
			int expected = 0;&#xD;
			int actual = wld.getFlowPriority(flowName, nodeName);&#xD;
		&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkfdO3Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrder1" specification="_r52XUNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1a.txt&quot;);&#xD;
		&#xD;
		// We are testing that flows are sorted in order of period then priority as the second key&#xD;
		wld.setFlowsInRMorder();&#xD;
		&#xD;
		String[] expectedArray = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		// convert and array to arraylist&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(expectedArray));&#xD;
		// The actual contains a list of the names of the flows&#xD;
		List&lt;String> actual = wld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		// first check the sizes are equals so the loop won't crash&#xD;
		int expectedLength = expected.size();&#xD;
		int actualLength = actual.size();&#xD;
		assertSame(expectedLength, actualLength, String.format(&quot;Length of expected array is %d but we got %d&quot;, expectedLength, actualLength));&#xD;
		&#xD;
		// check to make sure the content of each array is equal&#xD;
		for(int i = 0; i &lt; expectedLength; i++) {&#xD;
			String expectedString = expected.get(i);&#xD;
			String actualString = actual.get(i);&#xD;
			assertEquals(expectedString, actualString, String.format(&quot;Expected %s but got %s.&quot;, expectedString, actualString));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkftO3Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrder2" specification="_r52XV9O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// We are testing that flows are sorted in order of period then priority as the second key&#xD;
		wld.setFlowsInRMorder();&#xD;
		String[] expectedArray = {&quot;RandomFlow1&quot;, &quot;RandomFlow3&quot;, &quot;RandomFlow2&quot;};&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(expectedArray));&#xD;
		// The actual contains a list of the names of the flows&#xD;
		List&lt;String> actual = wld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		// ensuring the lengths are the same so the loop won't crash&#xD;
		int expectedLength = expected.size();&#xD;
		int actualLength = actual.size();&#xD;
		assertSame(expectedLength, actualLength, String.format(&quot;Length of expected array is %d but we got %d&quot;, expectedLength, actualLength));&#xD;
		&#xD;
		// making sure the arrays are actually equal&#xD;
		for(int i = 0; i &lt; expectedLength; i++) {&#xD;
			String expectedString = expected.get(i);&#xD;
			String actualString = actual.get(i);&#xD;
			assertEquals(expectedString, actualString, String.format(&quot;Expected %s but got %s.&quot;, expectedString, actualString));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkf9O3Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrderSamePeriod" specification="_r52XXtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;SamePeriod.txt&quot;);&#xD;
		&#xD;
		// We are testing that flows are sorted in order of period then priority as the second key&#xD;
		// Since the period for this file is the same we must check the priority&#xD;
		wld.setFlowsInRMorder();&#xD;
		String[] expectedArray = {&quot;SamePeriod3&quot;, &quot;SamePeriod2&quot;, &quot;SamePeriod1&quot;};&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(expectedArray));&#xD;
		// The actual contains a list of the names of the flows&#xD;
		List&lt;String> actual = wld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		// make sure the sizes are the same so it won't crash&#xD;
		int expectedLength = expected.size();&#xD;
		int actualLength = actual.size();&#xD;
		assertSame(expectedLength, actualLength, String.format(&quot;Length of expected array is %d but we got %d&quot;, expectedLength, actualLength));&#xD;
		&#xD;
		// ensure the arrays are equal&#xD;
		for(int i = 0; i &lt; expectedLength; i++) {&#xD;
			String expectedString = expected.get(i);&#xD;
			String actualString = actual.get(i);&#xD;
			assertEquals(expectedString, actualString, String.format(&quot;Expected %s but got %s.&quot;, expectedString, actualString));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkgNO3Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrderSamePeriodSamePriority" specification="_r52XZdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		// We are testing that flows are sorted in order of period then priority as the second key&#xD;
		// Since the period for this file is the same we must check the priority&#xD;
		// Since priority same flows come in default order&#xD;
		wld.setFlowsInRMorder();&#xD;
		String[] expectedArray = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(expectedArray));&#xD;
		// The actual contains a list of the names of the flows&#xD;
		List&lt;String> actual = wld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		// test if the arrays have the same lengths&#xD;
		int expectedLength = expected.size();&#xD;
		int actualLength = actual.size();&#xD;
		assertSame(expectedLength, actualLength, String.format(&quot;Length of expected array is %d but we got %d&quot;, expectedLength, actualLength));&#xD;
		&#xD;
		// test that the arrays are equal&#xD;
		for(int i = 0; i &lt; expectedLength; i++) {&#xD;
			String expectedString = expected.get(i);&#xD;
			String actualString = actual.get(i);&#xD;
			assertEquals(expectedString, actualString, String.format(&quot;Expected %s but got %s.&quot;, expectedString, actualString));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkgdO3Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabetically" specification="_r52-ZtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		// abc is alphabetical order&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		String[] actual = wld.getNodeNamesOrderedAlphabetically();&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkgtO3Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabeticallyNumberedNodes" specification="_r52-bdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;NumberedNodes.txt&quot;);&#xD;
		&#xD;
		// creating expected and actual values&#xD;
		String[] expected = {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;};&#xD;
		String[] actual = wld.getNodeNamesOrderedAlphabetically();&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkg9O3Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabeticallyMixedNodes" specification="_r52-dNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;MixedNodes.txt&quot;);&#xD;
		&#xD;
		// creating expected and actual values&#xD;
		String[] expected = {&quot;1A&quot;, &quot;1B&quot;, &quot;A1&quot;, &quot;B1&quot;};&#xD;
		String[] actual = wld.getNodeNamesOrderedAlphabetically();&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkhNO3Ee2O0cjNcmYJpQ" name="testGetNodesInFlowNonExistentFlow" specification="_r53lcNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		// creating flowname, expected and actual values&#xD;
		String flowName = &quot;NonExistentFlow&quot;;&#xD;
		String[] expected = new String[0];&#xD;
		String[] actual = wld.getNodesInFlow(flowName);&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkhdO3Ee2O0cjNcmYJpQ" name="testGetNodesInFlow1" specification="_r53ld9O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		// creates flowname and expected and actual values&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		String[] actual = wld.getNodesInFlow(flowName);&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkhtO3Ee2O0cjNcmYJpQ" name="testGetNodesInFlow2" specification="_r53lftO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// creates flowname and expected and actual values&#xD;
		String flowName = &quot;RandomFlow3&quot;;&#xD;
		String[] expected = {&quot;D&quot;, &quot;C&quot;, &quot;A&quot;};&#xD;
		String[] actual = wld.getNodesInFlow(flowName);&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBCkh9O3Ee2O0cjNcmYJpQ" name="testGetHyperPeriodNoFlows" specification="_r53lhdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;EmptyWorkload.txt&quot;);&#xD;
		&#xD;
		// creating expected and actual values&#xD;
		Integer expected = 1;&#xD;
		Integer actual = wld.getHyperPeriod();&#xD;
&#xD;
		assertEquals(expected, actual, String.format(&quot;Expected %d but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDLgNO3Ee2O0cjNcmYJpQ" name="testGetHyperPeriod" specification="_r54MhtO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// expected and actual values&#xD;
		Integer expected = 180;&#xD;
		Integer actual = wld.getHyperPeriod();&#xD;
&#xD;
		assertEquals(expected, actual, String.format(&quot;Expected %d but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDLgdO3Ee2O0cjNcmYJpQ" name="testGetFlowDeadlineNonExistentFlow" specification="_r54MjdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		String flowName = &quot;NonExistentFlow&quot;;&#xD;
		// default flow deadline is 100&#xD;
		Integer expected = 100;&#xD;
		// if a flow doesn't exist it will create a default flow with default parameters&#xD;
		Integer actual = wld.getFlowDeadline(flowName);&#xD;
		&#xD;
		assertEquals(expected, actual, String.format(&quot;expected %d but got %d&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDLgtO3Ee2O0cjNcmYJpQ" name="testGetFlowDeadline" specification="_r54MlNO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// testing flow 1&#xD;
		{&#xD;
			//creating flowname and expected and actual values&#xD;
			String flowName = &quot;RandomFlow1&quot;;&#xD;
			Integer expected = 10;&#xD;
			Integer actual = wld.getFlowDeadline(flowName);&#xD;
			&#xD;
			// assertion&#xD;
			assertEquals(expected, actual, String.format(&quot;expected %d but got %d&quot;, expected, actual));			&#xD;
		}&#xD;
		&#xD;
		// testing flow 2&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow2&quot;;&#xD;
			Integer expected = 0;&#xD;
			Integer actual = wld.getFlowDeadline(flowName);&#xD;
			&#xD;
			assertEquals(expected, actual, String.format(&quot;expected %d but got %d&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		// testing flow 3&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow3&quot;;&#xD;
			Integer expected = 16;&#xD;
			Integer actual = wld.getFlowDeadline(flowName);&#xD;
			&#xD;
			assertEquals(expected, actual, String.format(&quot;expected %d but got %d&quot;, expected, actual));&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDLg9O3Ee2O0cjNcmYJpQ" name="testSetFlowDeadline" specification="_r54zltO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// flow name to use&#xD;
		String flowName = &quot;RandomFlow3&quot;;&#xD;
		&#xD;
		// making sure that the initial values are what we expect them to be&#xD;
		Integer initialExpectedDeadline = 16;&#xD;
		Integer initialActualDeadline = wld.getFlowDeadline(flowName);&#xD;
		&#xD;
		assertEquals(initialExpectedDeadline, initialActualDeadline, String.format(&quot;Expected %d but got %d&quot;, initialExpectedDeadline, initialActualDeadline));&#xD;
		&#xD;
		// setting the deadline to 1234&#xD;
		Integer expectedDeadline = 1234;&#xD;
		wld.setFlowDeadline(flowName, expectedDeadline);&#xD;
		&#xD;
		// getting the new deadline which should have changed&#xD;
		Integer actualDeadline = wld.getFlowDeadline(flowName);&#xD;
		&#xD;
		assertEquals(expectedDeadline, actualDeadline, String.format(&quot;Expected %d but got %d&quot;, expectedDeadline, actualDeadline));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDLhNO3Ee2O0cjNcmYJpQ" name="printArrayHelper" specification="_sAB30tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDLhdO3Ee2O0cjNcmYJpQ" name="arr" type="_sAB30NO3Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sBDLhtO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDLh9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder str = new StringBuilder().append(&quot;[&quot;);&#xD;
		for(int i = 0; i &lt; arr.length; i++) {&#xD;
			str.append((arr[i].toString() + &quot;, &quot;));&#xD;
		}&#xD;
		str.append(&quot;]&quot;);&#xD;
		return str.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5xe0dO3Ee2O0cjNcmYJpQ" name="testAddFlow" visibility="package" method="_sBB9Z9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5yF49O3Ee2O0cjNcmYJpQ" name="testAddFlowOverwritten" visibility="package" method="_sBB9aNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5yF6tO3Ee2O0cjNcmYJpQ" name="testAddNodeToFlow" visibility="package" method="_sBB9adO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5yF8dO3Ee2O0cjNcmYJpQ" name="testAddNodeToFlowEmpty" visibility="package" method="_sBB9atO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5yF-NO3Ee2O0cjNcmYJpQ" name="testSetFlowPriority" visibility="package" method="_sBB9a9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5ys9tO3Ee2O0cjNcmYJpQ" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_sBB9bNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5ys_dO3Ee2O0cjNcmYJpQ" name="testGetFlowNames" visibility="package" method="_sBB9bdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5ytBNO3Ee2O0cjNcmYJpQ" name="testGetFlowNamesEmpty" visibility="package" method="_sBB9btO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5zUAtO3Ee2O0cjNcmYJpQ" name="testGetNodeIndexExisting" visibility="package" method="_sBB9b9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5zUCdO3Ee2O0cjNcmYJpQ" name="testGetNodeIndexNonExisting" visibility="package" method="_sBB9cNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5zUENO3Ee2O0cjNcmYJpQ" name="testGetNumTxAttemptsPerLink" visibility="package" method="_sBCkcNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5zUF9O3Ee2O0cjNcmYJpQ" name="testMaxFlowLength" visibility="package" method="_sBCkcdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5z7FtO3Ee2O0cjNcmYJpQ" name="testMaxFlowLengthEmpty" visibility="package" method="_sBCkctO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5z7HdO3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowNonExistentFlow" visibility="package" method="_sBCkc9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5z7JNO3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlow1" visibility="package" method="_sBCkdNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r50iJtO3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlow2" visibility="package" method="_sBCkddO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r50iLdO3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlowNumFaults1" visibility="package" method="_sBCkdtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r50iNNO3Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlowNumFaults2" visibility="package" method="_sBCkd9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r51JNtO3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityNonExistentFlow" visibility="package" method="_sBCkeNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r51JPdO3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityDefaultPriority" visibility="package" method="_sBCkedO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r51wRNO3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityCustomPriority1" visibility="package" method="_sBCketO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r51wS9O3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityCustomPriority2" visibility="package" method="_sBCke9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r51wUtO3Ee2O0cjNcmYJpQ" name="testGetFlowPriorityWithNodes" visibility="package" method="_sBCkfNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r52XUNO3Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrder1" visibility="package" method="_sBCkfdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r52XV9O3Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrder2" visibility="package" method="_sBCkftO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r52XXtO3Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrderSamePeriod" visibility="package" method="_sBCkf9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r52XZdO3Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrderSamePeriodSamePriority" visibility="package" method="_sBCkgNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r52-ZtO3Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabetically" visibility="package" method="_sBCkgdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r52-bdO3Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabeticallyNumberedNodes" visibility="package" method="_sBCkgtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r52-dNO3Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabeticallyMixedNodes" visibility="package" method="_sBCkg9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r53lcNO3Ee2O0cjNcmYJpQ" name="testGetNodesInFlowNonExistentFlow" visibility="package" method="_sBCkhNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r53ld9O3Ee2O0cjNcmYJpQ" name="testGetNodesInFlow1" visibility="package" method="_sBCkhdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r53lftO3Ee2O0cjNcmYJpQ" name="testGetNodesInFlow2" visibility="package" method="_sBCkhtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r53lhdO3Ee2O0cjNcmYJpQ" name="testGetHyperPeriodNoFlows" visibility="package" method="_sBCkh9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r54MhtO3Ee2O0cjNcmYJpQ" name="testGetHyperPeriod" visibility="package" method="_sBDLgNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r54MjdO3Ee2O0cjNcmYJpQ" name="testGetFlowDeadlineNonExistentFlow" visibility="package" method="_sBDLgdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r54MlNO3Ee2O0cjNcmYJpQ" name="testGetFlowDeadline" visibility="package" method="_sBDLgtO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r54zltO3Ee2O0cjNcmYJpQ" name="testSetFlowDeadline" visibility="package" method="_sBDLg9O3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_sAB30tO3Ee2O0cjNcmYJpQ" name="printArrayHelper" visibility="package" method="_sBDLhNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sAB309O3Ee2O0cjNcmYJpQ" name="arr" type="_sAB30NO3Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAB31dO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAB31NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r56BsNO3Ee2O0cjNcmYJpQ" name="Program">
              <ownedComment xmi:id="_LNOb5dejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAqJ8NO3Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAqJ8dO3Ee2O0cjNcmYJpQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAqJ8tO3Ee2O0cjNcmYJpQ" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAqJ89O3Ee2O0cjNcmYJpQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAqJ9NO3Ee2O0cjNcmYJpQ" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAqJ9dO3Ee2O0cjNcmYJpQ" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAqJ9tO3Ee2O0cjNcmYJpQ" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAqJ99O3Ee2O0cjNcmYJpQ" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAqxANO3Ee2O0cjNcmYJpQ" name="workLoad" visibility="package" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBpocdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAqxAtO3Ee2O0cjNcmYJpQ" name="scheduleBuilt" visibility="package" type="_r47xUNO3Ee2O0cjNcmYJpQ" association="_sBpodNO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAqxBNO3Ee2O0cjNcmYJpQ" name="SchedulerSelected" visibility="package" type="_r_9mZdO3Ee2O0cjNcmYJpQ" association="_sBpod9O3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sAqxBtO3Ee2O0cjNcmYJpQ" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAqxCNO3Ee2O0cjNcmYJpQ" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sArYENO3Ee2O0cjNcmYJpQ" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sArYEtO3Ee2O0cjNcmYJpQ" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sArYFNO3Ee2O0cjNcmYJpQ" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sArYFtO3Ee2O0cjNcmYJpQ" name="channelsAvailable" visibility="package" type="_r4XwoNO3Ee2O0cjNcmYJpQ" association="_sBqPgdO3Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_sArYGNO3Ee2O0cjNcmYJpQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAr_INO3Ee2O0cjNcmYJpQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAr_ItO3Ee2O0cjNcmYJpQ" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAr_JNO3Ee2O0cjNcmYJpQ" name="deadlineMisses" visibility="private" type="_r4gTgNO3Ee2O0cjNcmYJpQ" association="_sBqPhNO3Ee2O0cjNcmYJpQ"/>
              <interfaceRealization xmi:id="_r_YXkNO3Ee2O0cjNcmYJpQ" client="_r56BsNO3Ee2O0cjNcmYJpQ" supplier="_r5OsQdO3Ee2O0cjNcmYJpQ" contract="_r5OsQdO3Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDLiNO3Ee2O0cjNcmYJpQ" name="Program" specification="_sADF8NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDLidO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBDLitO3Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDLi9O3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBDLjNO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDLjdO3Ee2O0cjNcmYJpQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDLjtO3Ee2O0cjNcmYJpQ" type="_r56BsNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
		buildProgram(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDLj9O3Ee2O0cjNcmYJpQ" name="Program" specification="_sADF-dO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDLkNO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBDLkdO3Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDLktO3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBDLk9O3Ee2O0cjNcmYJpQ" type="_r56BsNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
		buildProgram(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDykNO3Ee2O0cjNcmYJpQ" name="setDefaultParameters" specification="_r_Y-oNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDykdO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBDyktO3Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyk9O3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDylNO3Ee2O0cjNcmYJpQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
		this.scheduleBuilt = new ProgramSchedule();&#xD;
		this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
		workLoad.setFlowsInPriorityOrder();&#xD;
		this.schedulerName = &quot;Priority&quot;;&#xD;
		this.schChoice = &quot;Priority&quot;;&#xD;
		this.nTransmissions = 0;&#xD;
		this.realTimeHARTflag = false;&#xD;
		this.optimizationRequested = true;&#xD;
		this.nChannels = nChannels;&#xD;
		this.verbose = verbose;&#xD;
		this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
		this.reportLatency = reportLatency;&#xD;
		this.deadlineMisses = new Description();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDyldO3Ee2O0cjNcmYJpQ" name="toWorkLoad" specification="_r56owNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDyltO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDyl9O3Ee2O0cjNcmYJpQ" name="buildProgram" specification="_sADtANO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDymNO3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/*&#xD;
		 * Switch on the scheduler choice. If it is POSET-based scheduler, create the&#xD;
		 * POSET that matches the name and then use the newer schedule object to convert&#xD;
		 * the POSET to a program. If it is an original scheduler choice, build set the&#xD;
		 * scheduler type and build the schedule and WARP program by calling&#xD;
		 * buildOriginalProgram();&#xD;
		 */&#xD;
		switch (choice) { // select the requested scheduler&#xD;
		case WARP_POSET_PRIORITY: // fall through&#xD;
		case WARP_POSET_RM: // fall through&#xD;
		case WARP_POSET_DM: // fall through&#xD;
			setScheduleSelected(choice);&#xD;
			var poset1 = new WarpPoset(workLoad);&#xD;
			var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
			var newProgram = schedule1.toProgram();&#xD;
			setSchedule(newProgram); // store the schedule built&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
		case CONNECTIVITY_POSET_RM: // fall through&#xD;
		case CONNECTIVITY_POSET_DM: // fall through&#xD;
		case POSET_PRIORITY: // fall through&#xD;
		case POSET_RM: // fall through&#xD;
		case POSET_DM:&#xD;
			setScheduleSelected(choice);&#xD;
			// var poset = new BasicPoset(workLoad);&#xD;
			var poset2 = new ConnectivityPoset(workLoad);&#xD;
			var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
			newProgram = schedule2.toProgram();&#xD;
			setSchedule(newProgram); // store the schedule built&#xD;
			break;&#xD;
		//// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
		//// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
		//// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
		// var poset3 = new ConnectivityPoset(workLoad);&#xD;
		// var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
		// newProgram = schedule3.toProgram();&#xD;
		// setSchedule(newProgram); // store the schedule built&#xD;
		// break;&#xD;
		case PRIORITY:&#xD;
			selectPriority();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break;&#xD;
		case RM:&#xD;
			selectRM();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break;&#xD;
		case DM:&#xD;
			selectDM();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break;&#xD;
		case RTHART:&#xD;
			selectRtHART();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break;&#xD;
		default:&#xD;
			selectPriority();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break; // break from switch&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDymdO3Ee2O0cjNcmYJpQ" name="buildOriginalProgram" specification="_r56owdO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
		if (verbose) {&#xD;
			var scheduleDetails = String.format(&#xD;
					&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;, workLoad.getName());&#xD;
			scheduleDetails = String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
			scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
					String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
			scheduleDetails = String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
			scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
			// The following parameters are only output when special schedules are requested&#xD;
			if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
				scheduleDetails = String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
			}&#xD;
			if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
				scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
			}&#xD;
			System.out.println(scheduleDetails);&#xD;
		}&#xD;
		var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
					// nTransmissions == n 0 else flow.nTXperLink&#xD;
		var nTransmissions = getNumTransmissions();&#xD;
		Boolean realtimeHART = getRealTimeHartFlag();&#xD;
		var optimizationRequested = getOptimizationFlag();&#xD;
		var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
		var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
		var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
		// var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an&#xD;
		// array of node&#xD;
		// names&#xD;
		// sorted alphabetically&#xD;
		var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
		var nNodes = nodeIndex.size();&#xD;
		/*&#xD;
		 * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index&#xD;
		 * mapping var name = orderedNodes[index]; nodeIndex.put(name, index); // add&#xD;
		 * name, index mapping to NodeIndex map }&#xD;
		 */&#xD;
		var hyperPeriod = workLoad.getHyperPeriod();&#xD;
		for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
												// period and the channels entries are all initialized&#xD;
			var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
																								// time slot&#xD;
																								// for&#xD;
																								// nNodes,&#xD;
																								// each&#xD;
																								// initialized&#xD;
																								// with a&#xD;
																								// SLEEP_INSTRUCTION&#xD;
			schedule.add(newInstructionTimeSlot);&#xD;
			channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
													// slot&#xD;
		}&#xD;
		// create an instance of the Warp DSL class for parsing instructions&#xD;
		var dsl = new WarpDSL();&#xD;
&#xD;
		for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
			var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
			var nNodesInFlow = nodesInFlow.length;&#xD;
			var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
			if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
										// array otherwise&#xD;
				e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
				if (realtimeHART) {&#xD;
					nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
				} // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
			} else {&#xD;
				nTx = nTransmissions;&#xD;
			}&#xD;
			var snk = &quot;&quot;;&#xD;
			var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
			if (verbose) {&#xD;
				var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
				var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
												// i.e., min nTx to go E2E with no errors&#xD;
				System.out.printf(&#xD;
						&quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
						flowName, minCost, totalCost);&#xD;
			}&#xD;
			if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
							// is dependent on reliability target&#xD;
				nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
			}&#xD;
			var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
															// previous slots to 0&#xD;
			Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
			var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
																// scheduling this flow&#xD;
			var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
													// flow&#xD;
			var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
																	// this flow&#xD;
			var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
			var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
														// node can first transmit&#xD;
			for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
				for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
																									// push for&#xD;
																									// last&#xD;
																									// node, so&#xD;
																									// stop at&#xD;
																									// node&#xD;
																									// n-1,&#xD;
																									// which is&#xD;
																									// 2 less&#xD;
																									// than&#xD;
																									// count&#xD;
					var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
																		// (aka source of data)&#xD;
					if (e2eFlag) {&#xD;
						nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
					}&#xD;
					var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
																	// for previous node&#xD;
					Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
					for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
																// flow meets desired reliability&#xD;
						var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
																	// instruction in its program&#xD;
						var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
															// priorSrcInstruction during optimization&#xD;
						var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
														// not&#xD;
						snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
																// UNKNOWN if we don't&#xD;
						// when not optimizing instructionNodeName is current node, but we might update&#xD;
						// a&#xD;
						// different node's instruction to optimize&#xD;
						var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
																		// flow release, which happens once every&#xD;
																		// period in the hyperPeriod&#xD;
						var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
																								// precedence&#xD;
																								// constraints on&#xD;
																								// flow are&#xD;
																								// preserved&#xD;
						Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule, firstPossibleSlot,&#xD;
								flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
								SLEEP_INSTRUCTION, realtimeHART, optimizationRequested, nodeIndex.get(currentNodeName),&#xD;
								nodeIndex.get(snk));&#xD;
						if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
																	// schedule length. Increase schedule and&#xD;
																	// channelsAvailable tables&#xD;
							for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
								var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
																													// a&#xD;
																													// time&#xD;
																													// slot&#xD;
																													// for&#xD;
																													// nNodes,&#xD;
																													// each&#xD;
																													// initialized&#xD;
																													// with&#xD;
																													// a&#xD;
																													// SLEEP_INSTRUCTION&#xD;
								schedule.add(newInstructionTimeSlot);&#xD;
								channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
																		// for all slots. instructionIndex may be >&#xD;
																		// initialized size of array because of&#xD;
																		// phases...&#xD;
							}&#xD;
						}&#xD;
						String channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
								nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
						// Now check if we have a valid channel. If not we need to find a new time slot&#xD;
						// further&#xD;
						// down the schedule.&#xD;
						// So, initialize the search to start at the current slot and then increase by&#xD;
						// one each&#xD;
						// time we loop if the current slot&#xD;
						// Now check if we have a valid channel. If not we need to find a new time slot&#xD;
						// further&#xD;
						// down the schedule.&#xD;
						// So, initialize the search to start at the current slot and then increase by&#xD;
						// one each&#xD;
						// time we loop if the current slot&#xD;
						while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
															// channel was available. In that case, we need to&#xD;
															// find a new slot for this instruction after the last&#xD;
															// index found&#xD;
							var startSearchIndex = instructionIndex + 1;&#xD;
							instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
									flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
									SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
									nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
							if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
																		// schedule lenght. Increase schedule and&#xD;
																		// channelsAvailable tables&#xD;
								for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
									var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
																														// a&#xD;
																														// time&#xD;
																														// slot&#xD;
																														// for&#xD;
																														// nNodes,&#xD;
																														// each&#xD;
																														// initialized&#xD;
																														// with&#xD;
																														// a&#xD;
																														// SLEEP_INSTRUCTION&#xD;
									schedule.add(newInstructionTimeSlot);&#xD;
									channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
																			// for all slots. instructionIndex may be >&#xD;
																			// initialized size of array because of&#xD;
																			// phases...&#xD;
								}&#xD;
							}&#xD;
							channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
									nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
						}&#xD;
						workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
						if (realtimeHART) {&#xD;
							newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
						} else {&#xD;
							newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
						}&#xD;
&#xD;
						// if optimization flag is set, look to see if any optimizations are possible&#xD;
						if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
							var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
							var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
									.toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
							var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
																									// instruction&#xD;
																									// scheduled for&#xD;
																									// snk to execute&#xD;
																									// in the prior&#xD;
																									// time slot&#xD;
							if (index == (nTx - 1)) {&#xD;
								String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
								String elseSubString = &quot;else pull(&quot;;&#xD;
								if (priorInstruction.contains(hasSubstring) &amp;&amp; !priorInstruction.contains(elseSubString)&#xD;
										&amp;&amp; !realtimeHART) {&#xD;
									// The sink node is not waiting, so add this instruction as an else to it&#xD;
									// Also need to make sure we haven't already combined a prior instruction by&#xD;
									// moving it to the else clause. May need a smater way to do this later...&#xD;
									// The combined instructions both use channels for their respective time slots!&#xD;
									// The else is being added to the prior time slot, so we need to&#xD;
									// get a new channel for that time slot and put back the channel we extraced&#xD;
									// from&#xD;
									// this time slot. And of course, clean up if any errors occur&#xD;
									// in the process&#xD;
									var instructionParametersArrayList = dsl.getInstructionParameters(priorInstruction);&#xD;
									var priorInstructionChannel = UNKNOWN;&#xD;
									if (instructionParametersArrayList.size() == 1) {&#xD;
										var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
																											// of the&#xD;
																											// parameters&#xD;
										priorInstructionChannel = instructionParameters.getChannel();&#xD;
									} else { // we just checked above that the prior instruction did not have an else&#xD;
												// pull, wait, or sleep. So, there should be only one instruction here&#xD;
										String msg = String.format(&#xD;
												&quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
												priorInstruction);&#xD;
										System.err.println(msg);&#xD;
									}&#xD;
									workLoad.setNodeChannel(instructionNodeName,&#xD;
											Integer.valueOf(priorInstructionChannel));&#xD;
									channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
																								// this slot&#xD;
									channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
																		// uses this channel&#xD;
									newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
											flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
									instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
															// replace that slot with the new, optimized instruction&#xD;
									instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
																// node name of the prior instruction&#xD;
								}&#xD;
							} else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
									&amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
											|| priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
								// We hit this case when combining the last push of one flow with the first push&#xD;
								// of&#xD;
								// a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
								// print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
								// \(newInstruction)\n&quot;)&#xD;
								// May want to add code here to combine when e2eFlag is true but need to compute&#xD;
								// new&#xD;
								// reliability values given less than 1 probablity that&#xD;
								// this first push/now pull will happen&#xD;
								// System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
								// newInstruction, priorInstruction);&#xD;
							} else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
										// with a new instruction&#xD;
								// Anywhere else? :-) Probably better figure it out!!&#xD;
								if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
										&amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
										&amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
																												// node&#xD;
																												// is&#xD;
																												// not&#xD;
																												// waiting,&#xD;
																												// so&#xD;
																												// add&#xD;
																												// this&#xD;
																												// instruction&#xD;
																												// as an&#xD;
																												// else&#xD;
																												// to&#xD;
																												// it&#xD;
									// Also need to make sure we haven't already combined a prior instruction by&#xD;
									// moving it to the else clause. May need a smarter way to do this later...&#xD;
									var instructionParametersArrayList = dsl.getInstructionParameters(priorInstruction);&#xD;
									var priorInstructionChannel = UNKNOWN;&#xD;
									var priorInstructionSnk = UNKNOWN;&#xD;
									if (instructionParametersArrayList.size() == 1) {&#xD;
										var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
																											// of the&#xD;
																											// parameters&#xD;
										priorInstructionSnk = instructionParameters.getSnk();&#xD;
										priorInstructionChannel = instructionParameters.getChannel();&#xD;
									} else { // we just checked above that the prior instruction did not have an else&#xD;
												// pull, wait, or sleep. So, there should be only one instruction here&#xD;
										String msg = String.format(&#xD;
												&quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
												priorInstruction);&#xD;
										System.err.println(msg);&#xD;
									}&#xD;
									priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
																													// instruction&#xD;
																													// scheduled&#xD;
																													// for&#xD;
																													// snk/curentNodeName)&#xD;
																													// to&#xD;
																													// execute&#xD;
																													// in&#xD;
																													// the&#xD;
																													// prior&#xD;
																													// time&#xD;
									if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
																						// to/from the same node, so&#xD;
																						// use the prior instruction&#xD;
																						// channel&#xD;
										newInstruction = priorInstruction + elsePullClause(flowName, currentNodeName,&#xD;
												snk, priorInstructionChannel);&#xD;
										instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
																// we replace that slot with the new, optimized&#xD;
																// instruction&#xD;
										instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
																	// the node name of the prior instruction&#xD;
									} else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
																									// !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
																									// I think it needs&#xD;
																									// to be a sleep and&#xD;
																									// then we can add a&#xD;
																									// wait there&#xD;
										// Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
										// then we combine instructions with new as an else push and add wait at&#xD;
										// currentNodeName&#xD;
										workLoad.setNodeChannel(instructionNodeName,&#xD;
												Integer.valueOf(priorInstructionChannel));&#xD;
										newInstruction = priorInstruction + elsePullClause(flowName, currentNodeName,&#xD;
												snk, priorInstructionChannel); // was&#xD;
																				// channel&#xD;
										// need to change priorSrcInstruction from sleep to wait on channel&#xD;
										priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
										priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
																// insert currenInstruction into the&#xD;
																// currentInstructionTimeSlot&#xD;
										instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
																// we replace that slot with the new, optimized&#xD;
																// instruction&#xD;
										instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
																	// the node name of the prior instruction&#xD;
									}&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
						ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
																				// schedule.get(instructionIndex);&#xD;
						String[] currentInstructionTimeSlot; // =&#xD;
																// currentInstructionTimeSlotArrayList.toArray(new&#xD;
																// String[currentInstructionTimeSlotArrayList.size()]);&#xD;
						currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
																			// instruction&#xD;
						if (instructionIndex &lt; schedule.size()) {&#xD;
							currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
																									// instruction,&#xD;
																									// in case&#xD;
																									// another&#xD;
																									// instruction&#xD;
																									// is in this&#xD;
																									// time slot for&#xD;
																									// another node&#xD;
																									// that doesn't&#xD;
																									// conflict&#xD;
																									// channels&#xD;
							currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
									.toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
						} else {&#xD;
							currentInstructionTimeSlotArrayList = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
							currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
									.toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
						}&#xD;
						currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
																											// error&#xD;
																											// finding&#xD;
																											// the&#xD;
																											// right&#xD;
																											// location&#xD;
																											// will&#xD;
																											// result&#xD;
																											// in&#xD;
																											// location&#xD;
																											// of&#xD;
																											// snk&#xD;
																											// or 0&#xD;
						if (priorSrcUpdated) {&#xD;
							currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
																												// error&#xD;
																												// finding&#xD;
																												// the&#xD;
																												// right&#xD;
																												// location&#xD;
																												// will&#xD;
																												// result&#xD;
																												// in&#xD;
																												// location&#xD;
																												// of&#xD;
																												// snk&#xD;
																												// or&#xD;
																												// 0&#xD;
						}&#xD;
						// If this is a basic push() then the snk node will have the initial wait&#xD;
						// instruction in&#xD;
						// its time slot. Thus, need to add the channel # to that wait&#xD;
						var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
																								// scheduled for&#xD;
																								// snk to execute&#xD;
																								// in the current&#xD;
																								// time slot&#xD;
						if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
							currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
						}&#xD;
						if (flowNodeIndex > 0) {&#xD;
							var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
																				// flow (aka predecessor)&#xD;
							var possibleCombineInstruction = String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;,&#xD;
									flowName, priorNodeName, currentNodeName);&#xD;
							if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
																						// possible: combine two&#xD;
																						// conditional pushes at the&#xD;
																						// same slot involving a&#xD;
																						// common node&#xD;
								var upstreamNodeInstruction = currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
								var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
								if (newInstruction.equals(instr)&#xD;
										&amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
										&amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
									var instructionParametersArrayList = dsl&#xD;
											.getInstructionParameters(upstreamNodeInstruction);&#xD;
									var upstreamNodeChannel = UNKNOWN;&#xD;
									if (instructionParametersArrayList.size() == 1) {&#xD;
										var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
																											// of the&#xD;
																											// paramaters&#xD;
										upstreamNodeChannel = instructionParameters.getChannel();&#xD;
										// return upstreamNodeChannel to the available channels for this time slot&#xD;
										channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
									} else { // we just checked above that the prior instruction did not have an else&#xD;
												// pull, wait, or sleep. So, there should be only one instruction here&#xD;
										String msg = String.format(&#xD;
												&quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
												upstreamNodeInstruction);&#xD;
										System.err.println(msg);&#xD;
									}&#xD;
									// use the newInstruction channel in upstream instruction that is being combined&#xD;
									// and return the upstream channel to the available channel set&#xD;
									newInstruction = newInstruction&#xD;
											+ elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
																													// upstreamNodeChannel&#xD;
									currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
																														// error&#xD;
																														// finding&#xD;
																														// the&#xD;
																														// right&#xD;
																														// location&#xD;
																														// will&#xD;
																														// result&#xD;
																														// in&#xD;
																														// location&#xD;
																														// of&#xD;
																														// snk&#xD;
																														// or&#xD;
																														// 0&#xD;
									currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] = waitInstruction(channel);&#xD;
									; // an error finding the right location will result&#xD;
										// in location of snk or 0 // was&#xD;
										// upstreamNodeChannel&#xD;
								} else if (newInstruction&#xD;
										.contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
										&amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
												.contains(possibleCombineInstruction)) {&#xD;
									currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] = waitInstruction(channel); // Replace&#xD;
																															// combined&#xD;
																															// instruction&#xD;
																															// in&#xD;
																															// prior&#xD;
																															// node&#xD;
																															// program&#xD;
																															// with&#xD;
																															// wait()&#xD;
								}&#xD;
							}&#xD;
							if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
															// so add 'else wait()' for down upstream node when&#xD;
															// needed&#xD;
								var upstreamNodeInstruction = currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
								if (newInstruction.equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
										&amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
									String upstreamNodeChannel = getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
									newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
																												// node&#xD;
																												// needs&#xD;
																												// to&#xD;
																												// wait&#xD;
																												// for&#xD;
																												// upstream&#xD;
																												// node&#xD;
																												// if&#xD;
																												// message&#xD;
																												// hasn't&#xD;
																												// arrived&#xD;
									currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
																														// error&#xD;
																														// finding&#xD;
																														// the&#xD;
																														// right&#xD;
																														// location&#xD;
																														// will&#xD;
																														// result&#xD;
																														// in&#xD;
																														// location&#xD;
																														// of&#xD;
																														// snk&#xD;
																														// or&#xD;
																														// 0&#xD;
									// Don't replace the push instruction in the upstream node in this case, because&#xD;
									// we added the else in this nodes time slot instead&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
						var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
						if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
																	// anyway&#xD;
							schedule.set(instructionIndex, timeSlot);&#xD;
						} else {&#xD;
							schedule.add(timeSlot);&#xD;
							String msg = String.format(&#xD;
									&quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
									instructionIndex, schedule.size());&#xD;
							System.err.println(msg);&#xD;
							System.err.println(&#xD;
									&quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
						}&#xD;
						flowLastInstruction = instructionIndex;&#xD;
						if (index == 0) {&#xD;
							FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
																			// flow's src node first transmits&#xD;
						}&#xD;
					}&#xD;
					previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
																		// worry about clearing&#xD;
																		// currentNodeInstrucitons; will be set&#xD;
																		// in loop&#xD;
				}&#xD;
				Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
				String latencyMsg = String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
				if (verbose) {&#xD;
					System.out.printf(latencyMsg);&#xD;
				}&#xD;
				if (latency > flowDeadline) {&#xD;
					String deadlineMsg = String.format(&#xD;
							&quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
							flowName, instance, latency, flowDeadline);&#xD;
					deadlineMisses.add(deadlineMsg);&#xD;
					// System.out.printf(deadlineMsg);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		setSchedule(schedule); // store the schedule built&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDymtO3Ee2O0cjNcmYJpQ" name="waitInstruction" specification="_r56owtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDym9O3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDynNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
		if (!Utilities.isInteger(channel)) {&#xD;
			System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
			System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
		}&#xD;
		return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDyndO3Ee2O0cjNcmYJpQ" name="elseWaitInstruction" specification="_r56oxdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDyntO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyn9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
		if (!Utilities.isInteger(channel)) {&#xD;
			System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
			System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
		}&#xD;
		return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDyoNO3Ee2O0cjNcmYJpQ" name="elsePullClause" specification="_r57P0NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDyodO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyotO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyo9O3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDypNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDypdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDyptO3Ee2O0cjNcmYJpQ" name="hasPushInstruction" specification="_r57P1tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDyp9O3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyqNO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyqdO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyqtO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyq9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDyrNO3Ee2O0cjNcmYJpQ" name="pushInstruction" specification="_r57P3NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDyrdO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyrtO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyr9O3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDysNO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDysdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDystO3Ee2O0cjNcmYJpQ" name="getFirstChannelInInstruction" specification="_r57P4tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDys9O3Ee2O0cjNcmYJpQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDytNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
		var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
																// channel #&#xD;
		var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDytdO3Ee2O0cjNcmYJpQ" name="findNextAvailableInstructionTimeSlot" specification="_r_ZlsdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDyttO3Ee2O0cjNcmYJpQ" name="schedule" type="_r47xUNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBDyt9O3Ee2O0cjNcmYJpQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyuNO3Ee2O0cjNcmYJpQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyudO3Ee2O0cjNcmYJpQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyutO3Ee2O0cjNcmYJpQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyu9O3Ee2O0cjNcmYJpQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sBDyvNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyvdO3Ee2O0cjNcmYJpQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sBDyvtO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyv9O3Ee2O0cjNcmYJpQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDywNO3Ee2O0cjNcmYJpQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDywdO3Ee2O0cjNcmYJpQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDywtO3Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyw9O3Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyxNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
											// location&#xD;
		if (transIndex > 0) {&#xD;
			currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
																							// don't start&#xD;
																							// looking&#xD;
																							// before the&#xD;
																							// startLocation&#xD;
																							// AND the&#xD;
																							// previous&#xD;
																							// instruction&#xD;
																							// we inserted&#xD;
		}&#xD;
		var done = false; // Flag indicating time slot search is done&#xD;
		if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
			// do the same thing for all nodes when nTx == 1 as for first node of flow when&#xD;
			// nTx == 1 and&#xD;
			// for kth retry&#xD;
			while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
				var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
				if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
					done = true;&#xD;
				} else {&#xD;
					currentTime += 1;&#xD;
				}&#xD;
			}&#xD;
		} else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
			Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
			if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
				slotOffsetFromLastPreviousInstructionEntry = transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
				var possibleInstructionTimeSlotIndex = previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
						+ slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
																		// entry&#xD;
				// or continuous past it if more attempts for this instruction&#xD;
				if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
																		// than the starting location&#xD;
					// (which can also mean the start time for searching available slots due to&#xD;
					// channel&#xD;
					// unavailability)&#xD;
					currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
				}&#xD;
				done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
								// searching until we find one. This happens with preemptions&#xD;
				if (!optimizationRequested) {&#xD;
					while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
						var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
						if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
																										// the&#xD;
																										// proposed&#xD;
																										// currentInstructionTimeSlot.&#xD;
																										// If&#xD;
																										// available,&#xD;
																										// done&#xD;
																										// is&#xD;
																										// true,&#xD;
																										// else&#xD;
																										// keep&#xD;
																										// checking&#xD;
																										// for a&#xD;
																										// time&#xD;
							done = true;&#xD;
						} else {&#xD;
							currentTime += 1;&#xD;
						}&#xD;
					}&#xD;
				} else {&#xD;
					// do something to support the optimization&#xD;
					while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
						var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
						if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
																										// the&#xD;
																										// proposed&#xD;
																										// currentInstructionTimeSlot.&#xD;
																										// If&#xD;
																										// available,&#xD;
																										// done&#xD;
																										// is&#xD;
																										// true,&#xD;
																										// else&#xD;
																										// keep&#xD;
																										// checking&#xD;
																										// for a&#xD;
																										// time&#xD;
							done = true;&#xD;
						} else {&#xD;
							currentTime += 1;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			} else {&#xD;
				var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
																								// previous&#xD;
																								// node's&#xD;
																								// next&#xD;
																								// retry&#xD;
																								// entry&#xD;
				if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
																			// earlier than the starting&#xD;
																			// location&#xD;
					// (which can also mean the start time for searching available slots due to&#xD;
					// channel&#xD;
					// unavailability)&#xD;
					currentTime = possibleInstructionTimeSlotIndex; //&#xD;
				}&#xD;
				done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
								// searching until we find one. This happens with preemptions&#xD;
				if (!optimizationRequested) {&#xD;
					while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
						var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
						if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
																										// the&#xD;
																										// proposed&#xD;
																										// currentInstructionTimeSlot.&#xD;
																										// If&#xD;
																										// available,&#xD;
																										// done&#xD;
																										// is&#xD;
																										// true,&#xD;
																										// else&#xD;
																										// keep&#xD;
																										// checking&#xD;
																										// for a&#xD;
																										// time&#xD;
							done = true;&#xD;
						} else {&#xD;
							currentTime += 1;&#xD;
						}&#xD;
					}&#xD;
				} else {&#xD;
					// do something to support the optimization&#xD;
					if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
															// schedule table. If so, no need to optimize.&#xD;
						// Just return current time and let caller figure out what to do.&#xD;
						var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
						var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
						var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
						if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
																										// should&#xD;
																										// contain&#xD;
																										// a wait,&#xD;
																										// so we&#xD;
																										// can use&#xD;
																										// it&#xD;
																										// during&#xD;
																										// optimization.&#xD;
																										// Only a&#xD;
																										// wait&#xD;
																										// for&#xD;
																										// this&#xD;
																										// time&#xD;
																										// slot is&#xD;
																										// expected&#xD;
																										// at this&#xD;
																										// point&#xD;
							// we also need to be sure the snk is sleeping&#xD;
							// If either condition is not true, then we need to find another time slot&#xD;
							while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
								var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
								if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
																												// the&#xD;
																												// proposed&#xD;
																												// currentInstructionTimeSlot.&#xD;
																												// If&#xD;
																												// available,&#xD;
																												// done&#xD;
																												// is&#xD;
																												// true,&#xD;
																												// else&#xD;
																												// keep&#xD;
																												// checking&#xD;
																												// for&#xD;
																												// a&#xD;
																												// time&#xD;
									done = true;&#xD;
								} else {&#xD;
									currentTime += 1;&#xD;
								}&#xD;
							}&#xD;
						} else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
																		// sure if it is bad...print an error&#xD;
																		// indicating the issue&#xD;
							var errorString = String.format(&#xD;
									&quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;, currentTime);&#xD;
							errorString += &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
							errorString += srcInstruction;&#xD;
							System.err.println(errorString);&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return currentTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDyxdO3Ee2O0cjNcmYJpQ" name="slotIsAvailable" specification="_r_aMwdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDyxtO3Ee2O0cjNcmYJpQ" name="currentInstructionTimeSlot" type="_r4u9BNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBDyx9O3Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyyNO3Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyydO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
								// done&#xD;
		if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
				&amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
																								// are both&#xD;
																								// sleeping, so&#xD;
																								// slot is&#xD;
																								// available&#xD;
			vacantSlot = true;&#xD;
		}&#xD;
		return vacantSlot;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDyytO3Ee2O0cjNcmYJpQ" name="findNextAvailableChannel" specification="_r_aMxtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBDyy9O3Ee2O0cjNcmYJpQ" name="schedule" type="_r47xUNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sBDyzNO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyzdO3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyztO3Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDyz9O3Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sBDy0NO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
									// this result&#xD;
&#xD;
		// create an instance of the Warp DSL class for parsing instructions&#xD;
		var dsl = new WarpDSL();&#xD;
		InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
		var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
		if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
								// that slot, which have to be avoided here&#xD;
			Integer priorTime = currentTime - 1;&#xD;
			priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
			var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
			var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
			// extract the channels used by the src and snk nodes in the prior time slot and&#xD;
			// store them in&#xD;
			// an array&#xD;
			var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
																									// the&#xD;
																									// parameters&#xD;
																									// from&#xD;
																									// the&#xD;
																									// instruction&#xD;
																									// in&#xD;
																									// the&#xD;
																									// src&#xD;
																									// node's&#xD;
																									// prior&#xD;
																									// time&#xD;
																									// slot&#xD;
			for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
				var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
																					// paramaters&#xD;
				channels.remove(instructionParameters.getChannel());&#xD;
			}&#xD;
			instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
																								// parameters&#xD;
																								// from&#xD;
																								// the&#xD;
																								// instruction&#xD;
																								// in the&#xD;
																								// snk&#xD;
																								// node's&#xD;
																								// prior&#xD;
																								// time&#xD;
																								// slot&#xD;
			for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
				var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
																					// paramaters&#xD;
				channels.remove(instructionParameters.getChannel());&#xD;
			}&#xD;
		}&#xD;
		Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
		channel++; // increment the channel because we don't use the same channel in consecutive&#xD;
					// time&#xD;
					// slots for the same node&#xD;
		if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
											// max&#xD;
			channel = 0;&#xD;
		}&#xD;
		var channelFound = false;&#xD;
		while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
														// channels to assign&#xD;
			var channelString = String.valueOf(channel);&#xD;
			var channelRemoved = channels.remove(channelString);&#xD;
			if (channelRemoved) {&#xD;
				// newChannel has the channel&#xD;
				newChannel = channelString;&#xD;
				channelFound = true;&#xD;
			} else {&#xD;
				// try another channel&#xD;
				channel += 1;&#xD;
				if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
													// hits max&#xD;
					channel = 0;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDy0dO3Ee2O0cjNcmYJpQ" name="selectPriority" specification="_r5724tO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBDy0tO3Ee2O0cjNcmYJpQ" name="selectRM" specification="_r57249O3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZoNO3Ee2O0cjNcmYJpQ" name="selectDM" specification="_r5725NO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZodO3Ee2O0cjNcmYJpQ" name="selectRtHART" specification="_r5725dO3Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZotO3Ee2O0cjNcmYJpQ" name="setScheduleSelected" specification="_sADtAtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZo9O3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
		case PRIORITY:&#xD;
			schedulerName = &quot;Priority&quot;;&#xD;
			schChoice = &quot;-Priority&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case RM:&#xD;
			schedulerName = &quot;RateMonotonic&quot;;&#xD;
			schChoice = &quot;-RM&quot;;&#xD;
			workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		case DM:&#xD;
			schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
			schChoice = &quot;-DM&quot;;&#xD;
			workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case RTHART:&#xD;
			schedulerName = &quot;RealtimeHART&quot;;&#xD;
			schChoice = &quot;-RealTimeHART&quot;;&#xD;
			workLoad.setFlowsInRealTimeHARTorder();&#xD;
			setRealTimeHartFlag(true);&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_DM:&#xD;
			schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
			schChoice = &quot;-CPdm&quot;;&#xD;
			workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_PRIORITY:&#xD;
			schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
			schChoice = &quot;-CPoset&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_RM:&#xD;
			schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
			schChoice = &quot;-CPrm&quot;;&#xD;
			workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		case POSET_DM:&#xD;
			schedulerName = &quot;PosetDM&quot;;&#xD;
			schChoice = &quot;-PosetDM&quot;;&#xD;
			workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case POSET_PRIORITY:&#xD;
			schedulerName = &quot;Poset&quot;;&#xD;
			schChoice = &quot;-Poset&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case POSET_RM:&#xD;
			schedulerName = &quot;PosetRM&quot;;&#xD;
			schChoice = &quot;-PosetDM&quot;;&#xD;
			workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		case WARP_POSET_DM:&#xD;
			schedulerName = &quot;WarpPosetDM&quot;;&#xD;
			schChoice = &quot;-WPdm&quot;;&#xD;
			workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case WARP_POSET_PRIORITY:&#xD;
			schedulerName = &quot;WarpPoset&quot;;&#xD;
			schChoice = &quot;-WarpPoset&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case WARP_POSET_RM:&#xD;
			schedulerName = &quot;WarpPosetRM&quot;;&#xD;
			schChoice = &quot;-WPrm&quot;;&#xD;
			workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		default:&#xD;
			schedulerName = &quot;Priority&quot;;&#xD;
			schChoice = &quot;-Priority&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		}&#xD;
		SchedulerSelected = choice;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZpNO3Ee2O0cjNcmYJpQ" name="setSchedule" specification="_r_az0NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZpdO3Ee2O0cjNcmYJpQ" name="schedule" type="_r47xUNO3Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZptO3Ee2O0cjNcmYJpQ" name="getSchedule" specification="_r5725tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZp9O3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZqNO3Ee2O0cjNcmYJpQ" name="getSchedulerName" specification="_r57259O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZqdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZqtO3Ee2O0cjNcmYJpQ" name="getSchChoice" specification="_r58d9NO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZq9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZrNO3Ee2O0cjNcmYJpQ" name="getNumChannels" specification="_r58d9tO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZrdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZrtO3Ee2O0cjNcmYJpQ" name="getNumTransmissions" specification="_r58d-9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZr9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZsNO3Ee2O0cjNcmYJpQ" name="getRealTimeHartFlag" specification="_r59FAtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZsdO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZstO3Ee2O0cjNcmYJpQ" name="setRealTimeHartFlag" specification="_r59FBNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZs9O3Ee2O0cjNcmYJpQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZtNO3Ee2O0cjNcmYJpQ" name="getMinPacketReceptionRate" specification="_r59FBtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZtdO3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZttO3Ee2O0cjNcmYJpQ" name="getE2e" specification="_r59FCtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZt9O3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZuNO3Ee2O0cjNcmYJpQ" name="getName" specification="_r59sENO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZudO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZutO3Ee2O0cjNcmYJpQ" name="getOptimizationFlag" specification="_r59sFdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZu9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZvNO3Ee2O0cjNcmYJpQ" name="deadlineMisses" specification="_r59sGtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZvdO3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZvtO3Ee2O0cjNcmYJpQ" name="getNumFaults" specification="_r59sG9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZv9O3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sBEZwNO3Ee2O0cjNcmYJpQ" name="getNodeMapIndex" specification="_r5-TItO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sBEZwdO3Ee2O0cjNcmYJpQ" type="_r-QWMNO3Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
																			// names&#xD;
		// sorted alphabetically&#xD;
		var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
															// index in schedule&#xD;
		// table&#xD;
		var nNodes = orderedNodes.length;&#xD;
		for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
			var name = orderedNodes[index];&#xD;
			nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
		}&#xD;
		return nodeIndexMap;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r56owNO3Ee2O0cjNcmYJpQ" name="toWorkLoad" method="_sBDyldO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb5tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the workload of the program object.&lt;/h1>&#xD;
	 * &lt;p>A workload contains all of the flows.&lt;/p>&#xD;
	 * &#xD;
	 * @return workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_ZlsNO3Ee2O0cjNcmYJpQ" type="_r5kDcNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r56owdO3Ee2O0cjNcmYJpQ" name="buildOriginalProgram" method="_sBDymdO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r56owtO3Ee2O0cjNcmYJpQ" name="waitInstruction" visibility="private" method="_sBDymtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r56ow9O3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r56oxNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r56oxdO3Ee2O0cjNcmYJpQ" name="elseWaitInstruction" visibility="private" method="_sBDyndO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r56oxtO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r56ox9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r57P0NO3Ee2O0cjNcmYJpQ" name="elsePullClause" visibility="private" method="_sBDyoNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r57P0dO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P0tO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P09O3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P1NO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P1dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r57P1tO3Ee2O0cjNcmYJpQ" name="hasPushInstruction" visibility="private" method="_sBDyptO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r57P19O3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P2NO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P2dO3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P2tO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P29O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r57P3NO3Ee2O0cjNcmYJpQ" name="pushInstruction" visibility="private" method="_sBDyrNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r57P3dO3Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P3tO3Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P39O3Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P4NO3Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r57P4dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r57P4tO3Ee2O0cjNcmYJpQ" name="getFirstChannelInInstruction" visibility="private" method="_sBDystO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r5724NO3Ee2O0cjNcmYJpQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5724dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5724tO3Ee2O0cjNcmYJpQ" name="selectPriority" method="_sBDy0dO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r57249O3Ee2O0cjNcmYJpQ" name="selectRM" method="_sBDy0tO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5725NO3Ee2O0cjNcmYJpQ" name="selectDM" method="_sBEZoNO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5725dO3Ee2O0cjNcmYJpQ" name="selectRtHART" method="_sBEZodO3Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_r5725tO3Ee2O0cjNcmYJpQ" name="getSchedule" method="_sBEZptO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb59ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the schedule for the networks messages.&lt;/h1>&#xD;
	 * &#xD;
	 * @return scheduleBuilt A ProgramSchedule object</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_az0tO3Ee2O0cjNcmYJpQ" type="_r47xUNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r57259O3Ee2O0cjNcmYJpQ" name="getSchedulerName" method="_sBEZqNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r58d8NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r58d9NO3Ee2O0cjNcmYJpQ" name="getSchChoice" method="_sBEZqtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r58d9dO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r58d9tO3Ee2O0cjNcmYJpQ" name="getNumChannels" method="_sBEZrNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r58d99O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r58d-9O3Ee2O0cjNcmYJpQ" name="getNumTransmissions" method="_sBEZrtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r58d_NO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r59FAtO3Ee2O0cjNcmYJpQ" name="getRealTimeHartFlag" visibility="private" method="_sBEZsNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r59FA9O3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r59FBNO3Ee2O0cjNcmYJpQ" name="setRealTimeHartFlag" visibility="private" method="_sBEZstO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r59FBdO3Ee2O0cjNcmYJpQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r59FBtO3Ee2O0cjNcmYJpQ" name="getMinPacketReceptionRate" method="_sBEZtNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sADtBNO3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r59FCtO3Ee2O0cjNcmYJpQ" name="getE2e" method="_sBEZttO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sADtBdO3Ee2O0cjNcmYJpQ" type="_r_1qktO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r59sENO3Ee2O0cjNcmYJpQ" name="getName" method="_sBEZuNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r59sEdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r59sFdO3Ee2O0cjNcmYJpQ" name="getOptimizationFlag" method="_sBEZutO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r59sFtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r59sGtO3Ee2O0cjNcmYJpQ" name="deadlineMisses" method="_sBEZvNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_az09O3Ee2O0cjNcmYJpQ" type="_r4gTgNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r59sG9O3Ee2O0cjNcmYJpQ" name="getNumFaults" method="_sBEZvtO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r59sHNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-TItO3Ee2O0cjNcmYJpQ" name="getNodeMapIndex" method="_sBEZwNO3Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_LNOb6NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns a mapping of the program's workload's nodes to an index.&lt;/h1>&#xD;
	 * &lt;p>A Hashmap is returned that maps a Node to an index number. The lower the number,&#xD;
	 * the further to the front of the alphabet the node is.&lt;/p>&#xD;
	 * &#xD;
	 * @return nodeIndexMap from Strings representing node names to Integers for their alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_sADtBtO3Ee2O0cjNcmYJpQ" type="_r-QWMNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_Y-oNO3Ee2O0cjNcmYJpQ" name="setDefaultParameters" visibility="private" method="_sBDykNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_Y-odO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_Y-otO3Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_Y-o9O3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_Y-pNO3Ee2O0cjNcmYJpQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_ZlsdO3Ee2O0cjNcmYJpQ" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_sBDytdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_ZlstO3Ee2O0cjNcmYJpQ" name="schedule" type="_r47xUNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_Zls9O3Ee2O0cjNcmYJpQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZltNO3Ee2O0cjNcmYJpQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZltdO3Ee2O0cjNcmYJpQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZlttO3Ee2O0cjNcmYJpQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_Zlt9O3Ee2O0cjNcmYJpQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_Zlv9O3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZluNO3Ee2O0cjNcmYJpQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_aMwNO3Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZludO3Ee2O0cjNcmYJpQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZlutO3Ee2O0cjNcmYJpQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_Zlu9O3Ee2O0cjNcmYJpQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZlvNO3Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZlvdO3Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_ZlvtO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_aMwdO3Ee2O0cjNcmYJpQ" name="slotIsAvailable" visibility="private" method="_sBDyxdO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_aMwtO3Ee2O0cjNcmYJpQ" name="currentInstructionTimeSlot" type="_r4u9BNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_aMw9O3Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_aMxNO3Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_aMxdO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_aMxtO3Ee2O0cjNcmYJpQ" name="findNextAvailableChannel" visibility="private" method="_sBDyytO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_aMx9O3Ee2O0cjNcmYJpQ" name="schedule" type="_r47xUNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_r_aMyNO3Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_aMydO3Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_aMytO3Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_aMy9O3Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_aMzNO3Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_az0NO3Ee2O0cjNcmYJpQ" name="setSchedule" visibility="private" method="_sBEZpNO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_r_az0dO3Ee2O0cjNcmYJpQ" name="schedule" type="_r47xUNO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sADF8NO3Ee2O0cjNcmYJpQ" name="Program" visibility="package" method="_sBDLiNO3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_sADF9tO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sADF99O3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sADF8dO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sADF8tO3Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sADF89O3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sADF9NO3Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sADF9dO3Ee2O0cjNcmYJpQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sADF-NO3Ee2O0cjNcmYJpQ" type="_r56BsNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sADF-dO3Ee2O0cjNcmYJpQ" name="Program" visibility="package" method="_sBDLj9O3Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_sADF_dO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sADF_tO3Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sADF-tO3Ee2O0cjNcmYJpQ" name="workLoad" type="_r5kDcNO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sADF-9O3Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sADF_NO3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_sADF_9O3Ee2O0cjNcmYJpQ" type="_r56BsNO3Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sADtANO3Ee2O0cjNcmYJpQ" name="buildProgram" method="_sBDyl9O3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sADtAdO3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sADtAtO3Ee2O0cjNcmYJpQ" name="setScheduleSelected" visibility="private" method="_sBEZotO3Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_sADtA9O3Ee2O0cjNcmYJpQ" name="choice" type="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_qrcdO3Ee2O0cjNcmYJpQ" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_z1YNO3Ee2O0cjNcmYJpQ" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_58ANO3Ee2O0cjNcmYJpQ" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_58CdO3Ee2O0cjNcmYJpQ" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_9mZdO3Ee2O0cjNcmYJpQ" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBHdANO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sAOsJ9O3Ee2O0cjNcmYJpQ _sBHdAdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBHdAdO3Ee2O0cjNcmYJpQ" name="" type="_r4hhoNO3Ee2O0cjNcmYJpQ" association="_sBHdANO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBJ5QNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sAl4hNO3Ee2O0cjNcmYJpQ _sBJ5QdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBJ5QdO3Ee2O0cjNcmYJpQ" name="" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBJ5QNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBJ5QtO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sAl4hdO3Ee2O0cjNcmYJpQ _sBJ5Q9O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBJ5Q9O3Ee2O0cjNcmYJpQ" name="" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBJ5QtO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBLHUNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sAo709O3Ee2O0cjNcmYJpQ _sBLHUdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBLHUdO3Ee2O0cjNcmYJpQ" name="" type="_r5r_QNO3Ee2O0cjNcmYJpQ" association="_sBLHUNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBYisNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBYisdO3Ee2O0cjNcmYJpQ _sAJzotO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBYisdO3Ee2O0cjNcmYJpQ" name="" type="_r4RqANO3Ee2O0cjNcmYJpQ" association="_sBYisNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBZJwdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBZJwtO3Ee2O0cjNcmYJpQ _sAJzpNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBZJwtO3Ee2O0cjNcmYJpQ" name="" type="_r4RqANO3Ee2O0cjNcmYJpQ" association="_sBZJwdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBZJxNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBZJxdO3Ee2O0cjNcmYJpQ _sAKasdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBZJxdO3Ee2O0cjNcmYJpQ" name="" type="_r4RqANO3Ee2O0cjNcmYJpQ" association="_sBZJxNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBZJx9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBZJyNO3Ee2O0cjNcmYJpQ _sALBwtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBZJyNO3Ee2O0cjNcmYJpQ" name="" type="_r4WigtO3Ee2O0cjNcmYJpQ" association="_sBZJx9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBZw0dO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBZw0tO3Ee2O0cjNcmYJpQ _sALBxNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBZw0tO3Ee2O0cjNcmYJpQ" name="" type="_r4WigtO3Ee2O0cjNcmYJpQ" association="_sBZw0dO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBZw1NO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBZw1dO3Ee2O0cjNcmYJpQ _sALo0dO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBZw1dO3Ee2O0cjNcmYJpQ" name="" type="_r4XJktO3Ee2O0cjNcmYJpQ" association="_sBZw1NO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBZw19O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBZw2NO3Ee2O0cjNcmYJpQ _sALo09O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBZw2NO3Ee2O0cjNcmYJpQ" name="" type="_r4XJktO3Ee2O0cjNcmYJpQ" association="_sBZw19O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBaX4dO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBaX4tO3Ee2O0cjNcmYJpQ _sAMP4dO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBaX4tO3Ee2O0cjNcmYJpQ" name="" type="_r4XwoNO3Ee2O0cjNcmYJpQ" association="_sBaX4dO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBaX5NO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBaX5dO3Ee2O0cjNcmYJpQ _sAMP5tO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBaX5dO3Ee2O0cjNcmYJpQ" name="" type="_r4aM4NO3Ee2O0cjNcmYJpQ" association="_sBaX5NO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBaX59O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBaX6NO3Ee2O0cjNcmYJpQ _sAM29NO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBaX6NO3Ee2O0cjNcmYJpQ" name="" type="_r4aM4NO3Ee2O0cjNcmYJpQ" association="_sBaX59O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBa-8dO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBa-8tO3Ee2O0cjNcmYJpQ _sANeBdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBa-8tO3Ee2O0cjNcmYJpQ" name="" type="_r4dQMNO3Ee2O0cjNcmYJpQ" association="_sBa-8dO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBa-9NO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBa-9dO3Ee2O0cjNcmYJpQ _sAOFFdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBa-9dO3Ee2O0cjNcmYJpQ" name="" type="_r4dQMNO3Ee2O0cjNcmYJpQ" association="_sBa-9NO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBbmAdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBbmAtO3Ee2O0cjNcmYJpQ _sAP6TNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBbmAtO3Ee2O0cjNcmYJpQ" name="" type="_r4lMA9O3Ee2O0cjNcmYJpQ" association="_sBbmAdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBbmBNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBbmBdO3Ee2O0cjNcmYJpQ _sAQhUtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBbmBdO3Ee2O0cjNcmYJpQ" name="" type="_r4lMA9O3Ee2O0cjNcmYJpQ" association="_sBbmBNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBbmB9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBbmCNO3Ee2O0cjNcmYJpQ _sAQhVdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBbmCNO3Ee2O0cjNcmYJpQ" name="" type="_r4lMA9O3Ee2O0cjNcmYJpQ" association="_sBbmB9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBbmCtO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBbmC9O3Ee2O0cjNcmYJpQ _sARIYNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBbmC9O3Ee2O0cjNcmYJpQ" name="" type="_r4lMA9O3Ee2O0cjNcmYJpQ" association="_sBbmCtO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBcNEdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBcNEtO3Ee2O0cjNcmYJpQ _sARIYtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBcNEtO3Ee2O0cjNcmYJpQ" name="" type="_r4lMA9O3Ee2O0cjNcmYJpQ" association="_sBcNEdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBcNFNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBcNFdO3Ee2O0cjNcmYJpQ _sARvd9O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBcNFdO3Ee2O0cjNcmYJpQ" name="" type="_r4qEgNO3Ee2O0cjNcmYJpQ" association="_sBcNFNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBc0INO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBc0IdO3Ee2O0cjNcmYJpQ _sASWgdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBc0IdO3Ee2O0cjNcmYJpQ" name="" type="_r4qEgNO3Ee2O0cjNcmYJpQ" association="_sBc0INO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBc0I9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBc0JNO3Ee2O0cjNcmYJpQ _sASWg9O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBc0JNO3Ee2O0cjNcmYJpQ" name="" type="_r4r5sNO3Ee2O0cjNcmYJpQ" association="_sBc0I9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBc0JtO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBc0J9O3Ee2O0cjNcmYJpQ _sASWhdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBc0J9O3Ee2O0cjNcmYJpQ" name="" type="_r4tH0NO3Ee2O0cjNcmYJpQ" association="_sBc0JtO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBdbMdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBdbMtO3Ee2O0cjNcmYJpQ _sAS9kdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBdbMtO3Ee2O0cjNcmYJpQ" name="" type="_r4tH0NO3Ee2O0cjNcmYJpQ" association="_sBdbMdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBdbNNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBdbNdO3Ee2O0cjNcmYJpQ _sAS9ldO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBdbNdO3Ee2O0cjNcmYJpQ" name="" type="_r4tu4NO3Ee2O0cjNcmYJpQ" association="_sBdbNNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBeCQdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBeCQtO3Ee2O0cjNcmYJpQ _sAULsNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBeCQtO3Ee2O0cjNcmYJpQ" name="" type="_r4wLINO3Ee2O0cjNcmYJpQ" association="_sBeCQdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBeCRNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBeCRdO3Ee2O0cjNcmYJpQ _sAULstO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBeCRdO3Ee2O0cjNcmYJpQ" name="" type="_r4wLINO3Ee2O0cjNcmYJpQ" association="_sBeCRNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBepUdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBepUtO3Ee2O0cjNcmYJpQ _sAULtNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBepUtO3Ee2O0cjNcmYJpQ" name="" type="_r4wLINO3Ee2O0cjNcmYJpQ" association="_sBepUdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBfQYdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBfQYtO3Ee2O0cjNcmYJpQ _sAULttO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBfQYtO3Ee2O0cjNcmYJpQ" name="" type="_r4wLINO3Ee2O0cjNcmYJpQ" association="_sBfQYdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBfQZNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBfQZdO3Ee2O0cjNcmYJpQ _sAULuNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBfQZdO3Ee2O0cjNcmYJpQ" name="" type="_r4wLINO3Ee2O0cjNcmYJpQ" association="_sBfQZNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBf3cdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBf3ctO3Ee2O0cjNcmYJpQ _sAUyxtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBf3ctO3Ee2O0cjNcmYJpQ" name="" type="_r4xZQNO3Ee2O0cjNcmYJpQ" association="_sBf3cdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBf3dNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBf3ddO3Ee2O0cjNcmYJpQ _sAUyyNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBf3ddO3Ee2O0cjNcmYJpQ" name="" type="_r4xZQNO3Ee2O0cjNcmYJpQ" association="_sBf3dNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBgegdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBgegtO3Ee2O0cjNcmYJpQ _sAVZ1NO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBgegtO3Ee2O0cjNcmYJpQ" name="" type="_r4ynYdO3Ee2O0cjNcmYJpQ" association="_sBgegdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBgehNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBgehdO3Ee2O0cjNcmYJpQ _sAWA5tO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBgehdO3Ee2O0cjNcmYJpQ" name="" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBgehNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBhFkdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBhFktO3Ee2O0cjNcmYJpQ _sAWA6NO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBhFktO3Ee2O0cjNcmYJpQ" name="" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBhFkdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBhFlNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBhFldO3Ee2O0cjNcmYJpQ _sAWA6tO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBhFldO3Ee2O0cjNcmYJpQ" name="" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBhFlNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBhFl9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBhFmNO3Ee2O0cjNcmYJpQ _sAWn8dO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBhFmNO3Ee2O0cjNcmYJpQ" name="" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBhFl9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBhsodO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBhsotO3Ee2O0cjNcmYJpQ _sAWn9tO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBhsotO3Ee2O0cjNcmYJpQ" name="" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBhsodO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBhspNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBhspdO3Ee2O0cjNcmYJpQ _sAWn-NO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBhspdO3Ee2O0cjNcmYJpQ" name="" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBhspNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBiTsNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBiTsdO3Ee2O0cjNcmYJpQ _sAWn-9O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBiTsdO3Ee2O0cjNcmYJpQ" name="" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBiTsNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBiTs9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBiTtNO3Ee2O0cjNcmYJpQ _sAXPAtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBiTtNO3Ee2O0cjNcmYJpQ" name="" type="_r42RwtO3Ee2O0cjNcmYJpQ" association="_sBiTs9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBiTttO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBiTt9O3Ee2O0cjNcmYJpQ _sAX2FNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBiTt9O3Ee2O0cjNcmYJpQ" name="" type="_r48YYNO3Ee2O0cjNcmYJpQ" association="_sBiTttO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBi6wdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBi6wtO3Ee2O0cjNcmYJpQ _sAX2FtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBi6wtO3Ee2O0cjNcmYJpQ" name="" type="_r48YYNO3Ee2O0cjNcmYJpQ" association="_sBi6wdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBi6xNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBi6xdO3Ee2O0cjNcmYJpQ _sAYdJtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBi6xdO3Ee2O0cjNcmYJpQ" name="" type="_r4_bs9O3Ee2O0cjNcmYJpQ" association="_sBi6xNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBi6x9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBi6yNO3Ee2O0cjNcmYJpQ _sAZrSNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBi6yNO3Ee2O0cjNcmYJpQ" name="" type="_r5DGGtO3Ee2O0cjNcmYJpQ" association="_sBi6x9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBjh0dO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBjh0tO3Ee2O0cjNcmYJpQ _sAZrStO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBjh0tO3Ee2O0cjNcmYJpQ" name="" type="_r5DGGtO3Ee2O0cjNcmYJpQ" association="_sBjh0dO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBjh1NO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBjh1dO3Ee2O0cjNcmYJpQ _sAaSU9O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBjh1dO3Ee2O0cjNcmYJpQ" name="" type="_r5E7QNO3Ee2O0cjNcmYJpQ" association="_sBjh1NO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBjh19O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBjh2NO3Ee2O0cjNcmYJpQ _sAa5YNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBjh2NO3Ee2O0cjNcmYJpQ" name="" type="_r5GwcNO3Ee2O0cjNcmYJpQ" association="_sBjh19O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBkI4dO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBkI4tO3Ee2O0cjNcmYJpQ _sAbgetO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBkI4tO3Ee2O0cjNcmYJpQ" name="" type="_r5IlotO3Ee2O0cjNcmYJpQ" association="_sBkI4dO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBkI5NO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBkI5dO3Ee2O0cjNcmYJpQ _sAcHgdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBkI5dO3Ee2O0cjNcmYJpQ" name="" type="_r5IlotO3Ee2O0cjNcmYJpQ" association="_sBkI5NO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBkI59O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBkI6NO3Ee2O0cjNcmYJpQ _sAdVoNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBkI6NO3Ee2O0cjNcmYJpQ" name="" type="_r5S9sNO3Ee2O0cjNcmYJpQ" association="_sBkI59O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBkv8dO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBkv8tO3Ee2O0cjNcmYJpQ _sAdVotO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBkv8tO3Ee2O0cjNcmYJpQ" name="" type="_r5S9sNO3Ee2O0cjNcmYJpQ" association="_sBkv8dO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBkv9NO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBkv9dO3Ee2O0cjNcmYJpQ _sAdVpNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBkv9dO3Ee2O0cjNcmYJpQ" name="" type="_r5S9sNO3Ee2O0cjNcmYJpQ" association="_sBkv9NO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBkv99O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBkv-NO3Ee2O0cjNcmYJpQ _sAd8sdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBkv-NO3Ee2O0cjNcmYJpQ" name="" type="_r5S9sNO3Ee2O0cjNcmYJpQ" association="_sBkv99O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBlXAdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBlXAtO3Ee2O0cjNcmYJpQ _sAd8tNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBlXAtO3Ee2O0cjNcmYJpQ" name="" type="_r5S9sNO3Ee2O0cjNcmYJpQ" association="_sBlXAdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBlXBNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBlXBdO3Ee2O0cjNcmYJpQ _sAd8t9O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBlXBdO3Ee2O0cjNcmYJpQ" name="" type="_r5S9sNO3Ee2O0cjNcmYJpQ" association="_sBlXBNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBlXB9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBlXCNO3Ee2O0cjNcmYJpQ _sAd8utO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBlXCNO3Ee2O0cjNcmYJpQ" name="" type="_r5S9sNO3Ee2O0cjNcmYJpQ" association="_sBlXB9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBl-EdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBl-EtO3Ee2O0cjNcmYJpQ _sAejwNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBl-EtO3Ee2O0cjNcmYJpQ" name="" type="_r5VZ8NO3Ee2O0cjNcmYJpQ" association="_sBl-EdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBl-FNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBl-FdO3Ee2O0cjNcmYJpQ _sAi1MtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBl-FdO3Ee2O0cjNcmYJpQ" name="" type="_r5cHodO3Ee2O0cjNcmYJpQ" association="_sBl-FNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBmlIdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBmlItO3Ee2O0cjNcmYJpQ _sAi1NdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBmlItO3Ee2O0cjNcmYJpQ" name="" type="_r5cHodO3Ee2O0cjNcmYJpQ" association="_sBmlIdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBmlJNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBmlJdO3Ee2O0cjNcmYJpQ _sAjcQdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBmlJdO3Ee2O0cjNcmYJpQ" name="" type="_r5fK8dO3Ee2O0cjNcmYJpQ" association="_sBmlJNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBnMMdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBnMMtO3Ee2O0cjNcmYJpQ _sAjcQ9O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBnMMtO3Ee2O0cjNcmYJpQ" name="" type="_r5fK8dO3Ee2O0cjNcmYJpQ" association="_sBnMMdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBnMNNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBnMNdO3Ee2O0cjNcmYJpQ _sAkDUdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBnMNdO3Ee2O0cjNcmYJpQ" name="" type="_r5fK8dO3Ee2O0cjNcmYJpQ" association="_sBnMNNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBnzQdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBnzQtO3Ee2O0cjNcmYJpQ _sAkDU9O3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBnzQtO3Ee2O0cjNcmYJpQ" name="" type="_r5fK8dO3Ee2O0cjNcmYJpQ" association="_sBnzQdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBnzRNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBnzRdO3Ee2O0cjNcmYJpQ _sAkDVdO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBnzRdO3Ee2O0cjNcmYJpQ" name="" type="_r5fK8dO3Ee2O0cjNcmYJpQ" association="_sBnzRNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBnzR9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBnzSNO3Ee2O0cjNcmYJpQ _sAl4iNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBnzSNO3Ee2O0cjNcmYJpQ" name="" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBnzR9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBoaUdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBoaUtO3Ee2O0cjNcmYJpQ _sAmfktO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBoaUtO3Ee2O0cjNcmYJpQ" name="" type="_r5kDcNO3Ee2O0cjNcmYJpQ" association="_sBoaUdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBoaVNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBoaVdO3Ee2O0cjNcmYJpQ _sAnGpNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBoaVdO3Ee2O0cjNcmYJpQ" name="" type="_r5qxINO3Ee2O0cjNcmYJpQ" association="_sBoaVNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBoaV9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBoaWNO3Ee2O0cjNcmYJpQ _sAntsNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBoaWNO3Ee2O0cjNcmYJpQ" name="" type="_r5qxINO3Ee2O0cjNcmYJpQ" association="_sBoaV9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBpBYdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBpBYtO3Ee2O0cjNcmYJpQ _sAo71NO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBpBYtO3Ee2O0cjNcmYJpQ" name="" type="_r5r_QNO3Ee2O0cjNcmYJpQ" association="_sBpBYdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBpBZNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBpBZdO3Ee2O0cjNcmYJpQ _sApi4dO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBpBZdO3Ee2O0cjNcmYJpQ" name="" type="_r5r_QNO3Ee2O0cjNcmYJpQ" association="_sBpBZNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBpocdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBpoctO3Ee2O0cjNcmYJpQ _sAqxANO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBpoctO3Ee2O0cjNcmYJpQ" name="" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBpocdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBpodNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBpoddO3Ee2O0cjNcmYJpQ _sAqxAtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBpoddO3Ee2O0cjNcmYJpQ" name="" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBpodNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBpod9O3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBpoeNO3Ee2O0cjNcmYJpQ _sAqxBNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBpoeNO3Ee2O0cjNcmYJpQ" name="" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBpod9O3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBqPgdO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBqPgtO3Ee2O0cjNcmYJpQ _sArYFtO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBqPgtO3Ee2O0cjNcmYJpQ" name="" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBqPgdO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBqPhNO3Ee2O0cjNcmYJpQ" name="" memberEnd="_sBqPhdO3Ee2O0cjNcmYJpQ _sAr_JNO3Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_sBqPhdO3Ee2O0cjNcmYJpQ" name="" type="_r56BsNO3Ee2O0cjNcmYJpQ" association="_sBqPhNO3Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_J-5AgNejEe2IjMkQsyA0cQ" name="" memberEnd="_J-5AgdejEe2IjMkQsyA0cQ _J-0IANejEe2IjMkQsyA0cQ">
              <ownedEnd xmi:id="_J-5AgdejEe2IjMkQsyA0cQ" name="" type="_r5DGGtO3Ee2O0cjNcmYJpQ" association="_J-5AgNejEe2IjMkQsyA0cQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_r2zqYdO3Ee2O0cjNcmYJpQ" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_r-jRI9O3Ee2O0cjNcmYJpQ" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r-jRJdO3Ee2O0cjNcmYJpQ" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r-j4MNO3Ee2O0cjNcmYJpQ" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_8YQdO3Ee2O0cjNcmYJpQ" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_r3SLgNO3Ee2O0cjNcmYJpQ" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_r_N_gNO3Ee2O0cjNcmYJpQ" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r2StANO3Ee2O0cjNcmYJpQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_r2StAdO3Ee2O0cjNcmYJpQ" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_r2lA4NO3Ee2O0cjNcmYJpQ" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_r-Wc0NO3Ee2O0cjNcmYJpQ" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_r3SLgdO3Ee2O0cjNcmYJpQ" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_r_N_hNO3Ee2O0cjNcmYJpQ" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_r3b8gNO3Ee2O0cjNcmYJpQ" name="concurrent">
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_r_V7UNO3Ee2O0cjNcmYJpQ" name="TimeUnit"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_r4-0ptO3Ee2O0cjNcmYJpQ" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-QWMNO3Ee2O0cjNcmYJpQ" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-Q9QNO3Ee2O0cjNcmYJpQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-Q9QtO3Ee2O0cjNcmYJpQ" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-RkUdO3Ee2O0cjNcmYJpQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-RkU9O3Ee2O0cjNcmYJpQ" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-ZgJtO3Ee2O0cjNcmYJpQ" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-tpMtO3Ee2O0cjNcmYJpQ" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-zv0dO3Ee2O0cjNcmYJpQ" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-zv09O3Ee2O0cjNcmYJpQ" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-0W4NO3Ee2O0cjNcmYJpQ" name="Vector"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r_N_gtO3Ee2O0cjNcmYJpQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_Rp4NO3Ee2O0cjNcmYJpQ" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r_Rp4tO3Ee2O0cjNcmYJpQ" name="Queue"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_J-yS0NejEe2IjMkQsyA0cQ" name="Map"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r2tjw9O3Ee2O0cjNcmYJpQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_r-b8YtO3Ee2O0cjNcmYJpQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-cjcdO3Ee2O0cjNcmYJpQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-owsNO3Ee2O0cjNcmYJpQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-owstO3Ee2O0cjNcmYJpQ" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r2uK0NO3Ee2O0cjNcmYJpQ" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_r2uK0dO3Ee2O0cjNcmYJpQ" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_r-cjc9O3Ee2O0cjNcmYJpQ" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_r-cjddO3Ee2O0cjNcmYJpQ" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_r-dKgdO3Ee2O0cjNcmYJpQ" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r204gNO3Ee2O0cjNcmYJpQ" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_r-m7g9O3Ee2O0cjNcmYJpQ" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r3XEANO3Ee2O0cjNcmYJpQ" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_r_RC0NO3Ee2O0cjNcmYJpQ" name="Collator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r_j9wNO3Ee2O0cjNcmYJpQ" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_r_j9wdO3Ee2O0cjNcmYJpQ" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_u84tO3Ee2O0cjNcmYJpQ" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_r_1qktO3Ee2O0cjNcmYJpQ" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sAB30NO3Ee2O0cjNcmYJpQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r2tjwNO3Ee2O0cjNcmYJpQ" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_r2tjwdO3Ee2O0cjNcmYJpQ" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_r2tjwtO3Ee2O0cjNcmYJpQ" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_r-b8YNO3Ee2O0cjNcmYJpQ" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r2uK0tO3Ee2O0cjNcmYJpQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_r2uK09O3Ee2O0cjNcmYJpQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_r204gdO3Ee2O0cjNcmYJpQ" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_r-oJodO3Ee2O0cjNcmYJpQ" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_r-oJo9O3Ee2O0cjNcmYJpQ" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-dKg9O3Ee2O0cjNcmYJpQ" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-nikdO3Ee2O0cjNcmYJpQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-nik9O3Ee2O0cjNcmYJpQ" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-nildO3Ee2O0cjNcmYJpQ" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r2zDUNO3Ee2O0cjNcmYJpQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_r2zDUdO3Ee2O0cjNcmYJpQ" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_r2zDUtO3Ee2O0cjNcmYJpQ" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_r2zDU9O3Ee2O0cjNcmYJpQ" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_r2zqYNO3Ee2O0cjNcmYJpQ" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_r-iqFdO3Ee2O0cjNcmYJpQ" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_r-jRIdO3Ee2O0cjNcmYJpQ" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r-iDAtO3Ee2O0cjNcmYJpQ" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r-iqEdO3Ee2O0cjNcmYJpQ" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r-iqE9O3Ee2O0cjNcmYJpQ" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r3b8gdO3Ee2O0cjNcmYJpQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_r3b8gtO3Ee2O0cjNcmYJpQ" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_r3b8g9O3Ee2O0cjNcmYJpQ" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_r_WiYdO3Ee2O0cjNcmYJpQ" name="Assertions"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_WiY9O3Ee2O0cjNcmYJpQ" name="Assumptions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r_XJcdO3Ee2O0cjNcmYJpQ" name="Test"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r_XJc9O3Ee2O0cjNcmYJpQ" name="Timeout"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r20RcNO3Ee2O0cjNcmYJpQ" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_r-j4OdO3Ee2O0cjNcmYJpQ" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-kfRtO3Ee2O0cjNcmYJpQ" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-lGVdO3Ee2O0cjNcmYJpQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-ltYtO3Ee2O0cjNcmYJpQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-ltadO3Ee2O0cjNcmYJpQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-mUdtO3Ee2O0cjNcmYJpQ" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-5PatO3Ee2O0cjNcmYJpQ" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-52dtO3Ee2O0cjNcmYJpQ" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-6dg9O3Ee2O0cjNcmYJpQ" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-7EkNO3Ee2O0cjNcmYJpQ" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r3K2wNO3Ee2O0cjNcmYJpQ" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_r_E1kNO3Ee2O0cjNcmYJpQ" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_E1ktO3Ee2O0cjNcmYJpQ" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_E1lNO3Ee2O0cjNcmYJpQ" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_FcodO3Ee2O0cjNcmYJpQ" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_Fco9O3Ee2O0cjNcmYJpQ" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r3N6ENO3Ee2O0cjNcmYJpQ" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_r_H44NO3Ee2O0cjNcmYJpQ" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_If-tO3Ee2O0cjNcmYJpQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_JHBtO3Ee2O0cjNcmYJpQ" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_JuFNO3Ee2O0cjNcmYJpQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_KVItO3Ee2O0cjNcmYJpQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_KVKdO3Ee2O0cjNcmYJpQ" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_rYKmkNO3Ee2O0cjNcmYJpQ">
      <eAnnotations xmi:id="_rYKmkdO3Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_rYKmktO3Ee2O0cjNcmYJpQ" base_Package="_rTuLcNO3Ee2O0cjNcmYJpQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_r4RC8NO3Ee2O0cjNcmYJpQ" genericsValue="T,E" base_Element="_r4Qb4NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4RqB9O3Ee2O0cjNcmYJpQ" base_Element="_r4RqBtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4SRENO3Ee2O0cjNcmYJpQ" base_Element="_r4RqBtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4SREdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r4SRE9O3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r4SREtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4SRFdO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r4SRFNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4S4INO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r4SRFtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4S4ItO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r4S4IdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4S4JNO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r4S4I9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4Y-xdO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r4Y-w9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4az8dO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r4az8NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4d3QdO3Ee2O0cjNcmYJpQ" base_Element="_r4d3QNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4d3QtO3Ee2O0cjNcmYJpQ" base_Element="_r4d3QNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4d3Q9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4d3RdO3Ee2O0cjNcmYJpQ" base_Element="_r4d3RNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4d3RtO3Ee2O0cjNcmYJpQ" base_Element="_r4d3RNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4eeUNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4eeUtO3Ee2O0cjNcmYJpQ" base_Element="_r4eeUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4eeU9O3Ee2O0cjNcmYJpQ" base_Element="_r4eeUdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4eeVNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r4fscdO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r4fscNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4g6ktO3Ee2O0cjNcmYJpQ" base_Element="_r4g6kNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4g6k9O3Ee2O0cjNcmYJpQ" base_Element="_r4g6kNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4g6lNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r4g6mNO3Ee2O0cjNcmYJpQ" base_Element="_r4g6ltO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4hhotO3Ee2O0cjNcmYJpQ" base_Element="_r4hhodO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4ivwdO3Ee2O0cjNcmYJpQ" base_Element="_r4iIwdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4ivwtO3Ee2O0cjNcmYJpQ" base_Element="_r4iIwdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4ivw9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4ivxtO3Ee2O0cjNcmYJpQ" base_Element="_r4ivxNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4ivx9O3Ee2O0cjNcmYJpQ" base_Element="_r4ivxNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4ivyNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4ivytO3Ee2O0cjNcmYJpQ" base_Element="_r4ivydO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4ivy9O3Ee2O0cjNcmYJpQ" base_Element="_r4ivydO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4ivzNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r4maJdO3Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_r4maJNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4nBMNO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r4maJtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4nBMtO3Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_r4nBMdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4noRNO3Ee2O0cjNcmYJpQ" base_Element="_r4noQtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4noRdO3Ee2O0cjNcmYJpQ" base_Element="_r4noQtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4noRtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4qrkNO3Ee2O0cjNcmYJpQ" base_Element="_r4qEgdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4qrkdO3Ee2O0cjNcmYJpQ" base_Element="_r4qEgdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4qrktO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r4tH2tO3Ee2O0cjNcmYJpQ" dimensions="2" base_Element="_r4tH1NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4yAUdO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r4yAUNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4ynYNO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r4yAUtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4zOedO3Ee2O0cjNcmYJpQ" base_Element="_r4zOd9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4zOetO3Ee2O0cjNcmYJpQ" base_Element="_r4zOd9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4zOe9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4z1hNO3Ee2O0cjNcmYJpQ" base_Element="_r4z1gtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4z1hdO3Ee2O0cjNcmYJpQ" base_Element="_r4z1gtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4z1htO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4z1iNO3Ee2O0cjNcmYJpQ" base_Element="_r4z1h9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4z1idO3Ee2O0cjNcmYJpQ" base_Element="_r4z1h9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r4z1itO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r41qttO3Ee2O0cjNcmYJpQ" base_Element="_r41qtdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r41qt9O3Ee2O0cjNcmYJpQ" base_Element="_r41qtdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r41quNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r42RwdO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r42RwNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4240dO3Ee2O0cjNcmYJpQ" genericsValue="String, Integer" base_Element="_r4240NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r43f4NO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r4240tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_r43f5NO3Ee2O0cjNcmYJpQ" base_Element="_r43f4dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r458IdO3Ee2O0cjNcmYJpQ" base_Element="_r458INO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r458ItO3Ee2O0cjNcmYJpQ" base_Element="_r458INO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r458I9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r47KQdO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r47KQNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r48YYtO3Ee2O0cjNcmYJpQ" base_Element="_r48YYdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r48YY9O3Ee2O0cjNcmYJpQ" base_Element="_r48YYdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r48YZNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r48YZtO3Ee2O0cjNcmYJpQ" base_Element="_r48YZdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r48_cNO3Ee2O0cjNcmYJpQ" base_Element="_r48YZdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r48_cdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r48_c9O3Ee2O0cjNcmYJpQ" base_Element="_r48_ctO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r48_dNO3Ee2O0cjNcmYJpQ" base_Element="_r48_ctO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r48_ddO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r48_edO3Ee2O0cjNcmYJpQ" base_Element="_r48_dtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r48_etO3Ee2O0cjNcmYJpQ" base_Element="_r48_dtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r48_e9O3Ee2O0cjNcmYJpQ" base_Element="_r48_dtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r48_fNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r49mgtO3Ee2O0cjNcmYJpQ" dimensions="2" base_Element="_r48_fdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r49mg9O3Ee2O0cjNcmYJpQ" base_Element="_r48_fdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r49mhNO3Ee2O0cjNcmYJpQ" base_Element="_r48_fdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r49mhdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r4-NkdO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r4-NkNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4-0odO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r4-0oNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r4_bsNO3Ee2O0cjNcmYJpQ" base_Element="_r4-0ptO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r4_bstO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r4_bsdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5E7QtO3Ee2O0cjNcmYJpQ" base_Element="_r5E7QdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5E7Q9O3Ee2O0cjNcmYJpQ" base_Element="_r5E7QdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5E7RNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5GJYNO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r5FiUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r5H-kdO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r5H-kNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r5IlodO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r5IloNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r5OFMdO3Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_r5OFMNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r5OsQNO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r5OFNtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5OsQ9O3Ee2O0cjNcmYJpQ" base_Element="_r5OsQtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r5QhcNO3Ee2O0cjNcmYJpQ" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_r5P6Y9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5RvkdO3Ee2O0cjNcmYJpQ" base_Element="_r5RvkNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5RvmtO3Ee2O0cjNcmYJpQ" base_Element="_r5RvmdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5TkwdO3Ee2O0cjNcmYJpQ" base_Element="_r5TkwNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5TkwtO3Ee2O0cjNcmYJpQ" base_Element="_r5TkwNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5Tkw9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5TkxdO3Ee2O0cjNcmYJpQ" base_Element="_r5TkxNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5TkxtO3Ee2O0cjNcmYJpQ" base_Element="_r5TkxNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5Tkx9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5TkytO3Ee2O0cjNcmYJpQ" base_Element="_r5TkyNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5UL0NO3Ee2O0cjNcmYJpQ" base_Element="_r5TkyNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5UL0dO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r5WoFdO3Ee2O0cjNcmYJpQ" base_Element="_r5WoEtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_r5WoGdO3Ee2O0cjNcmYJpQ" dimensions="2" base_Element="_r5WoFtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_r5YdQ9O3Ee2O0cjNcmYJpQ" dimensions="1" base_Element="_r5YdQdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_r5ZEU9O3Ee2O0cjNcmYJpQ" dimensions="1" base_Element="_r5ZEUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r5cHoNO3Ee2O0cjNcmYJpQ" genericsValue="InstructionParameters" base_Element="_r5bgmNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r5cusNO3Ee2O0cjNcmYJpQ" genericsValue="InstructionParameters" base_Element="_r5cHptO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5fyAdO3Ee2O0cjNcmYJpQ" base_Element="_r5fyANO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5fyAtO3Ee2O0cjNcmYJpQ" base_Element="_r5fyANO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5fyA9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5gZENO3Ee2O0cjNcmYJpQ" base_Element="_r5fyBNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5gZEdO3Ee2O0cjNcmYJpQ" base_Element="_r5fyBNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5gZEtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5gZFNO3Ee2O0cjNcmYJpQ" base_Element="_r5gZE9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5gZFdO3Ee2O0cjNcmYJpQ" base_Element="_r5gZE9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5gZFtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5gZGNO3Ee2O0cjNcmYJpQ" base_Element="_r5gZF9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5gZGdO3Ee2O0cjNcmYJpQ" base_Element="_r5gZF9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5gZGtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5hAINO3Ee2O0cjNcmYJpQ" base_Element="_r5gZG9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5hAIdO3Ee2O0cjNcmYJpQ" base_Element="_r5gZG9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5hAItO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5hAJNO3Ee2O0cjNcmYJpQ" base_Element="_r5hAI9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5hAJdO3Ee2O0cjNcmYJpQ" base_Element="_r5hAI9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5hAJtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5hAKdO3Ee2O0cjNcmYJpQ" base_Element="_r5hAJ9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5hAKtO3Ee2O0cjNcmYJpQ" base_Element="_r5hAJ9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5hAK9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5hALtO3Ee2O0cjNcmYJpQ" base_Element="_r5hALNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5hnMNO3Ee2O0cjNcmYJpQ" base_Element="_r5hALNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5hnMdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5hnNNO3Ee2O0cjNcmYJpQ" base_Element="_r5hnMtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5hnNdO3Ee2O0cjNcmYJpQ" base_Element="_r5hnMtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5hnNtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5hnONO3Ee2O0cjNcmYJpQ" base_Element="_r5hnN9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5hnOdO3Ee2O0cjNcmYJpQ" base_Element="_r5hnN9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5hnOtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5hnPNO3Ee2O0cjNcmYJpQ" base_Element="_r5hnO9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5hnPdO3Ee2O0cjNcmYJpQ" base_Element="_r5hnO9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5iOQNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5iOQ9O3Ee2O0cjNcmYJpQ" base_Element="_r5iOQdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5iORNO3Ee2O0cjNcmYJpQ" base_Element="_r5iOQdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5iORdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5iOSNO3Ee2O0cjNcmYJpQ" base_Element="_r5iORtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5iOSdO3Ee2O0cjNcmYJpQ" base_Element="_r5iORtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5iOStO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5iOTdO3Ee2O0cjNcmYJpQ" base_Element="_r5iOS9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5iOTtO3Ee2O0cjNcmYJpQ" base_Element="_r5iOS9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5iOT9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5i1UdO3Ee2O0cjNcmYJpQ" base_Element="_r5iOUNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5i1UtO3Ee2O0cjNcmYJpQ" base_Element="_r5iOUNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5i1U9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5i1VdO3Ee2O0cjNcmYJpQ" base_Element="_r5i1VNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5i1VtO3Ee2O0cjNcmYJpQ" base_Element="_r5i1VNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5i1V9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r5nt2NO3Ee2O0cjNcmYJpQ" base_Element="_r5nt1dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_r5oU4NO3Ee2O0cjNcmYJpQ" base_Element="_r5nt29O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_r5oU6NO3Ee2O0cjNcmYJpQ" base_Element="_r5oU5NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_r5o78dO3Ee2O0cjNcmYJpQ" dimensions="1" base_Element="_r5oU7tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5qxJ9O3Ee2O0cjNcmYJpQ" base_Element="_r5qxJtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5qxKNO3Ee2O0cjNcmYJpQ" base_Element="_r5qxJtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5qxKdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5rYMdO3Ee2O0cjNcmYJpQ" base_Element="_r5rYMNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5rYMtO3Ee2O0cjNcmYJpQ" base_Element="_r5rYMNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5rYM9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5rYNtO3Ee2O0cjNcmYJpQ" base_Element="_r5rYNNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5rYN9O3Ee2O0cjNcmYJpQ" base_Element="_r5rYNNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5rYONO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5tNcdO3Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_r5tNcNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5xe0tO3Ee2O0cjNcmYJpQ" base_Element="_r5xe0dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5xe09O3Ee2O0cjNcmYJpQ" base_Element="_r5xe0dO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5xe1NO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5yF4NO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5yF4dO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOb-dejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5yF4tO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOb-tejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5yF5NO3Ee2O0cjNcmYJpQ" base_Element="_r5yF49O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5yF5dO3Ee2O0cjNcmYJpQ" base_Element="_r5yF49O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5yF5tO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5yF59O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5yF6NO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOb-9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5yF6dO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOb_NejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5yF69O3Ee2O0cjNcmYJpQ" base_Element="_r5yF6tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5yF7NO3Ee2O0cjNcmYJpQ" base_Element="_r5yF6tO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5yF7dO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5yF7tO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5yF79O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOb_dejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5yF8NO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOb_tejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5yF8tO3Ee2O0cjNcmYJpQ" base_Element="_r5yF8dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5yF89O3Ee2O0cjNcmYJpQ" base_Element="_r5yF8dO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5yF9NO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5yF9dO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5yF9tO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOb_9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5yF99O3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcANejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5ys8NO3Ee2O0cjNcmYJpQ" base_Element="_r5yF-NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5ys8dO3Ee2O0cjNcmYJpQ" base_Element="_r5yF-NO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5ys8tO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5ys89O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5ys9NO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcAdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5ys9dO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcAtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5ys99O3Ee2O0cjNcmYJpQ" base_Element="_r5ys9tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5ys-NO3Ee2O0cjNcmYJpQ" base_Element="_r5ys9tO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5ys-dO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5ys-tO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5ys-9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcA9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5ys_NO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcBNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5ys_tO3Ee2O0cjNcmYJpQ" base_Element="_r5ys_dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5ys_9O3Ee2O0cjNcmYJpQ" base_Element="_r5ys_dO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5ytANO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5ytAdO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5ytAtO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcBdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5ytA9O3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcBtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5ytBdO3Ee2O0cjNcmYJpQ" base_Element="_r5ytBNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5ytBtO3Ee2O0cjNcmYJpQ" base_Element="_r5ytBNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5ytB9O3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5ytCNO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5zUANO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcB9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5zUAdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcCNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5zUA9O3Ee2O0cjNcmYJpQ" base_Element="_r5zUAtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5zUBNO3Ee2O0cjNcmYJpQ" base_Element="_r5zUAtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5zUBdO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5zUBtO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5zUB9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcCdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5zUCNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNOcCtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5zUCtO3Ee2O0cjNcmYJpQ" base_Element="_r5zUCdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5zUC9O3Ee2O0cjNcmYJpQ" base_Element="_r5zUCdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5zUDNO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5zUDdO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5zUDtO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC8NejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5zUD9O3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC8dejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5zUEdO3Ee2O0cjNcmYJpQ" base_Element="_r5zUENO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5zUEtO3Ee2O0cjNcmYJpQ" base_Element="_r5zUENO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5zUE9O3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5zUFNO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5zUFdO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC8tejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5zUFtO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC89ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5z7ENO3Ee2O0cjNcmYJpQ" base_Element="_r5zUF9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5z7EdO3Ee2O0cjNcmYJpQ" base_Element="_r5zUF9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5z7EtO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5z7E9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5z7FNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC9NejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5z7FdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC9dejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5z7F9O3Ee2O0cjNcmYJpQ" base_Element="_r5z7FtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5z7GNO3Ee2O0cjNcmYJpQ" base_Element="_r5z7FtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5z7GdO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5z7GtO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5z7G9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC9tejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5z7HNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC99ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5z7HtO3Ee2O0cjNcmYJpQ" base_Element="_r5z7HdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5z7H9O3Ee2O0cjNcmYJpQ" base_Element="_r5z7HdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5z7INO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r5z7IdO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r5z7ItO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC-NejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r5z7I9O3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC-dejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r50iINO3Ee2O0cjNcmYJpQ" base_Element="_r5z7JNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r50iIdO3Ee2O0cjNcmYJpQ" base_Element="_r5z7JNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r50iItO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r50iI9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r50iJNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC-tejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r50iJdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC-9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r50iJ9O3Ee2O0cjNcmYJpQ" base_Element="_r50iJtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r50iKNO3Ee2O0cjNcmYJpQ" base_Element="_r50iJtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r50iKdO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r50iKtO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r50iK9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC_NejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r50iLNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC_dejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r50iLtO3Ee2O0cjNcmYJpQ" base_Element="_r50iLdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r50iL9O3Ee2O0cjNcmYJpQ" base_Element="_r50iLdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r50iMNO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r50iMdO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r50iMtO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC_tejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r50iM9O3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPC_9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r51JMNO3Ee2O0cjNcmYJpQ" base_Element="_r50iNNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r51JMdO3Ee2O0cjNcmYJpQ" base_Element="_r50iNNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r51JMtO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r51JM9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r51JNNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDANejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r51JNdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDAdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r51JN9O3Ee2O0cjNcmYJpQ" base_Element="_r51JNtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r51JONO3Ee2O0cjNcmYJpQ" base_Element="_r51JNtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r51JOdO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r51JOtO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r51JO9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDAtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r51JPNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDA9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r51JPtO3Ee2O0cjNcmYJpQ" base_Element="_r51JPdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r51JP9O3Ee2O0cjNcmYJpQ" base_Element="_r51JPdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r51wQNO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r51wQdO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r51wQtO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDBNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r51wQ9O3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDBdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r51wRdO3Ee2O0cjNcmYJpQ" base_Element="_r51wRNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r51wRtO3Ee2O0cjNcmYJpQ" base_Element="_r51wRNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r51wR9O3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r51wSNO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r51wSdO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDBtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r51wStO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDB9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r51wTNO3Ee2O0cjNcmYJpQ" base_Element="_r51wS9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r51wTdO3Ee2O0cjNcmYJpQ" base_Element="_r51wS9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r51wTtO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r51wT9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r51wUNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDCNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r51wUdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPDCdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r51wU9O3Ee2O0cjNcmYJpQ" base_Element="_r51wUtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r51wVNO3Ee2O0cjNcmYJpQ" base_Element="_r51wUtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r51wVdO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r51wVtO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r51wV9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqANejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r51wWNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqAdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r52XUdO3Ee2O0cjNcmYJpQ" base_Element="_r52XUNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r52XUtO3Ee2O0cjNcmYJpQ" base_Element="_r52XUNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r52XU9O3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r52XVNO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r52XVdO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqAtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r52XVtO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqA9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r52XWNO3Ee2O0cjNcmYJpQ" base_Element="_r52XV9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r52XWdO3Ee2O0cjNcmYJpQ" base_Element="_r52XV9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r52XWtO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r52XW9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r52XXNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqBNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r52XXdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqBdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r52XX9O3Ee2O0cjNcmYJpQ" base_Element="_r52XXtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r52XYNO3Ee2O0cjNcmYJpQ" base_Element="_r52XXtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r52XYdO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r52XYtO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r52XY9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqBtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r52XZNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqB9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r52-YNO3Ee2O0cjNcmYJpQ" base_Element="_r52XZdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r52-YdO3Ee2O0cjNcmYJpQ" base_Element="_r52XZdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r52-YtO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r52-Y9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r52-ZNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqCNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r52-ZdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNPqCdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r52-Z9O3Ee2O0cjNcmYJpQ" base_Element="_r52-ZtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r52-aNO3Ee2O0cjNcmYJpQ" base_Element="_r52-ZtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r52-adO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r52-atO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r52-a9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRENejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r52-bNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQREdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r52-btO3Ee2O0cjNcmYJpQ" base_Element="_r52-bdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r52-b9O3Ee2O0cjNcmYJpQ" base_Element="_r52-bdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r52-cNO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r52-cdO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r52-ctO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQREtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r52-c9O3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRE9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r52-ddO3Ee2O0cjNcmYJpQ" base_Element="_r52-dNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r52-dtO3Ee2O0cjNcmYJpQ" base_Element="_r52-dNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r52-d9O3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r52-eNO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r52-edO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRFNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r52-etO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRFdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r53lcdO3Ee2O0cjNcmYJpQ" base_Element="_r53lcNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r53lctO3Ee2O0cjNcmYJpQ" base_Element="_r53lcNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r53lc9O3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r53ldNO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r53lddO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRFtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r53ldtO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRF9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r53leNO3Ee2O0cjNcmYJpQ" base_Element="_r53ld9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r53ledO3Ee2O0cjNcmYJpQ" base_Element="_r53ld9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r53letO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r53le9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r53lfNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRGNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r53lfdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRGdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r53lf9O3Ee2O0cjNcmYJpQ" base_Element="_r53lftO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r53lgNO3Ee2O0cjNcmYJpQ" base_Element="_r53lftO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r53lgdO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r53lgtO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r53lg9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRGtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r53lhNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRG9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r54MgNO3Ee2O0cjNcmYJpQ" base_Element="_r53lhdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r54MgdO3Ee2O0cjNcmYJpQ" base_Element="_r53lhdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r54MgtO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r54Mg9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r54MhNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRHNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r54MhdO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRHdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r54Mh9O3Ee2O0cjNcmYJpQ" base_Element="_r54MhtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r54MiNO3Ee2O0cjNcmYJpQ" base_Element="_r54MhtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r54MidO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r54MitO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r54Mi9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRHtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r54MjNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRH9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r54MjtO3Ee2O0cjNcmYJpQ" base_Element="_r54MjdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r54Mj9O3Ee2O0cjNcmYJpQ" base_Element="_r54MjdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r54MkNO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r54MkdO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r54MktO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRINejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r54Mk9O3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRIdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r54zkNO3Ee2O0cjNcmYJpQ" base_Element="_r54MlNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r54zkdO3Ee2O0cjNcmYJpQ" base_Element="_r54MlNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r54zktO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r54zk9O3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r54zlNO3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRItejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r54zldO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRI9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r54zl9O3Ee2O0cjNcmYJpQ" base_Element="_r54zltO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r54zmNO3Ee2O0cjNcmYJpQ" base_Element="_r54zltO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r54zmdO3Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_r54zmtO3Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_r54zm9O3Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRJNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_r54znNO3Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LNQRJdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r58d8dO3Ee2O0cjNcmYJpQ" base_Element="_r57259O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r58d8tO3Ee2O0cjNcmYJpQ" base_Element="_r57259O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r58d89O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r58d-NO3Ee2O0cjNcmYJpQ" base_Element="_r58d9tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r58d-dO3Ee2O0cjNcmYJpQ" base_Element="_r58d9tO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r58d-tO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r58d_dO3Ee2O0cjNcmYJpQ" base_Element="_r58d-9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r59FANO3Ee2O0cjNcmYJpQ" base_Element="_r58d-9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r59FAdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r59FB9O3Ee2O0cjNcmYJpQ" base_Element="_r59FBtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r59FCNO3Ee2O0cjNcmYJpQ" base_Element="_r59FBtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r59FCdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r59FC9O3Ee2O0cjNcmYJpQ" base_Element="_r59FCtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r59FDNO3Ee2O0cjNcmYJpQ" base_Element="_r59FCtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r59FDdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r59sEtO3Ee2O0cjNcmYJpQ" base_Element="_r59sENO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r59sE9O3Ee2O0cjNcmYJpQ" base_Element="_r59sENO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r59sFNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r59sF9O3Ee2O0cjNcmYJpQ" base_Element="_r59sFdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r59sGNO3Ee2O0cjNcmYJpQ" base_Element="_r59sFdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r59sGdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r59sHdO3Ee2O0cjNcmYJpQ" base_Element="_r59sG9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5-TINO3Ee2O0cjNcmYJpQ" base_Element="_r59sG9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r5-TIdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5-TI9O3Ee2O0cjNcmYJpQ" genericsValue="String, Integer" base_Element="_r5-TItO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-QWMdO3Ee2O0cjNcmYJpQ" base_Element="_r-QWMNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-Q9QdO3Ee2O0cjNcmYJpQ" base_Element="_r-Q9QNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-RkUNO3Ee2O0cjNcmYJpQ" base_Element="_r-Q9QtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-RkUtO3Ee2O0cjNcmYJpQ" base_Element="_r-RkUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-RkVNO3Ee2O0cjNcmYJpQ" base_Element="_r-RkU9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-SydNO3Ee2O0cjNcmYJpQ" base_Element="_r-SycdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-SyddO3Ee2O0cjNcmYJpQ" base_Element="_r-SycdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-SydtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-TZh9O3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r-TZhtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-UAkNO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r-TZidO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-UnodO3Ee2O0cjNcmYJpQ" genericsValue="String, Activation" base_Element="_r-UnoNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-Wc0dO3Ee2O0cjNcmYJpQ" base_Element="_r-Wc0NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-YSANO3Ee2O0cjNcmYJpQ" base_Element="_r-Xq-9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-YSAdO3Ee2O0cjNcmYJpQ" base_Element="_r-Xq-9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-YSAtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-ZgJ9O3Ee2O0cjNcmYJpQ" base_Element="_r-ZgJtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-auQ9O3Ee2O0cjNcmYJpQ" base_Element="_r-auQNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-auRNO3Ee2O0cjNcmYJpQ" base_Element="_r-auQNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-auRdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-b8YdO3Ee2O0cjNcmYJpQ" base_Element="_r-b8YNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-cjcNO3Ee2O0cjNcmYJpQ" base_Element="_r-b8YtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-cjctO3Ee2O0cjNcmYJpQ" base_Element="_r-cjcdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-cjdNO3Ee2O0cjNcmYJpQ" base_Element="_r-cjc9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-dKgNO3Ee2O0cjNcmYJpQ" base_Element="_r-cjddO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-dKgtO3Ee2O0cjNcmYJpQ" base_Element="_r-dKgdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-dKhNO3Ee2O0cjNcmYJpQ" base_Element="_r-dKg9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-g04dO3Ee2O0cjNcmYJpQ" genericsValue="String, Flow" base_Element="_r-g04NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-g049O3Ee2O0cjNcmYJpQ" genericsValue="Node, Activation" base_Element="_r-g04tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-iqENO3Ee2O0cjNcmYJpQ" base_Element="_r-iDAtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-iqEtO3Ee2O0cjNcmYJpQ" base_Element="_r-iqEdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-iqFNO3Ee2O0cjNcmYJpQ" base_Element="_r-iqE9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-jRINO3Ee2O0cjNcmYJpQ" base_Element="_r-iqFdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-jRItO3Ee2O0cjNcmYJpQ" base_Element="_r-jRIdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-jRJNO3Ee2O0cjNcmYJpQ" base_Element="_r-jRI9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-jRJtO3Ee2O0cjNcmYJpQ" base_Element="_r-jRJdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-j4MdO3Ee2O0cjNcmYJpQ" base_Element="_r-j4MNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-kfQNO3Ee2O0cjNcmYJpQ" base_Element="_r-j4OdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-kfQ9O3Ee2O0cjNcmYJpQ" base_Element="_r-kfQdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-kfRNO3Ee2O0cjNcmYJpQ" base_Element="_r-kfQdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-kfRdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-kfR9O3Ee2O0cjNcmYJpQ" base_Element="_r-kfRtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-lGUtO3Ee2O0cjNcmYJpQ" base_Element="_r-lGUNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-lGU9O3Ee2O0cjNcmYJpQ" base_Element="_r-lGUNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-lGVNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-lGVtO3Ee2O0cjNcmYJpQ" base_Element="_r-lGVdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-lGWdO3Ee2O0cjNcmYJpQ" base_Element="_r-lGV9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-ltYNO3Ee2O0cjNcmYJpQ" base_Element="_r-lGV9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-ltYdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-ltY9O3Ee2O0cjNcmYJpQ" base_Element="_r-ltYtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-ltZtO3Ee2O0cjNcmYJpQ" base_Element="_r-ltZNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-ltZ9O3Ee2O0cjNcmYJpQ" base_Element="_r-ltZNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-ltaNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-mUcNO3Ee2O0cjNcmYJpQ" base_Element="_r-ltadO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-mUc9O3Ee2O0cjNcmYJpQ" base_Element="_r-mUcdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-mUdNO3Ee2O0cjNcmYJpQ" base_Element="_r-mUcdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-mUddO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-mUd9O3Ee2O0cjNcmYJpQ" base_Element="_r-mUdtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-m7gNO3Ee2O0cjNcmYJpQ" base_Element="_r-mUeNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-m7gdO3Ee2O0cjNcmYJpQ" base_Element="_r-mUeNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-m7gtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-nikNO3Ee2O0cjNcmYJpQ" base_Element="_r-m7g9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-niktO3Ee2O0cjNcmYJpQ" base_Element="_r-nikdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-nilNO3Ee2O0cjNcmYJpQ" base_Element="_r-nik9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-oJoNO3Ee2O0cjNcmYJpQ" base_Element="_r-nildO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-oJotO3Ee2O0cjNcmYJpQ" base_Element="_r-oJodO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-oJpNO3Ee2O0cjNcmYJpQ" base_Element="_r-oJo9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-owsdO3Ee2O0cjNcmYJpQ" base_Element="_r-owsNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-ows9O3Ee2O0cjNcmYJpQ" base_Element="_r-owstO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-p-0dO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r-p-0NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-ql4NO3Ee2O0cjNcmYJpQ" base_Element="_r-p-0tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-sbENO3Ee2O0cjNcmYJpQ" base_Element="_r-r0ANO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-sbEdO3Ee2O0cjNcmYJpQ" base_Element="_r-r0ANO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-sbEtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-tCIdO3Ee2O0cjNcmYJpQ" genericsValue="String, Node" base_Element="_r-tCINO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-uQQNO3Ee2O0cjNcmYJpQ" base_Element="_r-tpMtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-wFdNO3Ee2O0cjNcmYJpQ" base_Element="_r-wFcdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-wFddO3Ee2O0cjNcmYJpQ" base_Element="_r-wFcdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-wFdtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-wshdO3Ee2O0cjNcmYJpQ" genericsValue="ScheduleTime" base_Element="_r-wsgNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-xTnNO3Ee2O0cjNcmYJpQ" base_Element="_r-xTmdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-xTndO3Ee2O0cjNcmYJpQ" base_Element="_r-xTmdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-xTntO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-yhsNO3Ee2O0cjNcmYJpQ" genericsValue="String,InstructionTimeSlot" base_Element="_r-x6oNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-zv0NO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r-zIwdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-zv0tO3Ee2O0cjNcmYJpQ" base_Element="_r-zv0dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-zv1NO3Ee2O0cjNcmYJpQ" base_Element="_r-zv09O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r-0W4dO3Ee2O0cjNcmYJpQ" base_Element="_r-0W4NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-098tO3Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_r-098NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-099dO3Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_r-0989O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-1lAtO3Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_r-1lANO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-2zINO3Ee2O0cjNcmYJpQ" genericsValue="Double" base_Element="_r-2MENO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r-2zItO3Ee2O0cjNcmYJpQ" genericsValue="Double,ReliabilityRow" base_Element="_r-2zIdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-5PYtO3Ee2O0cjNcmYJpQ" base_Element="_r-5PYNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-5PY9O3Ee2O0cjNcmYJpQ" base_Element="_r-5PYNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-5PZNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-5PZ9O3Ee2O0cjNcmYJpQ" base_Element="_r-5PZdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-5PaNO3Ee2O0cjNcmYJpQ" base_Element="_r-5PZdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-5PadO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-52cNO3Ee2O0cjNcmYJpQ" base_Element="_r-5PatO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-52c9O3Ee2O0cjNcmYJpQ" base_Element="_r-52cdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-52dNO3Ee2O0cjNcmYJpQ" base_Element="_r-52cdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-52ddO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-52d9O3Ee2O0cjNcmYJpQ" base_Element="_r-52dtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-6dgNO3Ee2O0cjNcmYJpQ" base_Element="_r-52eNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-6dgdO3Ee2O0cjNcmYJpQ" base_Element="_r-52eNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-6dgtO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-6dhNO3Ee2O0cjNcmYJpQ" base_Element="_r-6dg9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-6dh9O3Ee2O0cjNcmYJpQ" base_Element="_r-6dhdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-6diNO3Ee2O0cjNcmYJpQ" base_Element="_r-6dhdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-6didO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-7EkdO3Ee2O0cjNcmYJpQ" base_Element="_r-7EkNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-7ElNO3Ee2O0cjNcmYJpQ" base_Element="_r-7EktO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-7EldO3Ee2O0cjNcmYJpQ" base_Element="_r-7EktO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-7EltO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-7EmdO3Ee2O0cjNcmYJpQ" base_Element="_r-7El9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-7roNO3Ee2O0cjNcmYJpQ" base_Element="_r-7El9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-7rodO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-7rpNO3Ee2O0cjNcmYJpQ" base_Element="_r-7rotO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-7rpdO3Ee2O0cjNcmYJpQ" base_Element="_r-7rotO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-7rptO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-7rqdO3Ee2O0cjNcmYJpQ" base_Element="_r-7rp9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-7rqtO3Ee2O0cjNcmYJpQ" base_Element="_r-7rp9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r-7rq9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-_9ENO3Ee2O0cjNcmYJpQ" genericsValue="Activation,Row&lt;Activation>" base_Element="_r-_WANO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_AkINO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r-_9EtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_AkI9O3Ee2O0cjNcmYJpQ" base_Element="_r_AkItO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_BLMtO3Ee2O0cjNcmYJpQ" base_Element="_r_BLMdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_ByQNO3Ee2O0cjNcmYJpQ" base_Element="_r_BLM9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_E1kdO3Ee2O0cjNcmYJpQ" base_Element="_r_E1kNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_E1k9O3Ee2O0cjNcmYJpQ" base_Element="_r_E1ktO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_FcoNO3Ee2O0cjNcmYJpQ" base_Element="_r_E1lNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_FcotO3Ee2O0cjNcmYJpQ" base_Element="_r_FcodO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_FcpNO3Ee2O0cjNcmYJpQ" base_Element="_r_Fco9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_H44dO3Ee2O0cjNcmYJpQ" base_Element="_r_H44NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_If8tO3Ee2O0cjNcmYJpQ" base_Element="_r_If8NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_If89O3Ee2O0cjNcmYJpQ" base_Element="_r_If8NO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_If9NO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_If99O3Ee2O0cjNcmYJpQ" base_Element="_r_If9dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_If-NO3Ee2O0cjNcmYJpQ" base_Element="_r_If9dO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_If-dO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_JHANO3Ee2O0cjNcmYJpQ" base_Element="_r_If-tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_JHA9O3Ee2O0cjNcmYJpQ" base_Element="_r_JHAdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_JHBNO3Ee2O0cjNcmYJpQ" base_Element="_r_JHAdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_JHBdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_JHB9O3Ee2O0cjNcmYJpQ" base_Element="_r_JHBtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_JuEdO3Ee2O0cjNcmYJpQ" base_Element="_r_JHCNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_JuEtO3Ee2O0cjNcmYJpQ" base_Element="_r_JHCNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_JuE9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_JuFdO3Ee2O0cjNcmYJpQ" base_Element="_r_JuFNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_JuGNO3Ee2O0cjNcmYJpQ" base_Element="_r_JuFtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_KVINO3Ee2O0cjNcmYJpQ" base_Element="_r_JuFtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_KVIdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_KVI9O3Ee2O0cjNcmYJpQ" base_Element="_r_KVItO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_KVJtO3Ee2O0cjNcmYJpQ" base_Element="_r_KVJNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_KVJ9O3Ee2O0cjNcmYJpQ" base_Element="_r_KVJNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_KVKNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_K8MNO3Ee2O0cjNcmYJpQ" base_Element="_r_KVKdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_K8M9O3Ee2O0cjNcmYJpQ" base_Element="_r_K8MdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_K8NNO3Ee2O0cjNcmYJpQ" base_Element="_r_K8MdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_K8NdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_N_gdO3Ee2O0cjNcmYJpQ" base_Element="_r_N_gNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_N_g9O3Ee2O0cjNcmYJpQ" base_Element="_r_N_gtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_OmkNO3Ee2O0cjNcmYJpQ" base_Element="_r_N_hNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_RC0dO3Ee2O0cjNcmYJpQ" base_Element="_r_RC0NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_Rp4dO3Ee2O0cjNcmYJpQ" base_Element="_r_Rp4NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_SQ8NO3Ee2O0cjNcmYJpQ" base_Element="_r_Rp4tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_WiYNO3Ee2O0cjNcmYJpQ" base_Element="_r_V7UNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_WiYtO3Ee2O0cjNcmYJpQ" base_Element="_r_WiYdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_XJcNO3Ee2O0cjNcmYJpQ" base_Element="_r_WiY9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_XJctO3Ee2O0cjNcmYJpQ" base_Element="_r_XJcdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_XJdNO3Ee2O0cjNcmYJpQ" base_Element="_r_XJc9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_jWsdO3Ee2O0cjNcmYJpQ" genericsValue="T, E" base_Element="_r_jWsNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_j9wtO3Ee2O0cjNcmYJpQ" base_Element="_r_j9wdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_j9xNO3Ee2O0cjNcmYJpQ" genericsValue="Activation" base_Element="_r_j9w9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_kk0tO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r_kk0dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_lL4tO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r_lL4dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_lL5dO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r_lL5NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_ly8tO3Ee2O0cjNcmYJpQ" genericsValue="ScheduleTime" base_Element="_r_ly8dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_nBENO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r_maANO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_noKNO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r_noItO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_oPMNO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r_noI9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_oPNNO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r_oPM9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_o2QtO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r_o2QNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_pdUNO3Ee2O0cjNcmYJpQ" genericsValue="Activation" base_Element="_r_o2Q9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_qEYtO3Ee2O0cjNcmYJpQ" base_Element="_r_pdUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_qEY9O3Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_r_qEYNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_qEZNO3Ee2O0cjNcmYJpQ" base_Element="_r_pdUdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_qEZdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_qrcNO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_qEZtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_qrctO3Ee2O0cjNcmYJpQ" base_Element="_r_qrcdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_rSgtO3Ee2O0cjNcmYJpQ" base_Element="_r_qrc9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_rSg9O3Ee2O0cjNcmYJpQ" base_Element="_r_qrc9O3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_rShNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_rShtO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_r_rShdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_r5kdO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_r_r5kNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_sgodO3Ee2O0cjNcmYJpQ" genericsValue="Flow" base_Element="_r_sgoNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_tuwNO3Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_r_tHtNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_tuw9O3Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_r_tuwtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_u849O3Ee2O0cjNcmYJpQ" base_Element="_r_u84tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_wLANO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_vj8NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_wLBdO3Ee2O0cjNcmYJpQ" base_Element="_r_wLAdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_wLBtO3Ee2O0cjNcmYJpQ" base_Element="_r_wLAdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_wLB9O3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_wyEdO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_wyENO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_wyFtO3Ee2O0cjNcmYJpQ" base_Element="_r_wyEtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_wyF9O3Ee2O0cjNcmYJpQ" base_Element="_r_wyEtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_wyGNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_xZIdO3Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_r_xZINO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_yAMdO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_yAMNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_yANtO3Ee2O0cjNcmYJpQ" base_Element="_r_yAMtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_ynQNO3Ee2O0cjNcmYJpQ" base_Element="_r_yAMtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_ynQdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_zOUNO3Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_r_ynRdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_r_zOVdO3Ee2O0cjNcmYJpQ" base_Element="_r_zOUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_zOVtO3Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_r_zOUtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_z1YdO3Ee2O0cjNcmYJpQ" base_Element="_r_z1YNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_0ccdO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_0ccNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_0cdtO3Ee2O0cjNcmYJpQ" base_Element="_r_0cctO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_1DgNO3Ee2O0cjNcmYJpQ" base_Element="_r_0cctO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_1DgdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_1Dg9O3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_1DgtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_1DiNO3Ee2O0cjNcmYJpQ" base_Element="_r_1DhNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_1qkNO3Ee2O0cjNcmYJpQ" base_Element="_r_1DhNO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_1qkdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_1qk9O3Ee2O0cjNcmYJpQ" base_Element="_r_1qktO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_3fx9O3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_3fxtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_4G1dO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_4G0dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_4t4NO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_4G19O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_4t4dO3Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_r_4G2NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_5U9tO3Ee2O0cjNcmYJpQ" genericsValue="E" base_Element="_r_5U9dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_58AdO3Ee2O0cjNcmYJpQ" base_Element="_r_58ANO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_58CtO3Ee2O0cjNcmYJpQ" base_Element="_r_58CdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_r_6jGdO3Ee2O0cjNcmYJpQ" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_r_6jF9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_6jGtO3Ee2O0cjNcmYJpQ" base_Element="_r_6jF9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_r_8YQtO3Ee2O0cjNcmYJpQ" base_Element="_r_8YQdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_9mYdO3Ee2O0cjNcmYJpQ" base_Element="_r_8_UtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_r_9mYtO3Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_r_8_U9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_r_9mY9O3Ee2O0cjNcmYJpQ" base_Element="_r_8_UtO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_r_9mZNO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_9mZtO3Ee2O0cjNcmYJpQ" base_Element="_r_9mZdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sAB30dO3Ee2O0cjNcmYJpQ" base_Element="_sAB30NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAJzo9O3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_sAJzotO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAKasNO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_sAJzpNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAKastO3Ee2O0cjNcmYJpQ" genericsValue="ScheduleTime" base_Element="_sAKasdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALBw9O3Ee2O0cjNcmYJpQ" base_Element="_sALBwtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALBxdO3Ee2O0cjNcmYJpQ" base_Element="_sALBxNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALBx9O3Ee2O0cjNcmYJpQ" base_Element="_sALBxtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALo0tO3Ee2O0cjNcmYJpQ" base_Element="_sALo0dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALo1NO3Ee2O0cjNcmYJpQ" base_Element="_sALo09O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALo2NO3Ee2O0cjNcmYJpQ" base_Element="_sALo19O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAMP4NO3Ee2O0cjNcmYJpQ" base_Element="_sALo2dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAMP4tO3Ee2O0cjNcmYJpQ" genericsValue="ChannelSet" base_Element="_sAMP4dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAMP49O3Ee2O0cjNcmYJpQ" base_Element="_sAMP4dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAM28NO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_sAMP5tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAM28dO3Ee2O0cjNcmYJpQ" base_Element="_sAMP5tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAM289O3Ee2O0cjNcmYJpQ" base_Element="_sAM28tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAM29dO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_sAM29NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sANeANO3Ee2O0cjNcmYJpQ" base_Element="_sAM29NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sANeAtO3Ee2O0cjNcmYJpQ" base_Element="_sANeAdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sANeBNO3Ee2O0cjNcmYJpQ" base_Element="_sANeA9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAOFENO3Ee2O0cjNcmYJpQ" base_Element="_sANeBdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAOFEtO3Ee2O0cjNcmYJpQ" base_Element="_sAOFEdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAOFFNO3Ee2O0cjNcmYJpQ" base_Element="_sAOFE9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAOFFtO3Ee2O0cjNcmYJpQ" base_Element="_sAOFFdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAPTMtO3Ee2O0cjNcmYJpQ" base_Element="_sAPTMdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAP6R9O3Ee2O0cjNcmYJpQ" base_Element="_sAP6RdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAP6SdO3Ee2O0cjNcmYJpQ" base_Element="_sAP6SNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAP6S9O3Ee2O0cjNcmYJpQ" base_Element="_sAP6StO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAQhUNO3Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_sAP6TNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAQhUdO3Ee2O0cjNcmYJpQ" base_Element="_sAP6TNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAQhU9O3Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_sAQhUtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAQhVNO3Ee2O0cjNcmYJpQ" base_Element="_sAQhUtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAQhVtO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_sAQhVdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAQhV9O3Ee2O0cjNcmYJpQ" base_Element="_sAQhVdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sARIYdO3Ee2O0cjNcmYJpQ" base_Element="_sARIYNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sARIY9O3Ee2O0cjNcmYJpQ" base_Element="_sARIYtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sARvdNO3Ee2O0cjNcmYJpQ" base_Element="_sARvc9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sARvdtO3Ee2O0cjNcmYJpQ" base_Element="_sARvddO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sARveNO3Ee2O0cjNcmYJpQ" base_Element="_sARvd9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sARvetO3Ee2O0cjNcmYJpQ" base_Element="_sARvedO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sASWgNO3Ee2O0cjNcmYJpQ" base_Element="_sARve9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sASWgtO3Ee2O0cjNcmYJpQ" base_Element="_sASWgdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sASWhNO3Ee2O0cjNcmYJpQ" base_Element="_sASWg9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAS9kNO3Ee2O0cjNcmYJpQ" base_Element="_sASWhdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAS9ktO3Ee2O0cjNcmYJpQ" base_Element="_sAS9kdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAS9ltO3Ee2O0cjNcmYJpQ" base_Element="_sAS9ldO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAS9mdO3Ee2O0cjNcmYJpQ" base_Element="_sAS9mNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sATkotO3Ee2O0cjNcmYJpQ" base_Element="_sATkoNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sATkp9O3Ee2O0cjNcmYJpQ" base_Element="_sATkpdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sATkqdO3Ee2O0cjNcmYJpQ" base_Element="_sATkqNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAULsdO3Ee2O0cjNcmYJpQ" base_Element="_sAULsNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAULs9O3Ee2O0cjNcmYJpQ" base_Element="_sAULstO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAULtdO3Ee2O0cjNcmYJpQ" base_Element="_sAULtNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAULt9O3Ee2O0cjNcmYJpQ" base_Element="_sAULttO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAUywNO3Ee2O0cjNcmYJpQ" genericsValue="String, Integer" base_Element="_sAULuNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAUywdO3Ee2O0cjNcmYJpQ" base_Element="_sAULuNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAUyx9O3Ee2O0cjNcmYJpQ" base_Element="_sAUyxtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAUyydO3Ee2O0cjNcmYJpQ" base_Element="_sAUyyNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAVZ1dO3Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_sAVZ1NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAWA59O3Ee2O0cjNcmYJpQ" base_Element="_sAWA5tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAWA6dO3Ee2O0cjNcmYJpQ" base_Element="_sAWA6NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAWn8NO3Ee2O0cjNcmYJpQ" base_Element="_sAWA6tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAWn9dO3Ee2O0cjNcmYJpQ" base_Element="_sAWn8dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAWn99O3Ee2O0cjNcmYJpQ" base_Element="_sAWn9tO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAWn-dO3Ee2O0cjNcmYJpQ" genericsValue="Activation" base_Element="_sAWn-NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAWn-tO3Ee2O0cjNcmYJpQ" base_Element="_sAWn-NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAXPANO3Ee2O0cjNcmYJpQ" genericsValue="String, Integer" base_Element="_sAWn-9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAXPAdO3Ee2O0cjNcmYJpQ" base_Element="_sAWn-9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAXPA9O3Ee2O0cjNcmYJpQ" base_Element="_sAXPAtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAX2FdO3Ee2O0cjNcmYJpQ" base_Element="_sAX2FNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAX2F9O3Ee2O0cjNcmYJpQ" base_Element="_sAX2FtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAX2GdO3Ee2O0cjNcmYJpQ" base_Element="_sAX2GNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAZEMNO3Ee2O0cjNcmYJpQ" base_Element="_sAYdKdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAZEM9O3Ee2O0cjNcmYJpQ" base_Element="_sAZEMdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAZENtO3Ee2O0cjNcmYJpQ" base_Element="_sAZENNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAZEOdO3Ee2O0cjNcmYJpQ" base_Element="_sAZEN9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAZrSdO3Ee2O0cjNcmYJpQ" base_Element="_sAZrSNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAaSUNO3Ee2O0cjNcmYJpQ" base_Element="_sAZrStO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAaSVNO3Ee2O0cjNcmYJpQ" base_Element="_sAaSU9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAaSVtO3Ee2O0cjNcmYJpQ" base_Element="_sAaSVdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAa5YdO3Ee2O0cjNcmYJpQ" base_Element="_sAa5YNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAa5Y9O3Ee2O0cjNcmYJpQ" base_Element="_sAa5YtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAbgctO3Ee2O0cjNcmYJpQ" base_Element="_sAbgcdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAbgdNO3Ee2O0cjNcmYJpQ" base_Element="_sAbgc9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAbgd9O3Ee2O0cjNcmYJpQ" base_Element="_sAbgddO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAbgedO3Ee2O0cjNcmYJpQ" base_Element="_sAbgeNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAcHgNO3Ee2O0cjNcmYJpQ" base_Element="_sAbgetO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAcHgtO3Ee2O0cjNcmYJpQ" base_Element="_sAcHgdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAcHhNO3Ee2O0cjNcmYJpQ" base_Element="_sAcHg9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAcHhtO3Ee2O0cjNcmYJpQ" base_Element="_sAcHhdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAdVodO3Ee2O0cjNcmYJpQ" base_Element="_sAdVoNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAdVo9O3Ee2O0cjNcmYJpQ" base_Element="_sAdVotO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAdVpdO3Ee2O0cjNcmYJpQ" base_Element="_sAdVpNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAdVp9O3Ee2O0cjNcmYJpQ" base_Element="_sAdVptO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAdVqdO3Ee2O0cjNcmYJpQ" base_Element="_sAdVqNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAd8sNO3Ee2O0cjNcmYJpQ" base_Element="_sAdVqtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAd8s9O3Ee2O0cjNcmYJpQ" base_Element="_sAd8sdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAd8ttO3Ee2O0cjNcmYJpQ" base_Element="_sAd8tNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAd8udO3Ee2O0cjNcmYJpQ" base_Element="_sAd8t9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAd8u9O3Ee2O0cjNcmYJpQ" base_Element="_sAd8utO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAejwdO3Ee2O0cjNcmYJpQ" base_Element="_sAejwNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAejw9O3Ee2O0cjNcmYJpQ" base_Element="_sAejwtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAejxdO3Ee2O0cjNcmYJpQ" base_Element="_sAejxNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_sAejytO3Ee2O0cjNcmYJpQ" dimensions="2" base_Element="_sAejyNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAfK0NO3Ee2O0cjNcmYJpQ" base_Element="_sAejyNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAfx4tO3Ee2O0cjNcmYJpQ" base_Element="_sAfx4dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAfx5NO3Ee2O0cjNcmYJpQ" base_Element="_sAfx49O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAfx5tO3Ee2O0cjNcmYJpQ" base_Element="_sAfx5dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAfx6NO3Ee2O0cjNcmYJpQ" base_Element="_sAfx59O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAfx6tO3Ee2O0cjNcmYJpQ" base_Element="_sAfx6dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAgY8NO3Ee2O0cjNcmYJpQ" base_Element="_sAfx69O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAgY8tO3Ee2O0cjNcmYJpQ" base_Element="_sAgY8dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAgY9NO3Ee2O0cjNcmYJpQ" base_Element="_sAgY89O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAgY9tO3Ee2O0cjNcmYJpQ" base_Element="_sAgY9dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAgY-NO3Ee2O0cjNcmYJpQ" base_Element="_sAgY99O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAhAANO3Ee2O0cjNcmYJpQ" base_Element="_sAgY-dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAhAAtO3Ee2O0cjNcmYJpQ" base_Element="_sAhAAdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAhABNO3Ee2O0cjNcmYJpQ" base_Element="_sAhAA9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAhABtO3Ee2O0cjNcmYJpQ" base_Element="_sAhABdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAhACdO3Ee2O0cjNcmYJpQ" base_Element="_sAhAB9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAhAC9O3Ee2O0cjNcmYJpQ" base_Element="_sAhACtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAhnEdO3Ee2O0cjNcmYJpQ" base_Element="_sAhnENO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAhnE9O3Ee2O0cjNcmYJpQ" base_Element="_sAhnEtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAiOLdO3Ee2O0cjNcmYJpQ" base_Element="_sAiOK9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAi1MdO3Ee2O0cjNcmYJpQ" base_Element="_sAi1MNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAi1M9O3Ee2O0cjNcmYJpQ" genericsValue="InstructionParameters" base_Element="_sAi1MtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAi1NNO3Ee2O0cjNcmYJpQ" base_Element="_sAi1MtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAjcQNO3Ee2O0cjNcmYJpQ" base_Element="_sAi1NdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAjcQtO3Ee2O0cjNcmYJpQ" base_Element="_sAjcQdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAkDUNO3Ee2O0cjNcmYJpQ" base_Element="_sAjcQ9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAkDUtO3Ee2O0cjNcmYJpQ" base_Element="_sAkDUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAkDVNO3Ee2O0cjNcmYJpQ" base_Element="_sAkDU9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAkDVtO3Ee2O0cjNcmYJpQ" base_Element="_sAkDVdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAkDWNO3Ee2O0cjNcmYJpQ" base_Element="_sAkDV9O3Ee2O0cjNcmYJpQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sAkDWdO3Ee2O0cjNcmYJpQ" name="getNumChannels" method="_sA9r_NO3Ee2O0cjNcmYJpQ">
      <ownedParameter xmi:id="_sAkDWtO3Ee2O0cjNcmYJpQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_sAkqYNO3Ee2O0cjNcmYJpQ" base_Element="_sAkDWdO3Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_sAkqYdO3Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAkqZNO3Ee2O0cjNcmYJpQ" base_Element="_sAkqYtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAkqZ9O3Ee2O0cjNcmYJpQ" base_Element="_sAkqZdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAlRftO3Ee2O0cjNcmYJpQ" base_Element="_sAlRfNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAl4g9O3Ee2O0cjNcmYJpQ" base_Element="_sAl4gdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAl4h9O3Ee2O0cjNcmYJpQ" base_Element="_sAl4htO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAmfkNO3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_sAl4iNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAmfk9O3Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_sAmfktO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAnGpdO3Ee2O0cjNcmYJpQ" base_Element="_sAnGpNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAnGp9O3Ee2O0cjNcmYJpQ" base_Element="_sAnGptO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAntsdO3Ee2O0cjNcmYJpQ" base_Element="_sAntsNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAoUwdO3Ee2O0cjNcmYJpQ" base_Element="_sAoUwNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAoUxtO3Ee2O0cjNcmYJpQ" base_Element="_sAoUxdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAoUyNO3Ee2O0cjNcmYJpQ" base_Element="_sAoUx9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAoUytO3Ee2O0cjNcmYJpQ" base_Element="_sAoUydO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sAo71dO3Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_sAo71NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sApi4NO3Ee2O0cjNcmYJpQ" base_Element="_sAo71NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_sApi4tO3Ee2O0cjNcmYJpQ" genericsValue="SchedulableObject" base_Element="_sApi4dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAqxAdO3Ee2O0cjNcmYJpQ" base_Element="_sAqxANO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAqxA9O3Ee2O0cjNcmYJpQ" base_Element="_sAqxAtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAqxBdO3Ee2O0cjNcmYJpQ" base_Element="_sAqxBNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAqxB9O3Ee2O0cjNcmYJpQ" base_Element="_sAqxBtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAqxCdO3Ee2O0cjNcmYJpQ" base_Element="_sAqxCNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sArYEdO3Ee2O0cjNcmYJpQ" base_Element="_sArYENO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sArYE9O3Ee2O0cjNcmYJpQ" base_Element="_sArYEtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sArYFdO3Ee2O0cjNcmYJpQ" base_Element="_sArYFNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sArYF9O3Ee2O0cjNcmYJpQ" base_Element="_sArYFtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sArYGdO3Ee2O0cjNcmYJpQ" base_Element="_sArYGNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAr_IdO3Ee2O0cjNcmYJpQ" base_Element="_sAr_INO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAr_I9O3Ee2O0cjNcmYJpQ" base_Element="_sAr_ItO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAr_JdO3Ee2O0cjNcmYJpQ" base_Element="_sAr_JNO3Ee2O0cjNcmYJpQ"/>
  <uml:OpaqueBehavior xmi:id="_sA9r_NO3Ee2O0cjNcmYJpQ" name="getNumChannels" specification="_sAkDWdO3Ee2O0cjNcmYJpQ">
    <ownedParameter xmi:id="_sA9r_dO3Ee2O0cjNcmYJpQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_sBZJwNO3Ee2O0cjNcmYJpQ" base_Element="_sBYisNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBZJw9O3Ee2O0cjNcmYJpQ" base_Element="_sBZJwdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBZJxtO3Ee2O0cjNcmYJpQ" base_Element="_sBZJxNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBZw0NO3Ee2O0cjNcmYJpQ" base_Element="_sBZJx9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBZw09O3Ee2O0cjNcmYJpQ" base_Element="_sBZw0dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBZw1tO3Ee2O0cjNcmYJpQ" base_Element="_sBZw1NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBaX4NO3Ee2O0cjNcmYJpQ" base_Element="_sBZw19O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBaX49O3Ee2O0cjNcmYJpQ" base_Element="_sBaX4dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBaX5tO3Ee2O0cjNcmYJpQ" base_Element="_sBaX5NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBa-8NO3Ee2O0cjNcmYJpQ" base_Element="_sBaX59O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBa-89O3Ee2O0cjNcmYJpQ" base_Element="_sBa-8dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBbmANO3Ee2O0cjNcmYJpQ" base_Element="_sBa-9NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBbmA9O3Ee2O0cjNcmYJpQ" base_Element="_sBbmAdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBbmBtO3Ee2O0cjNcmYJpQ" base_Element="_sBbmBNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBbmCdO3Ee2O0cjNcmYJpQ" base_Element="_sBbmB9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBcNENO3Ee2O0cjNcmYJpQ" base_Element="_sBbmCtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBcNE9O3Ee2O0cjNcmYJpQ" base_Element="_sBcNEdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBcNFtO3Ee2O0cjNcmYJpQ" base_Element="_sBcNFNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBc0ItO3Ee2O0cjNcmYJpQ" base_Element="_sBc0INO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBc0JdO3Ee2O0cjNcmYJpQ" base_Element="_sBc0I9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBdbMNO3Ee2O0cjNcmYJpQ" base_Element="_sBc0JtO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBdbM9O3Ee2O0cjNcmYJpQ" base_Element="_sBdbMdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBeCQNO3Ee2O0cjNcmYJpQ" base_Element="_sBdbNNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBeCQ9O3Ee2O0cjNcmYJpQ" base_Element="_sBeCQdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBepUNO3Ee2O0cjNcmYJpQ" base_Element="_sBeCRNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBfQYNO3Ee2O0cjNcmYJpQ" base_Element="_sBepUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBfQY9O3Ee2O0cjNcmYJpQ" base_Element="_sBfQYdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBf3cNO3Ee2O0cjNcmYJpQ" base_Element="_sBfQZNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBf3c9O3Ee2O0cjNcmYJpQ" base_Element="_sBf3cdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBgegNO3Ee2O0cjNcmYJpQ" base_Element="_sBf3dNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBgeg9O3Ee2O0cjNcmYJpQ" base_Element="_sBgegdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBhFkNO3Ee2O0cjNcmYJpQ" base_Element="_sBgehNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBhFk9O3Ee2O0cjNcmYJpQ" base_Element="_sBhFkdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBhFltO3Ee2O0cjNcmYJpQ" base_Element="_sBhFlNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBhsoNO3Ee2O0cjNcmYJpQ" base_Element="_sBhFl9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBhso9O3Ee2O0cjNcmYJpQ" base_Element="_sBhsodO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBhsptO3Ee2O0cjNcmYJpQ" base_Element="_sBhspNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBiTstO3Ee2O0cjNcmYJpQ" base_Element="_sBiTsNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBiTtdO3Ee2O0cjNcmYJpQ" base_Element="_sBiTs9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBi6wNO3Ee2O0cjNcmYJpQ" base_Element="_sBiTttO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBi6w9O3Ee2O0cjNcmYJpQ" base_Element="_sBi6wdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBi6xtO3Ee2O0cjNcmYJpQ" base_Element="_sBi6xNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBjh0NO3Ee2O0cjNcmYJpQ" base_Element="_sBi6x9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBjh09O3Ee2O0cjNcmYJpQ" base_Element="_sBjh0dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBjh1tO3Ee2O0cjNcmYJpQ" base_Element="_sBjh1NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBkI4NO3Ee2O0cjNcmYJpQ" base_Element="_sBjh19O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBkI49O3Ee2O0cjNcmYJpQ" base_Element="_sBkI4dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBkI5tO3Ee2O0cjNcmYJpQ" base_Element="_sBkI5NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBkv8NO3Ee2O0cjNcmYJpQ" base_Element="_sBkI59O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBkv89O3Ee2O0cjNcmYJpQ" base_Element="_sBkv8dO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBkv9tO3Ee2O0cjNcmYJpQ" base_Element="_sBkv9NO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBlXANO3Ee2O0cjNcmYJpQ" base_Element="_sBkv99O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBlXA9O3Ee2O0cjNcmYJpQ" base_Element="_sBlXAdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBlXBtO3Ee2O0cjNcmYJpQ" base_Element="_sBlXBNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBl-ENO3Ee2O0cjNcmYJpQ" base_Element="_sBlXB9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBl-E9O3Ee2O0cjNcmYJpQ" base_Element="_sBl-EdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBmlINO3Ee2O0cjNcmYJpQ" base_Element="_sBl-FNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBmlI9O3Ee2O0cjNcmYJpQ" base_Element="_sBmlIdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBnMMNO3Ee2O0cjNcmYJpQ" base_Element="_sBmlJNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBnMM9O3Ee2O0cjNcmYJpQ" base_Element="_sBnMMdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBnzQNO3Ee2O0cjNcmYJpQ" base_Element="_sBnMNNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBnzQ9O3Ee2O0cjNcmYJpQ" base_Element="_sBnzQdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBnzRtO3Ee2O0cjNcmYJpQ" base_Element="_sBnzRNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBoaUNO3Ee2O0cjNcmYJpQ" base_Element="_sBnzR9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBoaU9O3Ee2O0cjNcmYJpQ" base_Element="_sBoaUdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBoaVtO3Ee2O0cjNcmYJpQ" base_Element="_sBoaVNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBpBYNO3Ee2O0cjNcmYJpQ" base_Element="_sBoaV9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBpBY9O3Ee2O0cjNcmYJpQ" base_Element="_sBpBYdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBpocNO3Ee2O0cjNcmYJpQ" base_Element="_sBpBZNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBpoc9O3Ee2O0cjNcmYJpQ" base_Element="_sBpocdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBpodtO3Ee2O0cjNcmYJpQ" base_Element="_sBpodNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBqPgNO3Ee2O0cjNcmYJpQ" base_Element="_sBpod9O3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBqPg9O3Ee2O0cjNcmYJpQ" base_Element="_sBqPgdO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_sBqPhtO3Ee2O0cjNcmYJpQ" base_Element="_sBqPhNO3Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_J-WN8NejEe2IjMkQsyA0cQ" genericsValue="String" base_Element="_J-Vm4dejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Generics xmi:id="_J-W1ANejEe2IjMkQsyA0cQ" genericsValue="String" base_Element="_J-WN8tejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Generics xmi:id="_J-XcENejEe2IjMkQsyA0cQ" genericsValue="String" base_Element="_J-W1AtejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Generics xmi:id="_J-YDINejEe2IjMkQsyA0cQ" genericsValue="String" base_Element="_J-XcEtejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Array xmi:id="_J-jCRNejEe2IjMkQsyA0cQ" base_Element="_J-jCQdejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Reference xmi:id="_J-yS0dejEe2IjMkQsyA0cQ" base_Element="_J-yS0NejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-0IAdejEe2IjMkQsyA0cQ" base_Element="_J-0IANejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Reference xmi:id="_J-5nkNejEe2IjMkQsyA0cQ" base_Element="_J-5AgNejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Patch xmi:id="_L_BFMNejEe2IjMkQsyA0cQ" base_Element="_r4hhoNO3Ee2O0cjNcmYJpQ" patchText="@@ -359,12 +359,8 @@&#xA; tate&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_L_CTUNejEe2IjMkQsyA0cQ" base_Element="_r4wLINO3Ee2O0cjNcmYJpQ" patchText="@@ -192,22 +192,25 @@&#xA; is %7B%0D%0A%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_L_C6YNejEe2IjMkQsyA0cQ" base_Element="_r5OsQdO3Ee2O0cjNcmYJpQ" patchText="@@ -117,12 +117,8 @@&#xA; ices&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_L_DhcNejEe2IjMkQsyA0cQ" base_Element="_r5RIhtO3Ee2O0cjNcmYJpQ" patchText="@@ -145,28 +145,24 @@&#xA; ystemChoices&#xA;-()()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -288,12 +288,8 @@&#xA; ices&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_L_EIgNejEe2IjMkQsyA0cQ" base_Element="_r5aScNO3Ee2O0cjNcmYJpQ" patchText="@@ -136,122 +136,8 @@&#xA;  */%0D&#xA;-%0Aimport edu.uiowa.cs.warp.WarpDSL.InstructionParameters;%0D%0Aimport edu.uiowa.cs.warp.WarpDSL.InstructionParameters;%0D&#xA; %0A%0D%0Ai&#xA;" conflicting="false"/>
</xmi:XMI>

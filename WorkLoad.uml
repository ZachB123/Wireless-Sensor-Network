<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_4oBdoNO4Ee2O0cjNcmYJpQ" name="WorkLoad">
    <eAnnotations xmi:id="_4rvgANO4Ee2O0cjNcmYJpQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_4rvgAdO4Ee2O0cjNcmYJpQ" source="codegen">
        <details xmi:id="_4rvgAtO4Ee2O0cjNcmYJpQ" key="codegenDirectory" value="/cs2820-spring23/src"/>
        <details xmi:id="_5yByodO4Ee2O0cjNcmYJpQ" key="AssociatedSourceCode" value="/cs2820-spring23/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-spring23/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;2515762246/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelVisualization.java;3549530263/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-spring23/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Description.java;2283427202/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Edge.java;2557287305/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Flow.java;3359544952/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;982524150/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyVisualization.java;3638017576/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-spring23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Node.java;229355987/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramVisualization.java;1367527794/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;4224526319/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;1279026655/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1720498685/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemFactory.java;3225025894/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationFactory.java;923113377/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;3055860927/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationObject.java;1154791723/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Warp.java;1246636550/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpInterface.java;1600303076/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpSystem.java;2193779250/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoad.java;1306107233/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadTest.java;3314002610/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Program.java;144940582/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_BWJCANejEe2IjMkQsyA0cQ" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_BWJCAdejEe2IjMkQsyA0cQ" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_BWJCAtejEe2IjMkQsyA0cQ" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_BWJCA9ejEe2IjMkQsyA0cQ" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_BWJCBNejEe2IjMkQsyA0cQ" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_5JRwltO4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_5JSXoNO4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_5JSXodO4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_5JSXotO4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_5JSXo9O4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_5JSXpNO4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_5JSXpdO4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_5JSXptO4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_5JSXp9O4Ee2O0cjNcmYJpQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_5I1rsNO4Ee2O0cjNcmYJpQ" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_5I2SwNO4Ee2O0cjNcmYJpQ" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_5I2SwdO4Ee2O0cjNcmYJpQ" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_5I250NO4Ee2O0cjNcmYJpQ" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_5JUz4NO4Ee2O0cjNcmYJpQ" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_5QkrYNO4Ee2O0cjNcmYJpQ" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_5Ji2UNO4Ee2O0cjNcmYJpQ" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_5Q2YMNO4Ee2O0cjNcmYJpQ" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_5JjdYNO4Ee2O0cjNcmYJpQ" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_5Q2_QNO4Ee2O0cjNcmYJpQ" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_5Q2_QtO4Ee2O0cjNcmYJpQ" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KkxENO4Ee2O0cjNcmYJpQ" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_5RZx0NO4Ee2O0cjNcmYJpQ" general="_5QP7QNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5R_AoNO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5R_AodO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SfW8NO4Ee2O0cjNcmYJpQ" name="AbstractMap" specification="_5Kl_MdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SfW8dO4Ee2O0cjNcmYJpQ" type="_5KkxENO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Kl_MdO4Ee2O0cjNcmYJpQ" name="AbstractMap" method="_5SfW8NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Kl_MtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Kl_M9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Kl_NNO4Ee2O0cjNcmYJpQ" type="_5KkxENO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5Kl_NdO4Ee2O0cjNcmYJpQ" name="Activation">
              <generalization xmi:id="_5QTlodO4Ee2O0cjNcmYJpQ" general="_5L8qENO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5R_AotO4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ" isReadOnly="true" association="_5TFM0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5R_nsNO4Ee2O0cjNcmYJpQ" name="edges" type="_5QQiUNO4Ee2O0cjNcmYJpQ" isReadOnly="true" association="_5TFM09O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5R_nstO4Ee2O0cjNcmYJpQ" name="additionalScheduleTimes" type="_5QQiUNO4Ee2O0cjNcmYJpQ" isReadOnly="true" association="_5TFM1tO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5R_ntNO4Ee2O0cjNcmYJpQ" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5R_ntdO4Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_5RaY49O4Ee2O0cjNcmYJpQ" client="_5Kl_NdO4Ee2O0cjNcmYJpQ" supplier="_5RaY4dO4Ee2O0cjNcmYJpQ" contract="_5RaY4dO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SfW8tO4Ee2O0cjNcmYJpQ" name="Activation" specification="_5KmmQNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SfW89O4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SfW9NO4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SfW9dO4Ee2O0cjNcmYJpQ" name="Activation" specification="_5QRJY9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SfW9tO4Ee2O0cjNcmYJpQ" name="elem" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SfW99O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SfW-NO4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SfW-dO4Ee2O0cjNcmYJpQ" name="clone" specification="_5KmmRdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SfW-tO4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SfW-9O4Ee2O0cjNcmYJpQ" name="getEdgesByReleaseTime" specification="_5KmmSdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SfW_NO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-ANO4Ee2O0cjNcmYJpQ" name="getEdgesByLatestReleaseTime" specification="_5KmmS9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-AdO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-AtO4Ee2O0cjNcmYJpQ" name="getEdgesByPeriod" specification="_5KmmTdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-A9O4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-BNO4Ee2O0cjNcmYJpQ" name="getEdgesByDeadline" specification="_5KmmT9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-BdO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-BtO4Ee2O0cjNcmYJpQ" name="getEdgesByPriority" specification="_5Kn0YdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-B9O4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-CNO4Ee2O0cjNcmYJpQ" name="addEdges" specification="_5Ra_8NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-CdO4Ee2O0cjNcmYJpQ" name="edges" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-CtO4Ee2O0cjNcmYJpQ" name="addEdge" specification="_5QRwedO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-C9O4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-DNO4Ee2O0cjNcmYJpQ" name="increaseEdgePhases" specification="_5Kn0Y9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-DdO4Ee2O0cjNcmYJpQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-DtO4Ee2O0cjNcmYJpQ" name="updatePriorityAndRelease" specification="_5Kn0ZdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-D9O4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-ENO4Ee2O0cjNcmYJpQ" name="addConflict" specification="_5Kn0Z9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-EdO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-EtO4Ee2O0cjNcmYJpQ" name="addConflicts" specification="_5Ra_89O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-E9O4Ee2O0cjNcmYJpQ" name="conflicts" type="_5QRJYdO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-FNO4Ee2O0cjNcmYJpQ" name="addCoordinator" specification="_5Kn0adO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-FdO4Ee2O0cjNcmYJpQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-FtO4Ee2O0cjNcmYJpQ" name="addCoordinators" specification="_5RbnAdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-F9O4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-GNO4Ee2O0cjNcmYJpQ" name="addScheduleTimes" specification="_5RbnBNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-GdO4Ee2O0cjNcmYJpQ" name="scheduleTime" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-GtO4Ee2O0cjNcmYJpQ" name="getNextScheduleTime" specification="_5Kn0a9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-G9O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sf-HNO4Ee2O0cjNcmYJpQ" type="_5LewCdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-HdO4Ee2O0cjNcmYJpQ" name="getMatchingEndTime" specification="_5Kn0bdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-HtO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sf-H9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-INO4Ee2O0cjNcmYJpQ" name="getNextStartTime" specification="_5Kn0cNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-IdO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sf-ItO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-I9O4Ee2O0cjNcmYJpQ" name="getNextEndTime" specification="_5Kn0c9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-JNO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sf-JdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sf-JtO4Ee2O0cjNcmYJpQ" name="getNumEdges" specification="_5KobcdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sf-J9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglENO4Ee2O0cjNcmYJpQ" name="compareTo" specification="_5QRwfNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglEdO4Ee2O0cjNcmYJpQ" name="obj" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SglEtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglE9O4Ee2O0cjNcmYJpQ" name="conflictExists" specification="_5QSXhNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglFNO4Ee2O0cjNcmYJpQ" name="obj" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SglFdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglFtO4Ee2O0cjNcmYJpQ" name="canCombine" specification="_5QSXh9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglF9O4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SglGNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglGdO4Ee2O0cjNcmYJpQ" name="getDelta" specification="_5Kobc9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglGtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglG9O4Ee2O0cjNcmYJpQ" name="getExecutionDuration" specification="_5KobddO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglHNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglHdO4Ee2O0cjNcmYJpQ" name="getCombinedExecutionDuration" specification="_5QS-kNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglHtO4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SglH9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglINO4Ee2O0cjNcmYJpQ" name="printAll" specification="_5Kobd9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglIdO4Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglItO4Ee2O0cjNcmYJpQ" name="printAll" specification="_5KobedO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglI9O4Ee2O0cjNcmYJpQ" name="printEdges" specification="_5QS-k9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglJNO4Ee2O0cjNcmYJpQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SglJdO4Ee2O0cjNcmYJpQ" name="edges" type="_5LQGgtO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglJtO4Ee2O0cjNcmYJpQ" name="printEdges" specification="_5QS-l9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglJ9O4Ee2O0cjNcmYJpQ" name="edges" type="_5LQGgtO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5KmmQNO4Ee2O0cjNcmYJpQ" name="Activation" visibility="package" method="_5SfW8tO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5KmmQtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5KmmQ9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5KmmQdO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KmmRNO4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KmmRdO4Ee2O0cjNcmYJpQ" name="clone" method="_5SfW-dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QRwc9O4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KmmSdO4Ee2O0cjNcmYJpQ" name="getEdgesByReleaseTime" method="_5SfW-9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4yggNejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QRwdNO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KmmS9O4Ee2O0cjNcmYJpQ" name="getEdgesByLatestReleaseTime" method="_5Sf-ANO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4yggdejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QRwddO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KmmTdO4Ee2O0cjNcmYJpQ" name="getEdgesByPeriod" method="_5Sf-AtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4yggtejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QRwdtO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KmmT9O4Ee2O0cjNcmYJpQ" name="getEdgesByDeadline" method="_5Sf-BNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4ygg9ejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QRwd9O4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0YdO4Ee2O0cjNcmYJpQ" name="getEdgesByPriority" method="_5Sf-BtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4yghNejEe2IjMkQsyA0cQ">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QRweNO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0Y9O4Ee2O0cjNcmYJpQ" name="increaseEdgePhases" method="_5Sf-DNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHkNejEe2IjMkQsyA0cQ">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Kn0ZNO4Ee2O0cjNcmYJpQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0ZdO4Ee2O0cjNcmYJpQ" name="updatePriorityAndRelease" method="_5Sf-DtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHkdejEe2IjMkQsyA0cQ">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_5Kn0ZtO4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0Z9O4Ee2O0cjNcmYJpQ" name="addConflict" method="_5Sf-ENO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Kn0aNO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0adO4Ee2O0cjNcmYJpQ" name="addCoordinator" method="_5Sf-FNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Kn0atO4Ee2O0cjNcmYJpQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0a9O4Ee2O0cjNcmYJpQ" name="getNextScheduleTime" method="_5Sf-GtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHk9ejEe2IjMkQsyA0cQ">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Kn0bNO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QRwe9O4Ee2O0cjNcmYJpQ" type="_5LewCdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0bdO4Ee2O0cjNcmYJpQ" name="getMatchingEndTime" method="_5Sf-HdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHlNejEe2IjMkQsyA0cQ">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Kn0btO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Kn0b9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0cNO4Ee2O0cjNcmYJpQ" name="getNextStartTime" method="_5Sf-INO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHldejEe2IjMkQsyA0cQ">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Kn0cdO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Kn0ctO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kn0c9O4Ee2O0cjNcmYJpQ" name="getNextEndTime" method="_5Sf-I9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHltejEe2IjMkQsyA0cQ">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Kn0dNO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KobcNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KobcdO4Ee2O0cjNcmYJpQ" name="getNumEdges" method="_5Sf-JtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KobctO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kobc9O4Ee2O0cjNcmYJpQ" name="getDelta" method="_5SglGdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHl9ejEe2IjMkQsyA0cQ">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5KobdNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KobddO4Ee2O0cjNcmYJpQ" name="getExecutionDuration" method="_5SglG9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KobdtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kobd9O4Ee2O0cjNcmYJpQ" name="printAll" method="_5SglINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KobeNO4Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KobedO4Ee2O0cjNcmYJpQ" name="printAll" method="_5SglItO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5QRJY9O4Ee2O0cjNcmYJpQ" name="Activation" visibility="package" method="_5SfW9dO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QRwcNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QRwcdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QRJZNO4Ee2O0cjNcmYJpQ" name="elem" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QRJZdO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QRwctO4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QRwedO4Ee2O0cjNcmYJpQ" name="addEdge" method="_5Sf-CtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QRwetO4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QRwfNO4Ee2O0cjNcmYJpQ" name="compareTo" method="_5SglENO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QRwfdO4Ee2O0cjNcmYJpQ" name="obj" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QSXgNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QSXhNO4Ee2O0cjNcmYJpQ" name="conflictExists" method="_5SglE9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QSXhdO4Ee2O0cjNcmYJpQ" name="obj" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QSXhtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QSXh9O4Ee2O0cjNcmYJpQ" name="canCombine" method="_5SglFtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QSXiNO4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QSXidO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QS-kNO4Ee2O0cjNcmYJpQ" name="getCombinedExecutionDuration" method="_5SglHdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QS-kdO4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QS-ktO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QS-k9O4Ee2O0cjNcmYJpQ" name="printEdges" visibility="private" method="_5SglI9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QS-lNO4Ee2O0cjNcmYJpQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QS-ldO4Ee2O0cjNcmYJpQ" name="edges" type="_5LQGgtO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QS-l9O4Ee2O0cjNcmYJpQ" name="printEdges" visibility="private" method="_5SglJtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QS-mNO4Ee2O0cjNcmYJpQ" name="edges" type="_5LQGgtO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ra_8NO4Ee2O0cjNcmYJpQ" name="addEdges" method="_5Sf-CNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Ra_8dO4Ee2O0cjNcmYJpQ" name="edges" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ra_89O4Ee2O0cjNcmYJpQ" name="addConflicts" method="_5Sf-EtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Ra_9NO4Ee2O0cjNcmYJpQ" name="conflicts" type="_5QRJYdO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RbnAdO4Ee2O0cjNcmYJpQ" name="addCoordinators" method="_5Sf-FtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RbnAtO4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RbnBNO4Ee2O0cjNcmYJpQ" name="addScheduleTimes" method="_5Sf-GNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHktejEe2IjMkQsyA0cQ">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RcOENO4Ee2O0cjNcmYJpQ" name="scheduleTime" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KqQoNO4Ee2O0cjNcmYJpQ" name="Activations">
              <generalization xmi:id="_5QUMsNO4Ee2O0cjNcmYJpQ" general="_5KkxENO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SAOwNO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SAOwdO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KqQodO4Ee2O0cjNcmYJpQ" name="BasicPoset">
              <ownedComment xmi:id="_C4zHmNejEe2IjMkQsyA0cQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_5QUzxtO4Ee2O0cjNcmYJpQ" general="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglKNO4Ee2O0cjNcmYJpQ" name="BasicPoset" specification="_5QUzwdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglKdO4Ee2O0cjNcmYJpQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SglKtO4Ee2O0cjNcmYJpQ" type="_5KqQodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5QUzwdO4Ee2O0cjNcmYJpQ" name="BasicPoset" visibility="package" method="_5SglKNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QUzw9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QUzxNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QUzwtO4Ee2O0cjNcmYJpQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QUzxdO4Ee2O0cjNcmYJpQ" type="_5KqQodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5Kq3sNO4Ee2O0cjNcmYJpQ" name="ChannelAnalysis">
              <ownedComment xmi:id="_C4zHmdejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SAOwtO4Ee2O0cjNcmYJpQ" name="program" visibility="private" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TFz4dO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SAOxNO4Ee2O0cjNcmYJpQ" name="programTable" visibility="private" type="_5LNqQNO4Ee2O0cjNcmYJpQ" association="_5TFz5NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SAOxtO4Ee2O0cjNcmYJpQ" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglK9O4Ee2O0cjNcmYJpQ" name="ChannelAnalysis" specification="_5QUzx9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglLNO4Ee2O0cjNcmYJpQ" name="warp" type="_5LxD4NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SglLdO4Ee2O0cjNcmYJpQ" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglLtO4Ee2O0cjNcmYJpQ" name="ChannelAnalysis" specification="_5QVa0dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglL9O4Ee2O0cjNcmYJpQ" name="program" type="_5MMhsNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SglMNO4Ee2O0cjNcmYJpQ" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglMdO4Ee2O0cjNcmYJpQ" name="isChannelConflict" specification="_5Kq3sdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglMtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Kq3sdO4Ee2O0cjNcmYJpQ" name="isChannelConflict" method="_5SglMdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Kq3stO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QUzx9O4Ee2O0cjNcmYJpQ" name="ChannelAnalysis" visibility="package" method="_5SglK9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QUzydO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QUzytO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QUzyNO4Ee2O0cjNcmYJpQ" name="warp" type="_5LxD4NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QVa0NO4Ee2O0cjNcmYJpQ" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QVa0dO4Ee2O0cjNcmYJpQ" name="ChannelAnalysis" visibility="package" method="_5SglLtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QVa09O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QVa1NO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QVa0tO4Ee2O0cjNcmYJpQ" name="program" type="_5MMhsNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QVa1dO4Ee2O0cjNcmYJpQ" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KrewNO4Ee2O0cjNcmYJpQ" name="ChannelVisualization">
              <ownedComment xmi:id="_C4zHmtejEe2IjMkQsyA0cQ">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QVa29O4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SAOyNO4Ee2O0cjNcmYJpQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SAOydO4Ee2O0cjNcmYJpQ" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SA10NO4Ee2O0cjNcmYJpQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SA10dO4Ee2O0cjNcmYJpQ" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SA10tO4Ee2O0cjNcmYJpQ" name="warp" visibility="private" type="_5Lv1wNO4Ee2O0cjNcmYJpQ" association="_5TFz59O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SA11NO4Ee2O0cjNcmYJpQ" name="ca" visibility="private" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" association="_5TFz6tO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglM9O4Ee2O0cjNcmYJpQ" name="ChannelVisualization" specification="_5QVa1tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SglNNO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SglNdO4Ee2O0cjNcmYJpQ" type="_5KrewNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5QVa1tO4Ee2O0cjNcmYJpQ" name="ChannelVisualization" visibility="package" method="_5SglM9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QVa2NO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QVa2dO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QVa19O4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QVa2tO4Ee2O0cjNcmYJpQ" type="_5KrewNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KsF0NO4Ee2O0cjNcmYJpQ" name="Channels">
              <ownedComment xmi:id="_C4zHm9ejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SA12NO4Ee2O0cjNcmYJpQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SA12tO4Ee2O0cjNcmYJpQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SA13NO4Ee2O0cjNcmYJpQ" name="channelsAvailable" visibility="package" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5TGa8dO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMI9O4Ee2O0cjNcmYJpQ" name="Channels" specification="_5Kss4NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMJNO4Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMJdO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMJtO4Ee2O0cjNcmYJpQ" type="_5KsF0NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMJ9O4Ee2O0cjNcmYJpQ" name="getChannelSet" specification="_5Kss5tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMKNO4Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMKdO4Ee2O0cjNcmYJpQ" type="_5QQiUtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMKtO4Ee2O0cjNcmYJpQ" name="addNewChannelSet" specification="_5Kss6dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMK9O4Ee2O0cjNcmYJpQ" name="isEmpty" specification="_5KtT8NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMLNO4Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMLdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMLtO4Ee2O0cjNcmYJpQ" name="removeChannel" specification="_5KtT89O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShML9O4Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMMNO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMMdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMMtO4Ee2O0cjNcmYJpQ" name="addChannel" specification="_5KtT99O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMM9O4Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMNNO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMNdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMNtO4Ee2O0cjNcmYJpQ" name="getNumChannels" specification="_5KtT-9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMN9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Kss4NO4Ee2O0cjNcmYJpQ" name="Channels" visibility="package" method="_5ShMI9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Kss49O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Kss5NO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Kss4dO4Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Kss4tO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Kss5dO4Ee2O0cjNcmYJpQ" type="_5KsF0NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kss5tO4Ee2O0cjNcmYJpQ" name="getChannelSet" method="_5ShMJ9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Kss59O4Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RdcMNO4Ee2O0cjNcmYJpQ" type="_5QQiUtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Kss6dO4Ee2O0cjNcmYJpQ" name="addNewChannelSet" method="_5ShMKtO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5KtT8NO4Ee2O0cjNcmYJpQ" name="isEmpty" method="_5ShMK9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KtT8dO4Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KtT8tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KtT89O4Ee2O0cjNcmYJpQ" name="removeChannel" method="_5ShMLtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KtT9NO4Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KtT9dO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KtT9tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KtT99O4Ee2O0cjNcmYJpQ" name="addChannel" method="_5ShMMtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KtT-NO4Ee2O0cjNcmYJpQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KtT-dO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KtT-tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KtT-9O4Ee2O0cjNcmYJpQ" name="getNumChannels" method="_5ShMNtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KtT_NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_5KsF0dO4Ee2O0cjNcmYJpQ" name="ChannelSet" visibility="private">
                <generalization xmi:id="_5Rc1INO4Ee2O0cjNcmYJpQ" general="_5QQiUtO4Ee2O0cjNcmYJpQ"/>
                <ownedAttribute xmi:id="_5SA11tO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SA119O4Ee2O0cjNcmYJpQ" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SglNtO4Ee2O0cjNcmYJpQ" name="ChannelSet" specification="_5KsF0tO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SglN9O4Ee2O0cjNcmYJpQ" type="_5KsF0dO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMINO4Ee2O0cjNcmYJpQ" name="ChannelSet" specification="_5KsF1tO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5ShMIdO4Ee2O0cjNcmYJpQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_5ShMItO4Ee2O0cjNcmYJpQ" type="_5KsF0dO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_5KsF0tO4Ee2O0cjNcmYJpQ" name="ChannelSet" visibility="private" method="_5SglNtO4Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_5KsF09O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_5KsF1NO4Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_5KsF1dO4Ee2O0cjNcmYJpQ" type="_5KsF0dO4Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5KsF1tO4Ee2O0cjNcmYJpQ" name="ChannelSet" visibility="private" method="_5ShMINO4Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_5KsF2NO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_5KsF2dO4Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_5KsF19O4Ee2O0cjNcmYJpQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_5KsF2tO4Ee2O0cjNcmYJpQ" type="_5KsF0dO4Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5Kt7ANO4Ee2O0cjNcmYJpQ" name="CodeFragment">
              <ownedAttribute xmi:id="_5SBc4tO4Ee2O0cjNcmYJpQ" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SBc49O4Ee2O0cjNcmYJpQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SBc5NO4Ee2O0cjNcmYJpQ" name="edges" visibility="package" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5TGa9NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SBc59O4Ee2O0cjNcmYJpQ" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SCD8dO4Ee2O0cjNcmYJpQ" name="codeFragment" visibility="package" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5TGa99O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SCD9NO4Ee2O0cjNcmYJpQ" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SCD9tO4Ee2O0cjNcmYJpQ" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMONO4Ee2O0cjNcmYJpQ" name="CodeFragment" specification="_5Kt7AdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMOdO4Ee2O0cjNcmYJpQ" type="_5Kt7ANO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMOtO4Ee2O0cjNcmYJpQ" name="CodeFragment" specification="_5RdcMdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMO9O4Ee2O0cjNcmYJpQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMPNO4Ee2O0cjNcmYJpQ" name="edges" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShMPdO4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShMPtO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMP9O4Ee2O0cjNcmYJpQ" type="_5Kt7ANO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMQNO4Ee2O0cjNcmYJpQ" name="getCoordinator" specification="_5KuiENO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMQdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMQtO4Ee2O0cjNcmYJpQ" name="instructions" specification="_5KuiEtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMQ9O4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMRNO4Ee2O0cjNcmYJpQ" name="size" specification="_5KuiFNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMRdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMRtO4Ee2O0cjNcmYJpQ" name="generateCodeFragment" specification="_5KuiFtO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMR9O4Ee2O0cjNcmYJpQ" name="getBaseInstruction" specification="_5KvJINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMSNO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMSdO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMStO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMS9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMTNO4Ee2O0cjNcmYJpQ" name="push" specification="_5KvJJdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMTdO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMTtO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMT9O4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMUdO4Ee2O0cjNcmYJpQ" name="pull" specification="_5KvJKtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMUtO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMU9O4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMVNO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMVdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShMVtO4Ee2O0cjNcmYJpQ" name="ifHas" specification="_5KvJL9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShMV9O4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMWNO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMWdO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShMWtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzMNO4Ee2O0cjNcmYJpQ" name="ifNotHas" specification="_5KvwMdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzMdO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShzMtO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShzM9O4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShzNNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzNdO4Ee2O0cjNcmYJpQ" name="wait" specification="_5KvwNtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzNtO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShzN9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzONO4Ee2O0cjNcmYJpQ" name="sleep" specification="_5KvwOdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzOdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzOtO4Ee2O0cjNcmYJpQ" name="reportIfDifferentCoordinators" specification="_5ReDQ9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzO9O4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzPNO4Ee2O0cjNcmYJpQ" name="multipleCoordinators" specification="_5ReqUdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzPdO4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzPtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Kt7AdO4Ee2O0cjNcmYJpQ" name="CodeFragment" visibility="package" method="_5ShMONO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Kt7AtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Kt7A9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C4zHnNejEe2IjMkQsyA0cQ">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Kt7BNO4Ee2O0cjNcmYJpQ" type="_5Kt7ANO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KuiENO4Ee2O0cjNcmYJpQ" name="getCoordinator" method="_5ShMQNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHntejEe2IjMkQsyA0cQ">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_5KuiEdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KuiEtO4Ee2O0cjNcmYJpQ" name="instructions" method="_5ShMQtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHn9ejEe2IjMkQsyA0cQ">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_5ReDQtO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KuiFNO4Ee2O0cjNcmYJpQ" name="size" method="_5ShMRNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zHoNejEe2IjMkQsyA0cQ">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_5KuiFdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KuiFtO4Ee2O0cjNcmYJpQ" name="generateCodeFragment" visibility="private" method="_5ShMRtO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5KvJINO4Ee2O0cjNcmYJpQ" name="getBaseInstruction" visibility="private" method="_5ShMR9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KvJIdO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJItO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJI9O4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJJNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KvJJdO4Ee2O0cjNcmYJpQ" name="push" visibility="private" method="_5ShMTNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KvJJtO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJJ9O4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJKNO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJKdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KvJKtO4Ee2O0cjNcmYJpQ" name="pull" visibility="private" method="_5ShMUdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KvJK9O4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJLNO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJLdO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJLtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KvJL9O4Ee2O0cjNcmYJpQ" name="ifHas" visibility="private" method="_5ShMVtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KvJMNO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJMdO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvJMtO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvwMNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KvwMdO4Ee2O0cjNcmYJpQ" name="ifNotHas" visibility="private" method="_5ShzMNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KvwMtO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvwM9O4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvwNNO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvwNdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KvwNtO4Ee2O0cjNcmYJpQ" name="wait" method="_5ShzNdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KvwN9O4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5KvwONO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5KvwOdO4Ee2O0cjNcmYJpQ" name="sleep" isStatic="true" method="_5ShzONO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KvwOtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RdcMdO4Ee2O0cjNcmYJpQ" name="CodeFragment" visibility="package" method="_5ShMOtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RdcNtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RdcN9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C4zHndejEe2IjMkQsyA0cQ">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RdcMtO4Ee2O0cjNcmYJpQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RdcM9O4Ee2O0cjNcmYJpQ" name="edges" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RdcNNO4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RdcNdO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RdcONO4Ee2O0cjNcmYJpQ" type="_5Kt7ANO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5ReDQ9O4Ee2O0cjNcmYJpQ" name="reportIfDifferentCoordinators" visibility="private" method="_5ShzOtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ReDRNO4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5ReqUdO4Ee2O0cjNcmYJpQ" name="multipleCoordinators" visibility="private" method="_5ShzPNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ReqUtO4Ee2O0cjNcmYJpQ" name="coordinators" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ReqU9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KwXQNO4Ee2O0cjNcmYJpQ" name="CombinedActivation">
              <generalization xmi:id="_5QX3FNO4Ee2O0cjNcmYJpQ" general="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
              <interfaceRealization xmi:id="_5RfRYNO4Ee2O0cjNcmYJpQ" client="_5KwXQNO4Ee2O0cjNcmYJpQ" supplier="_5RaY4dO4Ee2O0cjNcmYJpQ" contract="_5RaY4dO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzP9O4Ee2O0cjNcmYJpQ" name="CombinedActivation" specification="_5Kw-UNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzQNO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShzQdO4Ee2O0cjNcmYJpQ" type="_5KwXQNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzQtO4Ee2O0cjNcmYJpQ" name="CombinedActivation" specification="_5QXQANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzQ9O4Ee2O0cjNcmYJpQ" name="elem" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzRNO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShzRdO4Ee2O0cjNcmYJpQ" type="_5KwXQNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzRtO4Ee2O0cjNcmYJpQ" name="CombinedActivation" specification="_5QXQBtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzR9O4Ee2O0cjNcmYJpQ" name="priorEntry" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzSNO4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzSdO4Ee2O0cjNcmYJpQ" type="_5KwXQNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzStO4Ee2O0cjNcmYJpQ" name="canCombine" specification="_5QXQDNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzS9O4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzTNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Kw-UNO4Ee2O0cjNcmYJpQ" name="CombinedActivation" visibility="package" method="_5ShzP9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Kw-UtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Kw-U9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Kw-UdO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Kw-VNO4Ee2O0cjNcmYJpQ" type="_5KwXQNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QXQANO4Ee2O0cjNcmYJpQ" name="CombinedActivation" visibility="package" method="_5ShzQtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QXQA9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QXQBNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QXQAdO4Ee2O0cjNcmYJpQ" name="elem" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QXQAtO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QXQBdO4Ee2O0cjNcmYJpQ" type="_5KwXQNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QXQBtO4Ee2O0cjNcmYJpQ" name="CombinedActivation" visibility="package" method="_5ShzRtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QXQCdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QXQCtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QXQB9O4Ee2O0cjNcmYJpQ" name="priorEntry" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QXQCNO4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QXQC9O4Ee2O0cjNcmYJpQ" type="_5KwXQNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QXQDNO4Ee2O0cjNcmYJpQ" name="canCombine" method="_5ShzStO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QXQDdO4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QX3ENO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KxlYNO4Ee2O0cjNcmYJpQ" name="CommunicationGraph">
              <ownedComment xmi:id="_C4zHodejEe2IjMkQsyA0cQ">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QYeKtO4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SCrANO4Ee2O0cjNcmYJpQ" name="wfm" visibility="package" type="_5K3E8NO4Ee2O0cjNcmYJpQ" association="_5TGa-tO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SCrAtO4Ee2O0cjNcmYJpQ" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SCrBNO4Ee2O0cjNcmYJpQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SCrBtO4Ee2O0cjNcmYJpQ" name="workLoad" visibility="package" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5THCAdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzTdO4Ee2O0cjNcmYJpQ" name="CommunicationGraph" specification="_5QX3FdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzTtO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzT9O4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzUNO4Ee2O0cjNcmYJpQ" type="_5KxlYNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzUdO4Ee2O0cjNcmYJpQ" name="CommunicationGraph" specification="_5QYeINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzUtO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzU9O4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5ShzVNO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5ShzVdO4Ee2O0cjNcmYJpQ" type="_5KxlYNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzVtO4Ee2O0cjNcmYJpQ" name="createHeader" specification="_5KxlYdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzV9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzWNO4Ee2O0cjNcmYJpQ" name="createFooter" specification="_5KyMcdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzWdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzWtO4Ee2O0cjNcmYJpQ" name="visualization" specification="_5KyMddO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzW9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5ShzXNO4Ee2O0cjNcmYJpQ" name="createWarpFileContent" specification="_5KyMedO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5ShzXdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5KxlYdO4Ee2O0cjNcmYJpQ" name="createHeader" method="_5ShzVtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QYeJ9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KyMcdO4Ee2O0cjNcmYJpQ" name="createFooter" method="_5ShzWNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QYeKNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KyMddO4Ee2O0cjNcmYJpQ" name="visualization" method="_5ShzWtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QYeKdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5KyMedO4Ee2O0cjNcmYJpQ" name="createWarpFileContent" method="_5ShzXNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5KyMetO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QX3FdO4Ee2O0cjNcmYJpQ" name="CommunicationGraph" method="_5ShzTdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QX3GNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QX3GdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QX3FtO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QX3F9O4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QX3GtO4Ee2O0cjNcmYJpQ" type="_5KxlYNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QYeINO4Ee2O0cjNcmYJpQ" name="CommunicationGraph" method="_5ShzUdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QYeJNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QYeJdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QYeIdO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QYeItO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QYeI9O4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QYeJtO4Ee2O0cjNcmYJpQ" type="_5KxlYNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KyzgNO4Ee2O0cjNcmYJpQ" name="ConnectivityPoset">
              <ownedComment xmi:id="_C4zuoNejEe2IjMkQsyA0cQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_5QZFMNO4Ee2O0cjNcmYJpQ" general="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaQNO4Ee2O0cjNcmYJpQ" name="ConnectivityPoset" specification="_5QYeK9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaQdO4Ee2O0cjNcmYJpQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SiaQtO4Ee2O0cjNcmYJpQ" type="_5KyzgNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaQ9O4Ee2O0cjNcmYJpQ" name="findCoordinator" specification="_5RfRYtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaRNO4Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SiaRdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5QYeK9O4Ee2O0cjNcmYJpQ" name="ConnectivityPoset" visibility="package" method="_5SiaQNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QYeLdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QYeLtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QYeLNO4Ee2O0cjNcmYJpQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QYeL9O4Ee2O0cjNcmYJpQ" type="_5KyzgNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RfRYtO4Ee2O0cjNcmYJpQ" name="findCoordinator" visibility="protected" method="_5SiaQ9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RfRY9O4Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rf4cNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5KzakNO4Ee2O0cjNcmYJpQ" name="DeadlineComparator">
              <interfaceRealization xmi:id="_5Rf4ddO4Ee2O0cjNcmYJpQ" client="_5KzakNO4Ee2O0cjNcmYJpQ" supplier="_5QZFMdO4Ee2O0cjNcmYJpQ" contract="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaRtO4Ee2O0cjNcmYJpQ" name="compare" specification="_5RgfgtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaR9O4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SiaSNO4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SiaSdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5RgfgtO4Ee2O0cjNcmYJpQ" name="compare" method="_5SiaRtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Rgfg9O4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RgfhNO4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RgfhdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K0BoNO4Ee2O0cjNcmYJpQ" name="Description">
              <ownedComment xmi:id="_C4zuodejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5RhGkNO4Ee2O0cjNcmYJpQ" general="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SCrCNO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SCrCdO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaStO4Ee2O0cjNcmYJpQ" name="Description" specification="_5K0BodO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaS9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaTNO4Ee2O0cjNcmYJpQ" name="Description" specification="_5K0BpdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaTdO4Ee2O0cjNcmYJpQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaTtO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaT9O4Ee2O0cjNcmYJpQ" name="toString" specification="_5K0BqtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaUdO4Ee2O0cjNcmYJpQ" name="main" specification="_5K0os9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaUtO4Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SiaU9O4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.println(&quot;test&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5K0BodO4Ee2O0cjNcmYJpQ" name="Description" method="_5SiaStO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K0BotO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K0Bo9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5K0BpNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K0BpdO4Ee2O0cjNcmYJpQ" name="Description" method="_5SiaTNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K0Bp9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K0BqNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5K0BptO4Ee2O0cjNcmYJpQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K0BqdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K0BqtO4Ee2O0cjNcmYJpQ" name="toString" method="_5SiaT9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K0Bq9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K0os9O4Ee2O0cjNcmYJpQ" name="main" isStatic="true" method="_5SiaUdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K0otNO4Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5K0otdO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K0ot9O4Ee2O0cjNcmYJpQ" name="Edge">
              <generalization xmi:id="_5QZsRtO4Ee2O0cjNcmYJpQ" general="_5L8qENO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SDSENO4Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SDSEdO4Ee2O0cjNcmYJpQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SDSEtO4Ee2O0cjNcmYJpQ" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SDSE9O4Ee2O0cjNcmYJpQ" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SDSFNO4Ee2O0cjNcmYJpQ" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SDSFdO4Ee2O0cjNcmYJpQ" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SDSFtO4Ee2O0cjNcmYJpQ" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SDSF9O4Ee2O0cjNcmYJpQ" name="state" type="_5K1PwNO4Ee2O0cjNcmYJpQ" association="_5S3KZ9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SDSGNO4Ee2O0cjNcmYJpQ" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_5RhGktO4Ee2O0cjNcmYJpQ" client="_5K0ot9O4Ee2O0cjNcmYJpQ" supplier="_5RaY4dO4Ee2O0cjNcmYJpQ" contract="_5RaY4dO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaVNO4Ee2O0cjNcmYJpQ" name="Edge" specification="_5K1PxdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaVdO4Ee2O0cjNcmYJpQ" type="_5K0ot9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaVtO4Ee2O0cjNcmYJpQ" name="Edge" specification="_5K120NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaV9O4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaWNO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaWdO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaWtO4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaW9O4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaXNO4Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaXdO4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaXtO4Ee2O0cjNcmYJpQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SiaX9O4Ee2O0cjNcmYJpQ" type="_5K0ot9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src = src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaYNO4Ee2O0cjNcmYJpQ" name="compareTo" specification="_5QZsQNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaYdO4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SiaYtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaY9O4Ee2O0cjNcmYJpQ" name="toString" specification="_5K123NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaZNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, this.flow, this.src, this.snk);&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaZdO4Ee2O0cjNcmYJpQ" name="print" specification="_5K2d4NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SiaZtO4Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;, headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SiaZ9O4Ee2O0cjNcmYJpQ" name="print" specification="_5K2d5dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5K1PxdO4Ee2O0cjNcmYJpQ" name="Edge" visibility="package" method="_5SiaVNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K1PxtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K1Px9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5K1PyNO4Ee2O0cjNcmYJpQ" type="_5K0ot9O4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K120NO4Ee2O0cjNcmYJpQ" name="Edge" visibility="package" method="_5SiaVtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K122dO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K122tO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5K120dO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K120tO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K1209O4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K121NO4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K121dO4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K121tO4Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K1219O4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K122NO4Ee2O0cjNcmYJpQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K1229O4Ee2O0cjNcmYJpQ" type="_5K0ot9O4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K123NO4Ee2O0cjNcmYJpQ" name="toString" method="_5SiaY9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K123dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K2d4NO4Ee2O0cjNcmYJpQ" name="print" method="_5SiaZdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K2d4dO4Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K2d5dO4Ee2O0cjNcmYJpQ" name="print" method="_5SiaZ9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5QZsQNO4Ee2O0cjNcmYJpQ" name="compareTo" method="_5SiaYNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QZsQdO4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QZsQtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_5K1PwNO4Ee2O0cjNcmYJpQ" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_5K1PwtO4Ee2O0cjNcmYJpQ" name="RELEASED"/>
                <ownedLiteral xmi:id="_5K1Pw9O4Ee2O0cjNcmYJpQ" name="EXECUTING"/>
                <ownedLiteral xmi:id="_5K1PxNO4Ee2O0cjNcmYJpQ" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K3E8NO4Ee2O0cjNcmYJpQ" name="FileManager">
              <ownedComment xmi:id="_C4zuotejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SDSGdO4Ee2O0cjNcmYJpQ" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SDSGtO4Ee2O0cjNcmYJpQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBUNO4Ee2O0cjNcmYJpQ" name="FileManager" specification="_5K3sANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBUdO4Ee2O0cjNcmYJpQ" type="_5K3E8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBUtO4Ee2O0cjNcmYJpQ" name="FileManager" specification="_5K3sBNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBU9O4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBVNO4Ee2O0cjNcmYJpQ" type="_5K3E8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBVdO4Ee2O0cjNcmYJpQ" name="getDocumentsDirectory" specification="_5K3sCdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBVtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBV9O4Ee2O0cjNcmYJpQ" name="getCurrentDirectory" specification="_5K3sC9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBWNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBWdO4Ee2O0cjNcmYJpQ" name="createFile" specification="_5K3sDdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBWtO4Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBW9O4Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBXNO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBXdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBXtO4Ee2O0cjNcmYJpQ" name="createFile" specification="_5K4TENO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBX9O4Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBYNO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBYdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBYtO4Ee2O0cjNcmYJpQ" name="createDirectory" specification="_5K4TFNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBY9O4Ee2O0cjNcmYJpQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBZNO4Ee2O0cjNcmYJpQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBZdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBZtO4Ee2O0cjNcmYJpQ" name="writeFile" specification="_5K4TGNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBZ9O4Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBaNO4Ee2O0cjNcmYJpQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBadO4Ee2O0cjNcmYJpQ" name="readFile" specification="_5K4TG9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBatO4Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBa9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5K3sANO4Ee2O0cjNcmYJpQ" name="FileManager" method="_5SjBUNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K3sAdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K3sAtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C4zuo9ejEe2IjMkQsyA0cQ">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K3sA9O4Ee2O0cjNcmYJpQ" type="_5K3E8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K3sBNO4Ee2O0cjNcmYJpQ" name="FileManager" method="_5SjBUtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K3sBtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K3sB9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5K3sBdO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K3sCNO4Ee2O0cjNcmYJpQ" type="_5K3E8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K3sCdO4Ee2O0cjNcmYJpQ" name="getDocumentsDirectory" method="_5SjBVdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K3sCtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K3sC9O4Ee2O0cjNcmYJpQ" name="getCurrentDirectory" method="_5SjBV9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K3sDNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K3sDdO4Ee2O0cjNcmYJpQ" name="createFile" method="_5SjBWdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zupNejEe2IjMkQsyA0cQ">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K3sDtO4Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K3sD9O4Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K3sENO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K3sEdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K4TENO4Ee2O0cjNcmYJpQ" name="createFile" method="_5SjBXtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K4TEdO4Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K4TEtO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K4TE9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K4TFNO4Ee2O0cjNcmYJpQ" name="createDirectory" method="_5SjBYtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K4TFdO4Ee2O0cjNcmYJpQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K4TFtO4Ee2O0cjNcmYJpQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K4TF9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K4TGNO4Ee2O0cjNcmYJpQ" name="writeFile" method="_5SjBZtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K4TGdO4Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K4TGtO4Ee2O0cjNcmYJpQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K4TG9O4Ee2O0cjNcmYJpQ" name="readFile" method="_5SjBadO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K4THNO4Ee2O0cjNcmYJpQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K4THdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K46INO4Ee2O0cjNcmYJpQ" name="Flow">
              <ownedComment xmi:id="_C42x89ejEe2IjMkQsyA0cQ">
                <body>Class that represents&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QcIh9O4Ee2O0cjNcmYJpQ" general="_5L8qENO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SD5IdO4Ee2O0cjNcmYJpQ" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SD5ItO4Ee2O0cjNcmYJpQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SD5I9O4Ee2O0cjNcmYJpQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SD5JNO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SD5JdO4Ee2O0cjNcmYJpQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SD5JtO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SD5J9O4Ee2O0cjNcmYJpQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SD5KNO4Ee2O0cjNcmYJpQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SD5KdO4Ee2O0cjNcmYJpQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SD5KtO4Ee2O0cjNcmYJpQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SD5K9O4Ee2O0cjNcmYJpQ" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SD5LNO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SD5LdO4Ee2O0cjNcmYJpQ" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SD5LtO4Ee2O0cjNcmYJpQ" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SD5MNO4Ee2O0cjNcmYJpQ" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SEgMdO4Ee2O0cjNcmYJpQ" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SEgM9O4Ee2O0cjNcmYJpQ" name="nodes" visibility="package" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5THCBNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SEgNtO4Ee2O0cjNcmYJpQ" name="linkTxAndTotalCost" visibility="package" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5THCB9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SEgOdO4Ee2O0cjNcmYJpQ" name="edges" visibility="package" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5THCCtO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SFHQtO4Ee2O0cjNcmYJpQ" name="nodePredecessor" visibility="package" type="_5LFHYNO4Ee2O0cjNcmYJpQ" association="_5THpEdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SFHRNO4Ee2O0cjNcmYJpQ" name="edgePredecessor" visibility="package" type="_5K0ot9O4Ee2O0cjNcmYJpQ" association="_5THpFNO4Ee2O0cjNcmYJpQ"/>
              <interfaceRealization xmi:id="_5RhtoNO4Ee2O0cjNcmYJpQ" client="_5K46INO4Ee2O0cjNcmYJpQ" supplier="_5RaY4dO4Ee2O0cjNcmYJpQ" contract="_5RaY4dO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBbNO4Ee2O0cjNcmYJpQ" name="Flow" specification="_5K46IdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBbdO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBbtO4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBb9O4Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjBcNO4Ee2O0cjNcmYJpQ" type="_5K46INO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
		this.index = index;&#xD;
		/*&#xD;
		 * Default numTxPerLink is 1 transmission per link. Will be updated based on&#xD;
		 * flow updated based on flow length and reliability parameters&#xD;
		 */&#xD;
		this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1;&#xD;
		this.nodes = new ArrayList&lt;>();&#xD;
		this.edges = new ArrayList&lt;>();&#xD;
		this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
		this.edges = new ArrayList&lt;>();&#xD;
		this.nodePredecessor = null;&#xD;
		this.edgePredecessor = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBcdO4Ee2O0cjNcmYJpQ" name="Flow" specification="_5K5hNdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBctO4Ee2O0cjNcmYJpQ" type="_5K46INO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.index = DEFAULT_INDEX;&#xD;
		/*&#xD;
		 * Default numTxPerLink is 1 transmission per link. Will be updated based on&#xD;
		 * flow updated based on flow length and reliability parameters&#xD;
		 */&#xD;
		this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1;&#xD;
		this.nodes = new ArrayList&lt;>();&#xD;
		this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
		this.edges = new ArrayList&lt;>();&#xD;
		this.nodePredecessor = null;&#xD;
		this.edgePredecessor = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBc9O4Ee2O0cjNcmYJpQ" name="getInitialPriority" specification="_5K5hOdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBdNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBddO4Ee2O0cjNcmYJpQ" name="getIndex" specification="_5K5hO9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBdtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBd9O4Ee2O0cjNcmYJpQ" name="getNumTxPerLink" specification="_5K5hPdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBeNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBedO4Ee2O0cjNcmYJpQ" name="getNodes" specification="_5K5hP9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBetO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBe9O4Ee2O0cjNcmYJpQ" name="getEdges" specification="_5K6IQdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBfNO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBfdO4Ee2O0cjNcmYJpQ" name="addEdge" specification="_5QcIgNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBftO4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBf9O4Ee2O0cjNcmYJpQ" name="addNode" specification="_5QcIgtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBgNO4Ee2O0cjNcmYJpQ" name="node" type="_5LFHYNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjBgdO4Ee2O0cjNcmYJpQ" name="getLinkTxAndTotalCost" specification="_5K6IQ9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjBgtO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoYNO4Ee2O0cjNcmYJpQ" name="setInitialPriority" specification="_5K6IRdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjoYdO4Ee2O0cjNcmYJpQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoYtO4Ee2O0cjNcmYJpQ" name="setIndex" specification="_5K6vUdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjoY9O4Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoZNO4Ee2O0cjNcmYJpQ" name="setNumTxPerLink" specification="_5K6vU9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjoZdO4Ee2O0cjNcmYJpQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoZtO4Ee2O0cjNcmYJpQ" name="setNodes" specification="_5Ri7wNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjoZ9O4Ee2O0cjNcmYJpQ" name="nodes" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoaNO4Ee2O0cjNcmYJpQ" name="setLinkTxAndTotalCost" specification="_5Ri7w9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjoadO4Ee2O0cjNcmYJpQ" name="linkTxAndTotalCost" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoatO4Ee2O0cjNcmYJpQ" name="compareTo" specification="_5QcIhNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sjoa9O4Ee2O0cjNcmYJpQ" name="flow" type="_5K46INO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SjobNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// ascending order (0 is highest priority)&#xD;
		return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjobdO4Ee2O0cjNcmYJpQ" name="toString" specification="_5K6vVdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjobtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5K46IdO4Ee2O0cjNcmYJpQ" name="Flow" visibility="package" method="_5SjBbNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K5hMtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K5hM9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C42x9NejEe2IjMkQsyA0cQ">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K46ItO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K5hMNO4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K5hMdO4Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K5hNNO4Ee2O0cjNcmYJpQ" type="_5K46INO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K5hNdO4Ee2O0cjNcmYJpQ" name="Flow" visibility="package" method="_5SjBcdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K5hNtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K5hN9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C42x9dejEe2IjMkQsyA0cQ">
                  <body>Default constructor Everything is set to the default value, null or an empty&#xD;
	 * ArrayList.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K5hONO4Ee2O0cjNcmYJpQ" type="_5K46INO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K5hOdO4Ee2O0cjNcmYJpQ" name="getInitialPriority" method="_5SjBc9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x9tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the initial priority of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K5hOtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K5hO9O4Ee2O0cjNcmYJpQ" name="getIndex" method="_5SjBddO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x99ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the index of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K5hPNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K5hPdO4Ee2O0cjNcmYJpQ" name="getNumTxPerLink" method="_5SjBd9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x-NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the numTxPerLink&lt;/h1>&#xD;
	 * &#xD;
	 * @return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K5hPtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K5hP9O4Ee2O0cjNcmYJpQ" name="getNodes" method="_5SjBedO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x-dejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns an ArrayList of all the nodes in the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RiUsdO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K6IQdO4Ee2O0cjNcmYJpQ" name="getEdges" method="_5SjBe9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x-tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns an ArrayList of all the edges in the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the edges</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RiUstO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K6IQ9O4Ee2O0cjNcmYJpQ" name="getLinkTxAndTotalCost" method="_5SjBgdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x_dejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the linkTxAndTotalCost ArrayList.&lt;/h1>&#xD;
	 * &#xD;
	 * @return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RiUs9O4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K6IRdO4Ee2O0cjNcmYJpQ" name="setInitialPriority" method="_5SjoYNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x_tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Sets the initialPriority of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K6vUNO4Ee2O0cjNcmYJpQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K6vUdO4Ee2O0cjNcmYJpQ" name="setIndex" method="_5SjoYtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x_9ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Sets the index of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K6vUtO4Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K6vU9O4Ee2O0cjNcmYJpQ" name="setNumTxPerLink" method="_5SjoZNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42yANejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Sets the numTxPerLink of the flow.&lt;/h1>&#xD;
	 * &#xD;
	 * @param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K6vVNO4Ee2O0cjNcmYJpQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K6vVdO4Ee2O0cjNcmYJpQ" name="toString" method="_5SjobdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K6vVtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QcIgNO4Ee2O0cjNcmYJpQ" name="addEdge" method="_5SjBfdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x-9ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Adds an edge to the flow.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Sets the edges predecessor to the current flow edgePredecessor. Then adds the&#xD;
	 * edge to the edge ArrayList. Finally updates the flow attribute&#xD;
	 * edgePredecessor to be the newly added edge.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param edge Edge to add to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QcIgdO4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QcIgtO4Ee2O0cjNcmYJpQ" name="addNode" method="_5SjBf9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x_NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Adds a node to the flow.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Sets the nodes predecessor to the current flow nodePredecessor. Then adds the&#xD;
	 * node to the node ArrayList. Finally updates the flow attribute&#xD;
	 * nodePredecessor to be the newly added node.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param node Node to add to the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QcIg9O4Ee2O0cjNcmYJpQ" name="node" type="_5LFHYNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QcIhNO4Ee2O0cjNcmYJpQ" name="compareTo" method="_5SjoatO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QcIhdO4Ee2O0cjNcmYJpQ" name="flow" type="_5K46INO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QcIhtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ri7wNO4Ee2O0cjNcmYJpQ" name="setNodes" method="_5SjoZtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42yAdejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Overwrites the current list of nodes with a new list of nodes.&lt;/h1>&#xD;
	 * &#xD;
	 * @param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Ri7wdO4Ee2O0cjNcmYJpQ" name="nodes" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ri7w9O4Ee2O0cjNcmYJpQ" name="setLinkTxAndTotalCost" method="_5SjoaNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42yAtejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Overwrites the current linkTxAndTotalCost with a new&#xD;
	 * linkTxAndTotalCost.&lt;/h1>&#xD;
	 * &#xD;
	 * @param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Ri7xNO4Ee2O0cjNcmYJpQ" name="linkTxAndTotalCost" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K79cNO4Ee2O0cjNcmYJpQ" name="FlowMap">
              <ownedComment xmi:id="_C4zuptejEe2IjMkQsyA0cQ">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QcvkNO4Ee2O0cjNcmYJpQ" general="_5KkxENO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SFHRtO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SFHR9O4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K8kgNO4Ee2O0cjNcmYJpQ" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_C4zup9ejEe2IjMkQsyA0cQ">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QdWodO4Ee2O0cjNcmYJpQ" general="_5KkxENO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SFuUNO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SFuUdO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K8kgdO4Ee2O0cjNcmYJpQ" name="GraphViz">
              <ownedComment xmi:id="_C4zuqNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5Qd9uNO4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SFuUtO4Ee2O0cjNcmYJpQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SFuU9O4Ee2O0cjNcmYJpQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SFuVNO4Ee2O0cjNcmYJpQ" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SFuVdO4Ee2O0cjNcmYJpQ" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SFuVtO4Ee2O0cjNcmYJpQ" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SFuWNO4Ee2O0cjNcmYJpQ" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SFuWtO4Ee2O0cjNcmYJpQ" name="wfm" visibility="package" type="_5K3E8NO4Ee2O0cjNcmYJpQ" association="_5THpF9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SFuXNO4Ee2O0cjNcmYJpQ" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SFuXtO4Ee2O0cjNcmYJpQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SGVYdO4Ee2O0cjNcmYJpQ" name="gv" visibility="package" type="_5K8kgdO4Ee2O0cjNcmYJpQ" association="_5TIQIdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sjob9O4Ee2O0cjNcmYJpQ" name="GraphViz" specification="_5QdWo9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjocNO4Ee2O0cjNcmYJpQ" name="wfm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SjocdO4Ee2O0cjNcmYJpQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjoctO4Ee2O0cjNcmYJpQ" type="_5K8kgdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sjoc9O4Ee2O0cjNcmYJpQ" name="GraphViz" specification="_5Qd9sNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjodNO4Ee2O0cjNcmYJpQ" name="wfm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SjoddO4Ee2O0cjNcmYJpQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjodtO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sjod9O4Ee2O0cjNcmYJpQ" type="_5K8kgdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoeNO4Ee2O0cjNcmYJpQ" name="visualization" specification="_5K9LkNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjoedO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoetO4Ee2O0cjNcmYJpQ" name="initializeGraphVizContent" specification="_5K9LlNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sjoe9O4Ee2O0cjNcmYJpQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjofNO4Ee2O0cjNcmYJpQ" name="finalizeGraphVizContent" specification="_5K9LltO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjofdO4Ee2O0cjNcmYJpQ" name="getGraphVizContent" specification="_5K9Ll9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjoftO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sjof9O4Ee2O0cjNcmYJpQ" name="createGraphVizContent" specification="_5K9LmdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjogNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjogdO4Ee2O0cjNcmYJpQ" name="addFlowToGraphViz" specification="_5K9yoNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjogtO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sjog9O4Ee2O0cjNcmYJpQ" name="addSrcNodeToGraphViz" specification="_5K9yotO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjohNO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjohdO4Ee2O0cjNcmYJpQ" name="addSnkNodeToGraphViz" specification="_5K9ypNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjohtO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sjoh9O4Ee2O0cjNcmYJpQ" name="finalizeCurrentFlowInGraphViz" specification="_5K9yptO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SjoiNO4Ee2O0cjNcmYJpQ" name="addNodeName" specification="_5K9yp9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SjoidO4Ee2O0cjNcmYJpQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SjoitO4Ee2O0cjNcmYJpQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5K9LkNO4Ee2O0cjNcmYJpQ" name="visualization" method="_5SjoeNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qd9t9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K9LlNO4Ee2O0cjNcmYJpQ" name="initializeGraphVizContent" method="_5SjoetO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K9LldO4Ee2O0cjNcmYJpQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K9LltO4Ee2O0cjNcmYJpQ" name="finalizeGraphVizContent" method="_5SjofNO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5K9Ll9O4Ee2O0cjNcmYJpQ" name="getGraphVizContent" method="_5SjofdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zuqdejEe2IjMkQsyA0cQ">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K9LmNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K9LmdO4Ee2O0cjNcmYJpQ" name="createGraphVizContent" method="_5Sjof9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K9LmtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K9yoNO4Ee2O0cjNcmYJpQ" name="addFlowToGraphViz" method="_5SjogdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K9yodO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K9yotO4Ee2O0cjNcmYJpQ" name="addSrcNodeToGraphViz" method="_5Sjog9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K9yo9O4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K9ypNO4Ee2O0cjNcmYJpQ" name="addSnkNodeToGraphViz" method="_5SjohdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K9ypdO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5K9yptO4Ee2O0cjNcmYJpQ" name="finalizeCurrentFlowInGraphViz" method="_5Sjoh9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5K9yp9O4Ee2O0cjNcmYJpQ" name="addNodeName" visibility="private" method="_5SjoiNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5K9yqNO4Ee2O0cjNcmYJpQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K9yqdO4Ee2O0cjNcmYJpQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QdWo9O4Ee2O0cjNcmYJpQ" name="GraphViz" visibility="package" method="_5Sjob9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QdWptO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QdWp9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QdWpNO4Ee2O0cjNcmYJpQ" name="wfm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QdWpdO4Ee2O0cjNcmYJpQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QdWqNO4Ee2O0cjNcmYJpQ" type="_5K8kgdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qd9sNO4Ee2O0cjNcmYJpQ" name="GraphViz" visibility="package" method="_5Sjoc9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Qd9tNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Qd9tdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Qd9sdO4Ee2O0cjNcmYJpQ" name="wfm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qd9stO4Ee2O0cjNcmYJpQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qd9s9O4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qd9ttO4Ee2O0cjNcmYJpQ" type="_5K8kgdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K-ZsNO4Ee2O0cjNcmYJpQ" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_C4zuqtejEe2IjMkQsyA0cQ">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_5RkJ4NO4Ee2O0cjNcmYJpQ" general="_5QfL0dO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SGVY9O4Ee2O0cjNcmYJpQ" name="gv" visibility="package" type="_5K8kgdO4Ee2O0cjNcmYJpQ" association="_5TIQJNO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPcNO4Ee2O0cjNcmYJpQ" name="GraphVizListener" specification="_5QfL19O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPcdO4Ee2O0cjNcmYJpQ" name="gv" type="_5K8kgdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SkPctO4Ee2O0cjNcmYJpQ" type="_5K-ZsNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPc9O4Ee2O0cjNcmYJpQ" name="buildGraphViz" specification="_5Qfy4dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPdNO4Ee2O0cjNcmYJpQ" name="gv" type="_5K8kgdO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPddO4Ee2O0cjNcmYJpQ" name="enterWarpName" specification="_5Qfy5dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPdtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Qfy49O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPd9O4Ee2O0cjNcmYJpQ" name="exitWarp" specification="_5QgZ8dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPeNO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Qfy6tO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPedO4Ee2O0cjNcmYJpQ" name="enterFlowName" specification="_5QgZ-NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPetO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QgZ9tO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPe9O4Ee2O0cjNcmYJpQ" name="exitSrcNode" specification="_5QhBAtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPfNO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhBANO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPfdO4Ee2O0cjNcmYJpQ" name="exitSnkNode" specification="_5QhBCdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPftO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhBB9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPf9O4Ee2O0cjNcmYJpQ" name="exitFlow" specification="_5QhoFdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPgNO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhoE9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5QfL19O4Ee2O0cjNcmYJpQ" name="GraphVizListener" visibility="private" method="_5SkPcNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QfL2dO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QfL2tO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QfL2NO4Ee2O0cjNcmYJpQ" name="gv" type="_5K8kgdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qfy4NO4Ee2O0cjNcmYJpQ" type="_5K-ZsNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qfy4dO4Ee2O0cjNcmYJpQ" name="buildGraphViz" isStatic="true" method="_5SkPc9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qfy4tO4Ee2O0cjNcmYJpQ" name="gv" type="_5K8kgdO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qfy5dO4Ee2O0cjNcmYJpQ" name="enterWarpName" method="_5SkPddO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qfy5tO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Qfy49O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QgZ8dO4Ee2O0cjNcmYJpQ" name="exitWarp" method="_5SkPd9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QgZ8tO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Qfy6tO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QgZ-NO4Ee2O0cjNcmYJpQ" name="enterFlowName" method="_5SkPedO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QgZ-dO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QgZ9tO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QhBAtO4Ee2O0cjNcmYJpQ" name="exitSrcNode" method="_5SkPe9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QhBA9O4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhBANO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QhBCdO4Ee2O0cjNcmYJpQ" name="exitSnkNode" method="_5SkPfdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QhBCtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhBB9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QhoFdO4Ee2O0cjNcmYJpQ" name="exitFlow" method="_5SkPf9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QhoFtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhoE9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5K_n0NO4Ee2O0cjNcmYJpQ" name="GuiVisualization">
              <ownedComment xmi:id="_C4zuq9ejEe2IjMkQsyA0cQ">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SGVZdO4Ee2O0cjNcmYJpQ" name="frame" visibility="package" type="_5QiPItO4Ee2O0cjNcmYJpQ" association="_5TIQJ9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SG8cNO4Ee2O0cjNcmYJpQ" name="jtable" visibility="package" type="_5QiPJtO4Ee2O0cjNcmYJpQ" association="_5TIQKtO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPgdO4Ee2O0cjNcmYJpQ" name="GuiVisualization" specification="_5K_n0dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPgtO4Ee2O0cjNcmYJpQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SkPg9O4Ee2O0cjNcmYJpQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SkPhNO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SkPhdO4Ee2O0cjNcmYJpQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SkPhtO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SkPh9O4Ee2O0cjNcmYJpQ" type="_5K_n0NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPiNO4Ee2O0cjNcmYJpQ" name="setVisible" specification="_5K_n29O4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPidO4Ee2O0cjNcmYJpQ" name="resizeColumnWidth" specification="_5RkJ4dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPitO4Ee2O0cjNcmYJpQ" name="table" type="_5QiPJtO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5K_n0dO4Ee2O0cjNcmYJpQ" name="GuiVisualization" method="_5SkPgdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5K_n1dO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5K_n1tO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C4zurNejEe2IjMkQsyA0cQ">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_5K_n0tO4Ee2O0cjNcmYJpQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K_n09O4Ee2O0cjNcmYJpQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5K_n2NO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K_n1NO4Ee2O0cjNcmYJpQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5K_n2dO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5K_n19O4Ee2O0cjNcmYJpQ" type="_5K_n0NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5K_n29O4Ee2O0cjNcmYJpQ" name="setVisible" method="_5SkPiNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C4zurdejEe2IjMkQsyA0cQ">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_5RkJ4dO4Ee2O0cjNcmYJpQ" name="resizeColumnWidth" visibility="private" method="_5SkPidO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RkJ4tO4Ee2O0cjNcmYJpQ" name="table" type="_5QiPJtO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LAO4NO4Ee2O0cjNcmYJpQ" name="InputGraphFile">
              <ownedComment xmi:id="_C4zurtejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SG8ctO4Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SG8c9O4Ee2O0cjNcmYJpQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SG8dNO4Ee2O0cjNcmYJpQ" name="wfm" visibility="private" type="_5K3E8NO4Ee2O0cjNcmYJpQ" association="_5TI3MdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SG8dtO4Ee2O0cjNcmYJpQ" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SG8d9O4Ee2O0cjNcmYJpQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SG8edO4Ee2O0cjNcmYJpQ" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SG8etO4Ee2O0cjNcmYJpQ" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPi9O4Ee2O0cjNcmYJpQ" name="InputGraphFile" specification="_5QjdRNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPjNO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SkPjdO4Ee2O0cjNcmYJpQ" type="_5LAO4NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPjtO4Ee2O0cjNcmYJpQ" name="InputGraphFile" specification="_5QjdSdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPj9O4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SkPkNO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SkPkdO4Ee2O0cjNcmYJpQ" type="_5LAO4NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPktO4Ee2O0cjNcmYJpQ" name="setGraphFileName" specification="_5LAO4dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPk9O4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPlNO4Ee2O0cjNcmYJpQ" name="verifyGraphFileName" specification="_5LA18NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPldO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SkPltO4Ee2O0cjNcmYJpQ" name="readGraphFile" specification="_5LA18tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SkPl9O4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SkPmNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2gNO4Ee2O0cjNcmYJpQ" name="getInputGraphFileName" specification="_5LA19dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2gdO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2gtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2g9O4Ee2O0cjNcmYJpQ" name="readGraphFileContents" specification="_5LA1-NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2hNO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2hdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2htO4Ee2O0cjNcmYJpQ" name="printVerboseMessage" specification="_5LA1-9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2h9O4Ee2O0cjNcmYJpQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2iNO4Ee2O0cjNcmYJpQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2idO4Ee2O0cjNcmYJpQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LAO4dO4Ee2O0cjNcmYJpQ" name="setGraphFileName" visibility="private" method="_5SkPktO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LAO4tO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LA18NO4Ee2O0cjNcmYJpQ" name="verifyGraphFileName" visibility="private" method="_5SkPlNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LA18dO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LA18tO4Ee2O0cjNcmYJpQ" name="readGraphFile" method="_5SkPltO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LA189O4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LA19NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LA19dO4Ee2O0cjNcmYJpQ" name="getInputGraphFileName" visibility="private" method="_5Sk2gNO4Ee2O0cjNcmYJpQ" raisedException="_5Rkw8NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LA19tO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LA199O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LA1-NO4Ee2O0cjNcmYJpQ" name="readGraphFileContents" visibility="private" method="_5Sk2g9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LA1-dO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LA1-tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LA1-9O4Ee2O0cjNcmYJpQ" name="printVerboseMessage" visibility="private" method="_5Sk2htO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LA1_NO4Ee2O0cjNcmYJpQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LA1_dO4Ee2O0cjNcmYJpQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LA1_tO4Ee2O0cjNcmYJpQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QjdRNO4Ee2O0cjNcmYJpQ" name="InputGraphFile" method="_5SkPi9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QjdRtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QjdR9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QjdRdO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QjdSNO4Ee2O0cjNcmYJpQ" type="_5LAO4NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QjdSdO4Ee2O0cjNcmYJpQ" name="InputGraphFile" method="_5SkPjtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QkEUtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QkEU9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QkEUNO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QkEUdO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QkEVNO4Ee2O0cjNcmYJpQ" type="_5LAO4NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LBdANO4Ee2O0cjNcmYJpQ" name="InstructionTimeSlot">
              <generalization xmi:id="_5QkEVdO4Ee2O0cjNcmYJpQ" general="_5LW0M9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SHjgNO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SHjgdO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2itO4Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" specification="_5LBdAdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2i9O4Ee2O0cjNcmYJpQ" type="_5LBdANO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2jNO4Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" specification="_5LCEEtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2jdO4Ee2O0cjNcmYJpQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2jtO4Ee2O0cjNcmYJpQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2j9O4Ee2O0cjNcmYJpQ" type="_5LBdANO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2kNO4Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" specification="_5LCEGNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2kdO4Ee2O0cjNcmYJpQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Sk2ktO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2k9O4Ee2O0cjNcmYJpQ" type="_5LBdANO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LBdAdO4Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" method="_5Sk2itO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LBdAtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LCEENO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LCEEdO4Ee2O0cjNcmYJpQ" type="_5LBdANO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LCEEtO4Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" visibility="package" method="_5Sk2jNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LCEFdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LCEFtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LCEE9O4Ee2O0cjNcmYJpQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LCEFNO4Ee2O0cjNcmYJpQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LCEF9O4Ee2O0cjNcmYJpQ" type="_5LBdANO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LCEGNO4Ee2O0cjNcmYJpQ" name="InstructionTimeSlot" visibility="package" method="_5Sk2kNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LCEGtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LCEG9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LCEGdO4Ee2O0cjNcmYJpQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5LCEHdO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LCEHNO4Ee2O0cjNcmYJpQ" type="_5LBdANO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LCEHtO4Ee2O0cjNcmYJpQ" name="LatencyAnalysis">
              <ownedComment xmi:id="_C40VsNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SHjgtO4Ee2O0cjNcmYJpQ" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SHjg9O4Ee2O0cjNcmYJpQ" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SHjhdO4Ee2O0cjNcmYJpQ" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SHjh9O4Ee2O0cjNcmYJpQ" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SHjiNO4Ee2O0cjNcmYJpQ" name="latencyReport" visibility="private" type="_5K0BoNO4Ee2O0cjNcmYJpQ" association="_5TI3NNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SHjitO4Ee2O0cjNcmYJpQ" name="program" visibility="private" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TI3N9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SHjjNO4Ee2O0cjNcmYJpQ" name="workload" visibility="private" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5TI3OtO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SIKkdO4Ee2O0cjNcmYJpQ" name="programTable" visibility="private" type="_5LNqQNO4Ee2O0cjNcmYJpQ" association="_5TJeQdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SIKk9O4Ee2O0cjNcmYJpQ" name="nodeIndex" visibility="private" type="_5QP7QNO4Ee2O0cjNcmYJpQ" association="_5TJeRNO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2lNO4Ee2O0cjNcmYJpQ" name="LatencyAnalysis" specification="_5QkrYtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2ldO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sk2ltO4Ee2O0cjNcmYJpQ" type="_5LCEHtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2l9O4Ee2O0cjNcmYJpQ" name="LatencyAnalysis" specification="_5QkrZ9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2mNO4Ee2O0cjNcmYJpQ" name="program" type="_5MMhsNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sk2mdO4Ee2O0cjNcmYJpQ" type="_5LCEHtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2mtO4Ee2O0cjNcmYJpQ" name="latencyReport" specification="_5LCrINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2m9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2nNO4Ee2O0cjNcmYJpQ" name="numMatchingTx" specification="_5LCrIdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2ndO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2ntO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2n9O4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2oNO4Ee2O0cjNcmYJpQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2odO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LCrINO4Ee2O0cjNcmYJpQ" name="latencyReport" method="_5Sk2mtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QkrbNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LCrIdO4Ee2O0cjNcmYJpQ" name="numMatchingTx" method="_5Sk2nNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LCrItO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LCrI9O4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LCrJNO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LCrJdO4Ee2O0cjNcmYJpQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LCrJtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QkrYtO4Ee2O0cjNcmYJpQ" name="LatencyAnalysis" visibility="package" method="_5Sk2lNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QkrZNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QkrZdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QkrY9O4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QkrZtO4Ee2O0cjNcmYJpQ" type="_5LCEHtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QkrZ9O4Ee2O0cjNcmYJpQ" name="LatencyAnalysis" visibility="package" method="_5Sk2l9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QkradO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QkratO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QkraNO4Ee2O0cjNcmYJpQ" name="program" type="_5MMhsNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qkra9O4Ee2O0cjNcmYJpQ" type="_5LCEHtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LDSMNO4Ee2O0cjNcmYJpQ" name="LatencyVisualization">
              <ownedComment xmi:id="_C40VsdejEe2IjMkQsyA0cQ">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QlSddO4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SIKltO4Ee2O0cjNcmYJpQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SIKl9O4Ee2O0cjNcmYJpQ" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SIKmNO4Ee2O0cjNcmYJpQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SIKmdO4Ee2O0cjNcmYJpQ" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SIKmtO4Ee2O0cjNcmYJpQ" name="warp" visibility="private" type="_5Lv1wNO4Ee2O0cjNcmYJpQ" association="_5TJeR9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SIxodO4Ee2O0cjNcmYJpQ" name="la" visibility="private" type="_5LCEHtO4Ee2O0cjNcmYJpQ" association="_5TKFUdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2otO4Ee2O0cjNcmYJpQ" name="LatencyVisualization" specification="_5QlScNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2o9O4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sk2pNO4Ee2O0cjNcmYJpQ" type="_5LDSMNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5QlScNO4Ee2O0cjNcmYJpQ" name="LatencyVisualization" visibility="package" method="_5Sk2otO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QlSctO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QlSc9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QlScdO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QlSdNO4Ee2O0cjNcmYJpQ" type="_5LDSMNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LD5QNO4Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_5RlYANO4Ee2O0cjNcmYJpQ" client="_5LD5QNO4Ee2O0cjNcmYJpQ" supplier="_5QZFMdO4Ee2O0cjNcmYJpQ" contract="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2pdO4Ee2O0cjNcmYJpQ" name="compare" specification="_5Rl_ENO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2ptO4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sk2p9O4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sk2qNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Rl_ENO4Ee2O0cjNcmYJpQ" name="compare" method="_5Sk2pdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Rl_EdO4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rl_EtO4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rl_E9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LEgUNO4Ee2O0cjNcmYJpQ" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_5Rl_F9O4Ee2O0cjNcmYJpQ" client="_5LEgUNO4Ee2O0cjNcmYJpQ" supplier="_5QZFMdO4Ee2O0cjNcmYJpQ" contract="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2qdO4Ee2O0cjNcmYJpQ" name="compare" specification="_5RmmINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2qtO4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sk2q9O4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sk2rNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5RmmINO4Ee2O0cjNcmYJpQ" name="compare" method="_5Sk2qdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RmmIdO4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RmmItO4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RmmI9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LFHYNO4Ee2O0cjNcmYJpQ" name="Node">
              <generalization xmi:id="_5QmgktO4Ee2O0cjNcmYJpQ" general="_5L8qENO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SIxo9O4Ee2O0cjNcmYJpQ" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SIxpNO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SIxpdO4Ee2O0cjNcmYJpQ" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SIxptO4Ee2O0cjNcmYJpQ" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SIxp9O4Ee2O0cjNcmYJpQ" name="edges" type="_5QQiUNO4Ee2O0cjNcmYJpQ" isReadOnly="true" association="_5TKFVNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SJYsNO4Ee2O0cjNcmYJpQ" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SJYsdO4Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_5RmmJ9O4Ee2O0cjNcmYJpQ" client="_5LFHYNO4Ee2O0cjNcmYJpQ" supplier="_5RaY4dO4Ee2O0cjNcmYJpQ" contract="_5RaY4dO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sk2rdO4Ee2O0cjNcmYJpQ" name="Node" specification="_5LFHYdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sk2rtO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2r9O4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2sNO4Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sk2sdO4Ee2O0cjNcmYJpQ" type="_5LFHYNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		setPriority(priority);&#xD;
		this.index = index;&#xD;
		this.channel = DEFAULT_CHANNEL;&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldkNO4Ee2O0cjNcmYJpQ" name="compareTo" specification="_5Ql5gNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldkdO4Ee2O0cjNcmYJpQ" name="node" type="_5LFHYNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SldktO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sldk9O4Ee2O0cjNcmYJpQ" name="toString" specification="_5LFucNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldlNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldldO4Ee2O0cjNcmYJpQ" name="addEdge" specification="_5QmgkNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldltO4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sldl9O4Ee2O0cjNcmYJpQ" name="addConflict" specification="_5LFuddO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldmNO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldmdO4Ee2O0cjNcmYJpQ" name="numEdges" specification="_5LFud9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldmtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sldm9O4Ee2O0cjNcmYJpQ" name="print" specification="_5LFuedO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldnNO4Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;, headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldndO4Ee2O0cjNcmYJpQ" name="print" specification="_5LGVgNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge : edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LFHYdO4Ee2O0cjNcmYJpQ" name="Node" visibility="package" method="_5Sk2rdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LFHZdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LFHZtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LFHYtO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LFHY9O4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LFHZNO4Ee2O0cjNcmYJpQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LFHZ9O4Ee2O0cjNcmYJpQ" type="_5LFHYNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LFucNO4Ee2O0cjNcmYJpQ" name="toString" method="_5Sldk9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LFucdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LFuddO4Ee2O0cjNcmYJpQ" name="addConflict" method="_5Sldl9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LFudtO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LFud9O4Ee2O0cjNcmYJpQ" name="numEdges" method="_5SldmdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LFueNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LFuedO4Ee2O0cjNcmYJpQ" name="print" method="_5Sldm9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LFuetO4Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LGVgNO4Ee2O0cjNcmYJpQ" name="print" method="_5SldndO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5Ql5gNO4Ee2O0cjNcmYJpQ" name="compareTo" method="_5SldkNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Ql5gdO4Ee2O0cjNcmYJpQ" name="node" type="_5LFHYNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Ql5gtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QmgkNO4Ee2O0cjNcmYJpQ" name="addEdge" method="_5SldldO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QmgkdO4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LG8kNO4Ee2O0cjNcmYJpQ" name="NodeMap">
              <ownedComment xmi:id="_C40VstejEe2IjMkQsyA0cQ">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5Qmgk9O4Ee2O0cjNcmYJpQ" general="_5KkxENO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SJYstO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SJYs9O4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LG8kdO4Ee2O0cjNcmYJpQ" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_C40Vs9ejEe2IjMkQsyA0cQ">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QnHptO4Ee2O0cjNcmYJpQ" general="_5LaekdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldntO4Ee2O0cjNcmYJpQ" name="NonPreemptiveSchedule" specification="_5QnHoNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sldn9O4Ee2O0cjNcmYJpQ" name="poset" type="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SldoNO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SldodO4Ee2O0cjNcmYJpQ" type="_5LG8kdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5QnHoNO4Ee2O0cjNcmYJpQ" name="NonPreemptiveSchedule" visibility="package" method="_5SldntO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QnHo9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QnHpNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QnHodO4Ee2O0cjNcmYJpQ" name="poset" type="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QnHotO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QnHpdO4Ee2O0cjNcmYJpQ" type="_5LG8kdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LG8ktO4Ee2O0cjNcmYJpQ" name="NotImplentedVisualization">
              <generalization xmi:id="_5QnHqNO4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SJYtNO4Ee2O0cjNcmYJpQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SJYtdO4Ee2O0cjNcmYJpQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SJYttO4Ee2O0cjNcmYJpQ" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SJYt9O4Ee2O0cjNcmYJpQ" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SJYuNO4Ee2O0cjNcmYJpQ" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SJYudO4Ee2O0cjNcmYJpQ" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldotO4Ee2O0cjNcmYJpQ" name="NotImplentedVisualization" specification="_5LHjoNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sldo9O4Ee2O0cjNcmYJpQ" type="_5LG8ktO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldpNO4Ee2O0cjNcmYJpQ" name="NotImplentedVisualization" specification="_5LHjpNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldpdO4Ee2O0cjNcmYJpQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SldptO4Ee2O0cjNcmYJpQ" type="_5LG8ktO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sldp9O4Ee2O0cjNcmYJpQ" name="visualization" specification="_5LHjqdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldqNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LHjoNO4Ee2O0cjNcmYJpQ" name="NotImplentedVisualization" visibility="package" method="_5SldotO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LHjodO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LHjotO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LHjo9O4Ee2O0cjNcmYJpQ" type="_5LG8ktO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LHjpNO4Ee2O0cjNcmYJpQ" name="NotImplentedVisualization" visibility="package" method="_5SldpNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LHjptO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LHjp9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LHjpdO4Ee2O0cjNcmYJpQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LHjqNO4Ee2O0cjNcmYJpQ" type="_5LG8ktO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LHjqdO4Ee2O0cjNcmYJpQ" name="visualization" method="_5Sldp9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QnHp9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LIKsNO4Ee2O0cjNcmYJpQ" name="PeriodComparator">
              <interfaceRealization xmi:id="_5RnNMNO4Ee2O0cjNcmYJpQ" client="_5LIKsNO4Ee2O0cjNcmYJpQ" supplier="_5QZFMdO4Ee2O0cjNcmYJpQ" contract="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldqdO4Ee2O0cjNcmYJpQ" name="compare" specification="_5Rn0QdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldqtO4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sldq9O4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SldrNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Rn0QdO4Ee2O0cjNcmYJpQ" name="compare" method="_5SldqdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Rn0QtO4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rn0Q9O4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rn0RNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LIxwNO4Ee2O0cjNcmYJpQ" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_C42K7tejEe2IjMkQsyA0cQ">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SJYutO4Ee2O0cjNcmYJpQ" name="activations" visibility="private" type="_5KqQoNO4Ee2O0cjNcmYJpQ" association="_5TKFV9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SJ_wNO4Ee2O0cjNcmYJpQ" name="workload" visibility="private" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5TKFWtO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SJ_wtO4Ee2O0cjNcmYJpQ" name="flows" visibility="protected" type="_5K46INO4Ee2O0cjNcmYJpQ" association="_5TKsYdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5SJ_xNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5SJ_xdO4Ee2O0cjNcmYJpQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SJ_w9O4Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SJ_x9O4Ee2O0cjNcmYJpQ" name="nodes" visibility="private" type="_5LFHYNO4Ee2O0cjNcmYJpQ" association="_5TKsZNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5SJ_ydO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5SJ_ytO4Ee2O0cjNcmYJpQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SJ_yNO4Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SJ_zNO4Ee2O0cjNcmYJpQ" name="nodeMap" visibility="private" type="_5LG8kNO4Ee2O0cjNcmYJpQ" association="_5TKsZ9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SJ_ztO4Ee2O0cjNcmYJpQ" name="priorityQueue" visibility="private" type="_5LQtldO4Ee2O0cjNcmYJpQ" association="_5TLTcNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SKm0tO4Ee2O0cjNcmYJpQ" name="nodeConnectivityMap" visibility="protected" type="_5QP7QNO4Ee2O0cjNcmYJpQ" association="_5TLTc9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SKm1dO4Ee2O0cjNcmYJpQ" name="activationMap" visibility="package" type="_5K8kgNO4Ee2O0cjNcmYJpQ" association="_5TLTdtO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldrdO4Ee2O0cjNcmYJpQ" name="Poset" specification="_5QnustO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldrtO4Ee2O0cjNcmYJpQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sldr9O4Ee2O0cjNcmYJpQ" type="_5LIxwNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldsNO4Ee2O0cjNcmYJpQ" name="getNodeConnectivity" specification="_5LIxwdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldsdO4Ee2O0cjNcmYJpQ" type="_5QP7QNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldstO4Ee2O0cjNcmYJpQ" name="getNodeNames" specification="_5LJY0NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Slds9O4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldtNO4Ee2O0cjNcmYJpQ" name="getNodesNamesOrderedAlphabetically" specification="_5LJY0tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SldtdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SldttO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sldt9O4Ee2O0cjNcmYJpQ" name="buildPosetOfActivations" specification="_5LJY1tO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SlduNO4Ee2O0cjNcmYJpQ" name="createEdgeLists" specification="_5LJY19O4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SldudO4Ee2O0cjNcmYJpQ" name="createConflictLists" specification="_5LJY2NO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEoNO4Ee2O0cjNcmYJpQ" name="createGlobalConflictLists" specification="_5LJY2dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEodO4Ee2O0cjNcmYJpQ" name="createLocalConflictLists" specification="_5LJY2tO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEotO4Ee2O0cjNcmYJpQ" name="findCoordinator" specification="_5RobUtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEo9O4Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmEpNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEpdO4Ee2O0cjNcmYJpQ" name="buildTxArray" specification="_5RobVtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEptO4Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmEp9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SmEqNO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEqdO4Ee2O0cjNcmYJpQ" name="createInitialActivations" specification="_5LJ_4NO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEqtO4Ee2O0cjNcmYJpQ" name="getMaxTx" specification="_5QoVwNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEq9O4Ee2O0cjNcmYJpQ" name="node" type="_5LFHYNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmErNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmErdO4Ee2O0cjNcmYJpQ" name="getActivation" specification="_5QoVw9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmErtO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmEr9O4Ee2O0cjNcmYJpQ" name="node" type="_5LFHYNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmEsNO4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEsdO4Ee2O0cjNcmYJpQ" name="getHyperPeriod" specification="_5LJ_4dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEstO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEs9O4Ee2O0cjNcmYJpQ" name="getMaxPhase" specification="_5LJ_49O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEtNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEtdO4Ee2O0cjNcmYJpQ" name="orderActivations" specification="_5LJ_5dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEttO4Ee2O0cjNcmYJpQ" name="getNextActivation" specification="_5LJ_5tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEt9O4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEuNO4Ee2O0cjNcmYJpQ" name="addActivation" specification="_5QoVyNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEudO4Ee2O0cjNcmYJpQ" name="activation" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEutO4Ee2O0cjNcmYJpQ" name="findBaseStation" specification="_5LJ_59O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEu9O4Ee2O0cjNcmYJpQ" type="_5LFHYNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LIxwdO4Ee2O0cjNcmYJpQ" name="getNodeConnectivity" visibility="private" method="_5SldsNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RobUNO4Ee2O0cjNcmYJpQ" type="_5QP7QNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LJY0NO4Ee2O0cjNcmYJpQ" name="getNodeNames" method="_5SldstO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RobUdO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LJY0tO4Ee2O0cjNcmYJpQ" name="getNodesNamesOrderedAlphabetically" method="_5SldtNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LJY09O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5LJY1NO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LJY1tO4Ee2O0cjNcmYJpQ" name="buildPosetOfActivations" method="_5Sldt9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5LJY19O4Ee2O0cjNcmYJpQ" name="createEdgeLists" visibility="private" method="_5SlduNO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5LJY2NO4Ee2O0cjNcmYJpQ" name="createConflictLists" visibility="private" method="_5SldudO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5LJY2dO4Ee2O0cjNcmYJpQ" name="createGlobalConflictLists" visibility="private" method="_5SmEoNO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5LJY2tO4Ee2O0cjNcmYJpQ" name="createLocalConflictLists" visibility="private" method="_5SmEodO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5LJ_4NO4Ee2O0cjNcmYJpQ" name="createInitialActivations" visibility="private" method="_5SmEqdO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5LJ_4dO4Ee2O0cjNcmYJpQ" name="getHyperPeriod" method="_5SmEsdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LJ_4tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LJ_49O4Ee2O0cjNcmYJpQ" name="getMaxPhase" method="_5SmEs9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LJ_5NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LJ_5dO4Ee2O0cjNcmYJpQ" name="orderActivations" method="_5SmEtdO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5LJ_5tO4Ee2O0cjNcmYJpQ" name="getNextActivation" method="_5SmEttO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x8NejEe2IjMkQsyA0cQ">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QoVx9O4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LJ_59O4Ee2O0cjNcmYJpQ" name="findBaseStation" visibility="protected" method="_5SmEutO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x8tejEe2IjMkQsyA0cQ">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QoVytO4Ee2O0cjNcmYJpQ" type="_5LFHYNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QnustO4Ee2O0cjNcmYJpQ" name="Poset" visibility="package" method="_5SldrdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QnutNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QnutdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C42K79ejEe2IjMkQsyA0cQ">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qnus9O4Ee2O0cjNcmYJpQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QnuttO4Ee2O0cjNcmYJpQ" type="_5LIxwNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QoVwNO4Ee2O0cjNcmYJpQ" name="getMaxTx" visibility="private" method="_5SmEqtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QoVwdO4Ee2O0cjNcmYJpQ" name="node" type="_5LFHYNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QoVwtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QoVw9O4Ee2O0cjNcmYJpQ" name="getActivation" visibility="private" method="_5SmErdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QoVxNO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QoVxdO4Ee2O0cjNcmYJpQ" name="node" type="_5LFHYNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QoVxtO4Ee2O0cjNcmYJpQ" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QoVyNO4Ee2O0cjNcmYJpQ" name="addActivation" method="_5SmEuNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42x8dejEe2IjMkQsyA0cQ">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QoVydO4Ee2O0cjNcmYJpQ" name="activation" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RobUtO4Ee2O0cjNcmYJpQ" name="findCoordinator" visibility="protected" method="_5SmEotO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K8NejEe2IjMkQsyA0cQ">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RobU9O4Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RobVNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RobVtO4Ee2O0cjNcmYJpQ" name="buildTxArray" visibility="private" method="_5SmEpdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RobV9O4Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RpCYNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5RpCYdO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LLOANO4Ee2O0cjNcmYJpQ" name="PreemptiveSchedule">
              <ownedComment xmi:id="_C40VtdejEe2IjMkQsyA0cQ">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QqyDNO4Ee2O0cjNcmYJpQ" general="_5LaekdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEvNO4Ee2O0cjNcmYJpQ" name="PreemptiveSchedule" specification="_5Qo80NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEvdO4Ee2O0cjNcmYJpQ" name="poset" type="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmEvtO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmEv9O4Ee2O0cjNcmYJpQ" type="_5LLOANO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEwNO4Ee2O0cjNcmYJpQ" name="continueSearch" specification="_5Qo81tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEwdO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmEwtO4Ee2O0cjNcmYJpQ" name="activation" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmEw9O4Ee2O0cjNcmYJpQ" type="_5RppcNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmExNO4Ee2O0cjNcmYJpQ" name="toProgram" specification="_5LL1ENO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmExdO4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmExtO4Ee2O0cjNcmYJpQ" name="findPreeptiveChannelAndTime" specification="_5Qpj5tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEx9O4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmEyNO4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmEydO4Ee2O0cjNcmYJpQ" type="_5RppcNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmEytO4Ee2O0cjNcmYJpQ" name="findAdditionalTime" specification="_5Qpj6dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmEy9O4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmEzNO4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmEzdO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmEztO4Ee2O0cjNcmYJpQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmEz9O4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmrsNO4Ee2O0cjNcmYJpQ" name="findMaxTimeAvailable" specification="_5QqK8tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmrsdO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmrstO4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Smrs9O4Ee2O0cjNcmYJpQ" type="_5RppcNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmrtNO4Ee2O0cjNcmYJpQ" name="availableTime" specification="_5QqK9dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmrtdO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmrttO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Smrt9O4Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmruNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmrudO4Ee2O0cjNcmYJpQ" name="addToSchedule" specification="_5QqyANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmrutO4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Smru9O4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmrvNO4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmrvdO4Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmrvtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Smrv9O4Ee2O0cjNcmYJpQ" name="addToSchedule" specification="_5QqyBtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmrwNO4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmrwdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LL1ENO4Ee2O0cjNcmYJpQ" name="toProgram" method="_5SmExNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qpj5dO4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qo80NO4Ee2O0cjNcmYJpQ" name="PreemptiveSchedule" visibility="package" method="_5SmEvNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Qo809O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Qo81NO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Qo80dO4Ee2O0cjNcmYJpQ" name="poset" type="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qo80tO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qo81dO4Ee2O0cjNcmYJpQ" type="_5LLOANO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qo81tO4Ee2O0cjNcmYJpQ" name="continueSearch" visibility="protected" method="_5SmEwNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qpj4NO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qpj4dO4Ee2O0cjNcmYJpQ" name="activation" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RppctO4Ee2O0cjNcmYJpQ" type="_5RppcNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qpj5tO4Ee2O0cjNcmYJpQ" name="findPreeptiveChannelAndTime" visibility="private" method="_5SmExtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qpj59O4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qpj6NO4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rppc9O4Ee2O0cjNcmYJpQ" type="_5RppcNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qpj6dO4Ee2O0cjNcmYJpQ" name="findAdditionalTime" visibility="private" method="_5SmEytO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qpj6tO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qpj69O4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qpj7NO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QqK8NO4Ee2O0cjNcmYJpQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RppdNO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QqK8tO4Ee2O0cjNcmYJpQ" name="findMaxTimeAvailable" visibility="private" method="_5SmrsNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QqK89O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QqK9NO4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RppddO4Ee2O0cjNcmYJpQ" type="_5RppcNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QqK9dO4Ee2O0cjNcmYJpQ" name="availableTime" visibility="private" method="_5SmrtNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QqK9tO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QqK99O4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QqK-NO4Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QqK-dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QqyANO4Ee2O0cjNcmYJpQ" name="addToSchedule" visibility="private" method="_5SmrudO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QqyAdO4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QqyAtO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QqyA9O4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QqyBNO4Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QqyBdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QqyBtO4Ee2O0cjNcmYJpQ" name="addToSchedule" visibility="protected" method="_5Smrv9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QqyB9O4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QqyCNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LNDMNO4Ee2O0cjNcmYJpQ" name="PriorityComparator">
              <interfaceRealization xmi:id="_5RppdtO4Ee2O0cjNcmYJpQ" client="_5LNDMNO4Ee2O0cjNcmYJpQ" supplier="_5QZFMdO4Ee2O0cjNcmYJpQ" contract="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmrwtO4Ee2O0cjNcmYJpQ" name="compare" specification="_5RqQgdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Smrw9O4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmrxNO4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmrxdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5RqQgdO4Ee2O0cjNcmYJpQ" name="compare" method="_5SmrwtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RqQgtO4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RqQg9O4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RqQhNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LNqQNO4Ee2O0cjNcmYJpQ" name="ProgramSchedule">
              <generalization xmi:id="_5QrZENO4Ee2O0cjNcmYJpQ" general="_5LhzUNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SLN4NO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SLN4dO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmrxtO4Ee2O0cjNcmYJpQ" name="ProgramSchedule" specification="_5LNqQdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Smrx9O4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmryNO4Ee2O0cjNcmYJpQ" name="ProgramSchedule" specification="_5LNqRdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmrydO4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SmrytO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Smry9O4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LNqQdO4Ee2O0cjNcmYJpQ" name="ProgramSchedule" method="_5SmrxtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LNqQtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LNqQ9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LNqRNO4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LNqRdO4Ee2O0cjNcmYJpQ" name="ProgramSchedule" visibility="package" method="_5SmryNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LNqSNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LNqSdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LNqRtO4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LNqR9O4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LNqStO4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LORUNO4Ee2O0cjNcmYJpQ" name="ProgramVisualization">
              <ownedComment xmi:id="_C40VuNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QsAKdO4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SLN4tO4Ee2O0cjNcmYJpQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SLN49O4Ee2O0cjNcmYJpQ" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SLN5NO4Ee2O0cjNcmYJpQ" name="sourceCode" visibility="private" type="_5LNqQNO4Ee2O0cjNcmYJpQ" association="_5TLTedO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SLN5tO4Ee2O0cjNcmYJpQ" name="program" visibility="private" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TL6gdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SLN6NO4Ee2O0cjNcmYJpQ" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SmrzNO4Ee2O0cjNcmYJpQ" name="ProgramVisualization" specification="_5QsAIdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SmrzdO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SmrztO4Ee2O0cjNcmYJpQ" type="_5LORUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Smrz9O4Ee2O0cjNcmYJpQ" name="displayVisualization" specification="_5LORUdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Smr0NO4Ee2O0cjNcmYJpQ" type="_5K_n0NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Smr0dO4Ee2O0cjNcmYJpQ" name="createHeader" specification="_5LORVdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Smr0tO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Smr09O4Ee2O0cjNcmYJpQ" name="createFooter" specification="_5LO4YdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Smr1NO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Smr1dO4Ee2O0cjNcmYJpQ" name="createColumnHeader" specification="_5LO4ZdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Smr1tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Smr19O4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Smr2NO4Ee2O0cjNcmYJpQ" name="createVisualizationData" specification="_5LO4bNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Smr2dO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Smr2tO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Smr29O4Ee2O0cjNcmYJpQ" name="createTitle" specification="_5LPfc9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Smr3NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LORUdO4Ee2O0cjNcmYJpQ" name="displayVisualization" method="_5Smrz9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QsAJtO4Ee2O0cjNcmYJpQ" type="_5K_n0NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LORVdO4Ee2O0cjNcmYJpQ" name="createHeader" visibility="protected" method="_5Smr0dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QsAJ9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LO4YdO4Ee2O0cjNcmYJpQ" name="createFooter" visibility="protected" method="_5Smr09O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QsAKNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LO4ZdO4Ee2O0cjNcmYJpQ" name="createColumnHeader" visibility="protected" method="_5Smr1dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LO4ZtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5LO4Z9O4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LO4bNO4Ee2O0cjNcmYJpQ" name="createVisualizationData" visibility="protected" method="_5Smr2NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LO4bdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5LO4btO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LPfc9O4Ee2O0cjNcmYJpQ" name="createTitle" visibility="private" method="_5Smr29O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LPfdNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QsAIdO4Ee2O0cjNcmYJpQ" name="ProgramVisualization" visibility="package" method="_5SmrzNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QsAI9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QsAJNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QsAItO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QsAJdO4Ee2O0cjNcmYJpQ" type="_5LORUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LQGgNO4Ee2O0cjNcmYJpQ" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_5Rq3kNO4Ee2O0cjNcmYJpQ" client="_5LQGgNO4Ee2O0cjNcmYJpQ" supplier="_5QZFMdO4Ee2O0cjNcmYJpQ" contract="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnSwNO4Ee2O0cjNcmYJpQ" name="compare" specification="_5Rq3ktO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnSwdO4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnSwtO4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnSw9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Rq3ktO4Ee2O0cjNcmYJpQ" name="compare" method="_5SnSwNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Rq3k9O4Ee2O0cjNcmYJpQ" name="obj1" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rq3lNO4Ee2O0cjNcmYJpQ" name="obj2" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rq3ldO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LQGgtO4Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue">
              <generalization xmi:id="_5LQtl9O4Ee2O0cjNcmYJpQ" general="_5LQtldO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SL08NO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SL08dO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnSxNO4Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue" specification="_5LQtkdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnSxdO4Ee2O0cjNcmYJpQ" type="_5LQGgtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnSxtO4Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue" specification="_5QsnMNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnSx9O4Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_5QnusNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnSyNO4Ee2O0cjNcmYJpQ" type="_5LQGgtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LQtkdO4Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue" visibility="package" method="_5SnSxNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LQtktO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LQtk9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LQtlNO4Ee2O0cjNcmYJpQ" type="_5LQGgtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QsnMNO4Ee2O0cjNcmYJpQ" name="ReleaseTimeQueue" visibility="package" method="_5SnSxtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QsnMtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QsnM9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5QsnMdO4Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_5QnusNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QsnNNO4Ee2O0cjNcmYJpQ" type="_5LQGgtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LRUodO4Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_DTv-O9ejEe2IjMkQsyA0cQ">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages&#xD;
transmitted in flows for the WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The&#xD;
end-to-end reliability for each flow, flow:src->sink, is computed iteratively&#xD;
as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released.&#xD;
All other initial probabilities are 0.0. (That is, the reset of the nodes in&#xD;
the flow have an initial probability value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState =&#xD;
(1-M)*PrevSnkNodeState + M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by&#xD;
the node SinkNode. Thus, the NewSinkNodeState probability will increase each&#xD;
time a push or pull is executed with SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the&#xD;
message reaching that node, and the end-to-end reliability of a flow is the&#xD;
value of the last Flow:SinkNode probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities&#xD;
the comprise the ReliablityMatrix, which is the core of the file&#xD;
visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the&#xD;
instructions for each node, in each time slot, to extract the src and snk&#xD;
nodes in the instruction and then apply the message success probability&#xD;
equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to&#xD;
extract the src and snk nodes from the instruction string in a program&#xD;
schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SL08tO4Ee2O0cjNcmYJpQ" name="DEFAULT_E2E" visibility="private" isLeaf="true" isStatic="true" type="_5RreodO4Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SL089O4Ee2O0cjNcmYJpQ" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SL09NO4Ee2O0cjNcmYJpQ" name="DEFAULT_MINPACKETRECEPTIONRATE" visibility="private" isLeaf="true" isStatic="true" type="_5RreodO4Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SL09dO4Ee2O0cjNcmYJpQ" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SL09tO4Ee2O0cjNcmYJpQ" name="program" visibility="public" type="_5MMhsNO4Ee2O0cjNcmYJpQ" isReadOnly="true" association="_5TL6hNO4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SL099O4Ee2O0cjNcmYJpQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SL0-dO4Ee2O0cjNcmYJpQ" name="e2e" visibility="private" type="_5RreodO4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SL0-tO4Ee2O0cjNcmYJpQ" value="DEFAULT_E2E"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SL0_NO4Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" visibility="private" type="_5RreodO4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SL0_dO4Ee2O0cjNcmYJpQ" value="DEFAULT_MINPACKETRECEPTIONRATE"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SL0_9O4Ee2O0cjNcmYJpQ" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SMcANO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SMcAtO4Ee2O0cjNcmYJpQ" name="fixed" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SMcA9O4Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnSydO4Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" specification="_5Qt1UNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnSytO4Ee2O0cjNcmYJpQ" name="program" type="_5MMhsNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnSy9O4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnSzNO4Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" specification="_5RsFsNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnSzdO4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnSztO4Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnSz9O4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
		this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS0NO4Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" specification="_5LR7sNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnS0dO4Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SnS0tO4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numFaults = numFaults;&#xD;
		this.fixed = true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS09O4Ee2O0cjNcmYJpQ" name="getReliabilities" specification="_5LR7tdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnS1NO4Ee2O0cjNcmYJpQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO implement this operation&#xD;
		return null;&#xD;
//		throw new UnsupportedOperationException(&quot;not implemented&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS1dO4Ee2O0cjNcmYJpQ" name="verifyReliabilities" specification="_5LR7ttO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnS1tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS29O4Ee2O0cjNcmYJpQ" name="getM" specification="_5LR7vNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_DTvXINejEe2IjMkQsyA0cQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
                <language>java</language>
                <body>// should be private&#xD;
		return this.minPacketReceptionRate;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS3dO4Ee2O0cjNcmYJpQ" name="getE2E" specification="_5LR7vtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_DTvXIdejEe2IjMkQsyA0cQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
                <language>java</language>
                <body>// should be private&#xD;
		return this.e2e;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS49O4Ee2O0cjNcmYJpQ" name="numTxPerLinkAndTotalTxCost" specification="_5Qt1VtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnS5NO4Ee2O0cjNcmYJpQ" name="flow" type="_5K46INO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnS5dO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fixed) {&#xD;
//			return getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
			return getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
		}&#xD;
//		return numTxAttemptsPerLinkAndTotalTxAttempts(flow);&#xD;
		return getTxPerLinkAndTotalTxCost(flow);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS5tO4Ee2O0cjNcmYJpQ" name="getFixedTxPerLinkAndTotalTxCost" specification="_5QucYNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnS59O4Ee2O0cjNcmYJpQ" name="flow" type="_5K46INO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnS6NO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
		var nNodesInFlow = nodesInFlow.size();&#xD;
		ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
		/*&#xD;
		 * Each node will have at most numFaults+1 transmissions. Because we don't know&#xD;
		 * which nodes will send the message over an edge, we give the cost to each&#xD;
		 * node.&#xD;
		 */&#xD;
		for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
			txArrayList.add(numFaults + 1);&#xD;
		}&#xD;
		/*&#xD;
		 * now compute the maximum # of TX, assuming at most numFaults occur on an edge&#xD;
		 * per period, and each edge requires at least one successful TX.&#xD;
		 */&#xD;
		var numEdgesInFlow = nNodesInFlow - 1;&#xD;
		var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
		txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
		return txArrayList;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS6dO4Ee2O0cjNcmYJpQ" name="getTxPerLinkAndTotalTxCost" specification="_5QucY9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnS6tO4Ee2O0cjNcmYJpQ" name="flow" type="_5K46INO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SnS69O4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// I have no idea what this should be set to and we can't take it in as a&#xD;
		// parameter according to the homework&#xD;
		Double M = 0.99;&#xD;
&#xD;
		var nodesInFlow = flow.nodes;&#xD;
		// The last entry will contain the worst-case cost of transmitting E2E in&#xD;
		// isolation&#xD;
		var nNodesInFlow = nodesInFlow.size();&#xD;
		// var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
		// Array to track nPushes for each node in this flow (same as nTx per link)&#xD;
		// Collections.nCopies initalized to 0&#xD;
		var nPushes = new ArrayList&lt;Integer>(Collections.nCopies(nNodesInFlow + 1, 0));&#xD;
		// deprecated&#xD;
		// Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
		var nHops = nNodesInFlow - 1;&#xD;
		// minLinkReliablityNeded is the minimum reliability needed per link in a flow&#xD;
		// to hit E2E&#xD;
		// reliability for the flow&#xD;
		// use max to handle rounding error when e2e == 1.0&#xD;
		Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops)));&#xD;
		// Now compute reliability of packet reaching each node in the given time slot&#xD;
		// Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
		// each row is a time slot, stating at time 0&#xD;
		// each column represents the reliability of the packet reaching that node at&#xD;
		// the current time slot (i.e., the row it is in)&#xD;
		// will add rows as we compute reliabilities until the final reliability is&#xD;
		// reached for all nodes.&#xD;
		var reliabilityWindow = new ReliabilityTable(); // Vector&lt;Vector&lt;Double>>();&#xD;
		var newReliabilityRow = new ReliabilityRow();&#xD;
		for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
			// create the the row initialized with 0.0 values&#xD;
			newReliabilityRow.add(0.0);&#xD;
		}&#xD;
		// now add row to the reliability window, Time 0&#xD;
		reliabilityWindow.add(newReliabilityRow);&#xD;
//		ReliabilityRow tmpVector = reliabilityWindow.get(0);&#xD;
		// could be an issue here as idk if this needs to be copied or not&#xD;
		var currentReliabilityRow = reliabilityWindow.get(0); // tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
		// var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
		// Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
		// but I din't want to mess with the newReliablityRow vector I use below&#xD;
		// So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
		// We will then update this row with computed values for each node and put it&#xD;
		// back in the matrix&#xD;
		currentReliabilityRow.set(0, 1.0); // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
		// the analysis will end when the e2e reliability matrix is met, initially the&#xD;
		// state&#xD;
		// is not met and will be 0 with this statement&#xD;
		Double e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
		var timeSlot = 0; // start time at 0&#xD;
		// change to while and increment increment timeSlot because we don't know how&#xD;
		// long this schedule window will last&#xD;
		while (e2eReliabilityState &lt; e2e) {&#xD;
			var prevReliabilityRow = currentReliabilityRow;&#xD;
			// would be reliabilityWindow[timeSlot] if working through a schedule&#xD;
			currentReliabilityRow = newReliabilityRow; // .toArray(new Double[newReliabilityRow.size()]);&#xD;
			// Now use each flow:src->sink to update reliability computations&#xD;
			// this is the update formula for the state probabilities&#xD;
			// nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
			// use MinLQ for M in above equation&#xD;
			// NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
			// loop through each node in the flow and update the states for each line (i.e)&#xD;
			// sink->src pair&#xD;
			for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) {&#xD;
				var flowSrcNodeindex = nodeIndex;&#xD;
				var flowSnkNodeindex = nodeIndex + 1;&#xD;
				var prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex); // [flowSrcNodeindex];&#xD;
				var prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex); // [flowSnkNodeindex];&#xD;
				Double nextSnkState;&#xD;
				// do a push until PrevSnk state > e2e to ensure next node reaches target E2E&#xD;
				// BUT skip if&#xD;
				// no chance of success (i.e, source doesn't have packet)&#xD;
				if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) {&#xD;
					// need to continue attempting to Tx, so update current state&#xD;
					nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState);&#xD;
					// increment the number of pushes for for this node to snk node&#xD;
					nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1); // [nodeIndex] += 1;&#xD;
				} else {&#xD;
					// snkNode has met its reliability. Thus move on to the next node and record the&#xD;
					// reliability met&#xD;
					nextSnkState = prevSnkNodeState;&#xD;
				}&#xD;
				// probabilities are non-decreasing so update if we were higher by carrying old&#xD;
				// value forward&#xD;
				if (currentReliabilityRow.get(flowSrcNodeindex) &lt; prevReliabilityRow.get(flowSrcNodeindex)) {&#xD;
					// carry forward the previous state for the src node, which may get overwritten&#xD;
					// later&#xD;
					// by another instruction in this slot&#xD;
					currentReliabilityRow.set(flowSrcNodeindex, prevReliabilityRow.get(flowSrcNodeindex));&#xD;
				}&#xD;
				currentReliabilityRow.set(flowSnkNodeindex, nextSnkState);&#xD;
			}&#xD;
&#xD;
			e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
			// so I think since we just use this reliabilityVector as the same thing as the&#xD;
			// currentReliabilityRow&#xD;
			// we don't need it at all and can just replace currentReliabiliyVector with&#xD;
			// current ReliabilityRow&#xD;
			ReliabilityRow currentReliabilityVector = new ReliabilityRow();&#xD;
			// convert the row to a vector so we can add it to the reliability window&#xD;
//			Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
			if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
				reliabilityWindow.set(timeSlot, (currentReliabilityRow));&#xD;
			} else {&#xD;
				reliabilityWindow.add(currentReliabilityRow);&#xD;
			}&#xD;
			timeSlot += 1; // increase to next time slot&#xD;
		}&#xD;
		var size = reliabilityWindow.size();&#xD;
		// The total (worst-case) cost to transmit E2E in isolation with specified&#xD;
		// reliability&#xD;
		// target is the number of rows in the reliabilityWindow&#xD;
		nPushes.set(nNodesInFlow, size); // [nNodesInFlow] = size;&#xD;
		ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
		nPushesArrayList.addAll(nPushes);&#xD;
//		Collections.addAll(nPushesArrayList, nPushes);&#xD;
		return nPushesArrayList;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LR7sNO4Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" method="_5SnS0NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LR7stO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LR7s9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DTv-PtejEe2IjMkQsyA0cQ">
                  <body>Class constructor specifying the number of faults, sets fixed to true&#xD;
	 * &#xD;
	 * @param numFaults is an Integer representing the number of faults</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LR7sdO4Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LR7tNO4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LR7tdO4Ee2O0cjNcmYJpQ" name="getReliabilities" method="_5SnS09O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlQNejEe2IjMkQsyA0cQ">
                  <body>This method was generated with UML Lab in HW4&#xD;
	 * &#xD;
	 * @return a ReliabilityTable containing reliabilities of a packet reaching each&#xD;
	 *         node in a flow at each time slot</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qt1VdO4Ee2O0cjNcmYJpQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LR7ttO4Ee2O0cjNcmYJpQ" name="verifyReliabilities" method="_5SnS1dO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlQdejEe2IjMkQsyA0cQ">
                  <body>This method declares whether all reliabilities are met&#xD;
	 * &#xD;
	 * I don't know if this should be changed or if its supposed to always return&#xD;
	 * true if packets are always pushed again until the minimum link reliability is&#xD;
	 * met?&#xD;
	 * &#xD;
	 * @return Boolean true</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LR7t9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LR7vNO4Ee2O0cjNcmYJpQ" name="getM" method="_5SnS29O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LR7vdO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LR7vtO4Ee2O0cjNcmYJpQ" name="getE2E" method="_5SnS3dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LR7v9O4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qt1UNO4Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" method="_5SnSydO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Qt1UtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Qt1U9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DTv-PNejEe2IjMkQsyA0cQ">
                  <body>Class constructor specifying the program&#xD;
	 * &#xD;
	 * @param program is the program schedule with flows to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qt1UdO4Ee2O0cjNcmYJpQ" name="program" type="_5MMhsNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qt1VNO4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qt1VtO4Ee2O0cjNcmYJpQ" name="numTxPerLinkAndTotalTxCost" method="_5SnS49O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlQtejEe2IjMkQsyA0cQ">
                  <body>This method calculates a flow's numTxPerLinkAndTotalTxCost based on whether&#xD;
	 * its fault tolerance is fixed&#xD;
	 * &#xD;
	 * If fixed is true, calculates the maximum number of transmissions per link and&#xD;
	 * maximum total transmissions If fixed is false, calculates the number of&#xD;
	 * transmission attempts (pushes) per link and total transmission attempts&#xD;
	 * &#xD;
	 * @param flow is the specified flow to calculate transmissions and cost for&#xD;
	 * @return an ArrayList containing the number of transmissions per link and&#xD;
	 *         total cost of the specified flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qt1V9O4Ee2O0cjNcmYJpQ" name="flow" type="_5K46INO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RsFttO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QucYNO4Ee2O0cjNcmYJpQ" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_5SnS5tO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlQ9ejEe2IjMkQsyA0cQ">
                  <body>This method takes a flow and adds its transmissions to an ArrayList. Each&#xD;
	 * node has a max of numFaults +1. Once these are all added to the ArrayList,&#xD;
	 * put the sum of the number of edges of the flow and the max faults in a flow&#xD;
	 * into the ArrayList Method moved from Workload class&#xD;
	 * &#xD;
	 * @param flow is a specified flow object&#xD;
	 * @return an ArrayList containing number of edges and max faults in the&#xD;
	 *         selected flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QucYdO4Ee2O0cjNcmYJpQ" name="flow" type="_5K46INO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RsFt9O4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QucY9O4Ee2O0cjNcmYJpQ" name="getTxPerLinkAndTotalTxCost" visibility="private" method="_5SnS6dO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlRNejEe2IjMkQsyA0cQ">
                  <body>This method takes in a flow and calculates the number of transmission&#xD;
	 * attempts per link between nodes and the total transmission attempts Method&#xD;
	 * moved from Workload class&#xD;
	 * &#xD;
	 * @param flow is a specified flow object&#xD;
	 * &#xD;
	 * @return an ArrayList of the number of pushes</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QucZNO4Ee2O0cjNcmYJpQ" name="flow" type="_5K46INO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RsFuNO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RsFsNO4Ee2O0cjNcmYJpQ" name="ReliabilityAnalysis" method="_5SnSzNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RsFs9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RsFtNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DTv-PdejEe2IjMkQsyA0cQ">
                  <body>Class constructor specifying end-to-end reliability and minimum packet&#xD;
	 * reception rate&#xD;
	 * &#xD;
	 * @param e2e                    is a double representing the end-to-end&#xD;
	 *                               reliability&#xD;
	 * @param minPacketReceptionRate is a double representing the minimum packet&#xD;
	 *                               reception rate</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RsFsdO4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RsFstO4Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RsFtdO4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_5LTJ0NO4Ee2O0cjNcmYJpQ" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_C40VudejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5LTw4NO4Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_5RreodO4Ee2O0cjNcmYJpQ" isReadOnly="true"/>
              <ownedAttribute xmi:id="_5LTw4dO4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LTw4tO4Ee2O0cjNcmYJpQ" name="ReliabilityRow">
              <generalization xmi:id="_5QvqgNO4Ee2O0cjNcmYJpQ" general="_5LW0M9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SMcBdO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SMcBtO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SnS7NO4Ee2O0cjNcmYJpQ" name="ReliabilityRow" specification="_5LTw49O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SnS7dO4Ee2O0cjNcmYJpQ" type="_5LTw4tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn50NO4Ee2O0cjNcmYJpQ" name="ReliabilityRow" specification="_5RsswNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn50dO4Ee2O0cjNcmYJpQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sn50tO4Ee2O0cjNcmYJpQ" name="element" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sn509O4Ee2O0cjNcmYJpQ" type="_5LTw4tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn51NO4Ee2O0cjNcmYJpQ" name="ReliabilityRow" specification="_5RssxtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn51dO4Ee2O0cjNcmYJpQ" name="rowArray" type="_5RreodO4Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Sn51tO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sn519O4Ee2O0cjNcmYJpQ" type="_5LTw4tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LTw49O4Ee2O0cjNcmYJpQ" name="ReliabilityRow" method="_5SnS7NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LTw5NO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LTw5dO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LTw5tO4Ee2O0cjNcmYJpQ" type="_5LTw4tO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RsswNO4Ee2O0cjNcmYJpQ" name="ReliabilityRow" visibility="package" method="_5Sn50NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Rssw9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RssxNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5RsswdO4Ee2O0cjNcmYJpQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RsswtO4Ee2O0cjNcmYJpQ" name="element" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RssxdO4Ee2O0cjNcmYJpQ" type="_5LTw4tO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RssxtO4Ee2O0cjNcmYJpQ" name="ReliabilityRow" visibility="package" method="_5Sn51NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RssyNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RssydO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Rssx9O4Ee2O0cjNcmYJpQ" name="rowArray" type="_5RreodO4Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Rssy9O4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RssytO4Ee2O0cjNcmYJpQ" type="_5LTw4tO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LUX8NO4Ee2O0cjNcmYJpQ" name="ReliabilityTable">
              <generalization xmi:id="_5QvqgtO4Ee2O0cjNcmYJpQ" general="_5LhzUNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SMcB9O4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SMcCNO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn52NO4Ee2O0cjNcmYJpQ" name="ReliabilityTable" specification="_5LUX8dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn52dO4Ee2O0cjNcmYJpQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn52tO4Ee2O0cjNcmYJpQ" name="ReliabilityTable" specification="_5LUX9dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn529O4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sn53NO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sn53dO4Ee2O0cjNcmYJpQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LUX8dO4Ee2O0cjNcmYJpQ" name="ReliabilityTable" method="_5Sn52NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LUX8tO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LUX89O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LUX9NO4Ee2O0cjNcmYJpQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LUX9dO4Ee2O0cjNcmYJpQ" name="ReliabilityTable" visibility="package" method="_5Sn52tO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LUX-NO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LUX-dO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LUX9tO4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LUX99O4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LUX-tO4Ee2O0cjNcmYJpQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LU_ANO4Ee2O0cjNcmYJpQ" name="ReliabilityVisualization">
              <ownedComment xmi:id="_DTwlRdejEe2IjMkQsyA0cQ">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5QwRmtO4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SMcCdO4Ee2O0cjNcmYJpQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SMcCtO4Ee2O0cjNcmYJpQ" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SMcC9O4Ee2O0cjNcmYJpQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SMcDNO4Ee2O0cjNcmYJpQ" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SNDENO4Ee2O0cjNcmYJpQ" name="warp" visibility="private" type="_5Lv1wNO4Ee2O0cjNcmYJpQ" association="_5TL6h9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SNDEtO4Ee2O0cjNcmYJpQ" name="ra" visibility="private" type="_5LRUodO4Ee2O0cjNcmYJpQ" association="_5TL6itO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_DTuJANejEe2IjMkQsyA0cQ" name="program" visibility="private" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_DTxzYNejEe2IjMkQsyA0cQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn53tO4Ee2O0cjNcmYJpQ" name="ReliabilityVisualization" specification="_5QwRkNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn539O4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sn54NO4Ee2O0cjNcmYJpQ" type="_5LU_ANO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
		this.program = ra.getProgram();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn54dO4Ee2O0cjNcmYJpQ" name="visualization" specification="_5LU_AdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn54tO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// need to add \n to create new lines in the description&#xD;
		// Reliability Analysis for graph &lt;name>&#xD;
		// Scheduler Name: &lt;name>&#xD;
		// M: &lt;float>&#xD;
		// E2E: &lt;float>&#xD;
		// nChannels: &lt;int>&#xD;
		// flows with nodes i.e F0:A F0:B F1:A ...&#xD;
		// probabilities at each time &#xD;
		Description content = new Description();&#xD;
		content.add(getHeader());&#xD;
		content.add(getScheduler());&#xD;
		content.add(getM());&#xD;
		content.add(getE2E());&#xD;
		content.add(getnChannels());&#xD;
		content.add(getFlowsWithNodes());&#xD;
		content.addAll(reliabiltyTableToDescription(getReliabilities()));&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn549O4Ee2O0cjNcmYJpQ" name="getHeader" specification="_5LU_AtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn55NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;Reliability Analysis for graph %s\n&quot;, program.workLoad.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn55dO4Ee2O0cjNcmYJpQ" name="getScheduler" specification="_5LU_BNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn55tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;Scheduler Name: %s\n&quot;, program.schedulerName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn559O4Ee2O0cjNcmYJpQ" name="getM" specification="_5LU_BtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn56NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;M: %.2f\n&quot;, this.ra.getM());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn56dO4Ee2O0cjNcmYJpQ" name="getE2E" specification="_5LVmEdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn56tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;E2E: %.2f\n&quot;, this.ra.getE2E());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn569O4Ee2O0cjNcmYJpQ" name="getnChannels" specification="_5LVmE9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn57NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		return String.format(&quot;nChannels: %d\n&quot;, program.nChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn579O4Ee2O0cjNcmYJpQ" name="reliabiltyTableToDescription" specification="_5QwRltO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn58NO4Ee2O0cjNcmYJpQ" name="r" type="_5LUX8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sn58dO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
		Description data = new Description();&#xD;
		for (ReliabilityRow row : r) {&#xD;
			String content = &quot;&quot;;&#xD;
			for (Double value : row) {&#xD;
				content += String.format(&quot;%.2f\t&quot;, value);&#xD;
			}&#xD;
			content += &quot;\n&quot;;&#xD;
			data.add(content);&#xD;
		}&#xD;
		return data;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sn58tO4Ee2O0cjNcmYJpQ" name="getReliabilities" specification="_5LVmF9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sn589O4Ee2O0cjNcmYJpQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private&#xD;
//		return ra.getReliabilities(); THIS IS WHAT NORMALLY SHOULD HAPPEN&#xD;
		return getFakeDataTable();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DTvXItejEe2IjMkQsyA0cQ" name="getFlowsWithNodes" specification="_DTYKwNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_DTvXI9ejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>//should be private&#xD;
		// returns the a string of flows with nodes seperated by tabs in order like F1:A F2:D ... F9:C F10:A F11:B&#xD;
		List&lt;String> flows = program.workLoad.getFlowNamesInOriginalOrder();&#xD;
		if (inStandardForm(flows)) {&#xD;
			sortFlows(flows);	&#xD;
		}&#xD;
		List&lt;String> flowsWithNodes = getFlowsAndNodes(flows);&#xD;
		return listToString(flowsWithNodes);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DTvXJNejEe2IjMkQsyA0cQ" name="getFlowsAndNodes" specification="_DTYKwdejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_DTvXJdejEe2IjMkQsyA0cQ" name="flows" type="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_DTvXJtejEe2IjMkQsyA0cQ" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DTvXJ9ejEe2IjMkQsyA0cQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;String> flowsWithNodes = new ArrayList&lt;>();&#xD;
		for (String flow : flows) {&#xD;
			for (String node : program.workLoad.getNodesInFlow(flow)) {&#xD;
				flowsWithNodes.add(String.format(&quot;%s:%s&quot;, flow, node));&#xD;
			}&#xD;
		}&#xD;
		return flowsWithNodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DTvXKNejEe2IjMkQsyA0cQ" name="inStandardForm" specification="_DTZY4NejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_DTvXKdejEe2IjMkQsyA0cQ" name="flows" type="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_DTvXKtejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all the flow names are in the form F&lt;int>&#xD;
		for (String flow : flows) {&#xD;
			try {&#xD;
				Integer.parseInt(flow.substring(1));&#xD;
			} catch(Exception e) {&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DTv-MNejEe2IjMkQsyA0cQ" name="sortFlows" specification="_DTZY49ejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_DTv-MdejEe2IjMkQsyA0cQ" name="flows" type="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>// should be private, ensures proper order of numbers&#xD;
		Collections.sort(flows, new Comparator&lt;String>() {&#xD;
			public int compare(String str1, String str2) {&#xD;
				int val1 = Integer.parseInt(str1.substring(1));&#xD;
				int val2 = Integer.parseInt(str2.substring(1));&#xD;
				return val1 - val2;&#xD;
			}&#xD;
		});&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DTv-MtejEe2IjMkQsyA0cQ" name="listToString" specification="_DTgtodejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_DTv-M9ejEe2IjMkQsyA0cQ" name="arr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DTv-NNejEe2IjMkQsyA0cQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DTv-NdejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private formats items with \t in between&#xD;
		return listToString(Arrays.asList(arr));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DTv-NtejEe2IjMkQsyA0cQ" name="listToString" specification="_DTZ_8dejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_DTv-N9ejEe2IjMkQsyA0cQ" name="arr" type="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_DTv-ONejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// should be private formats items with \t in between&#xD;
		String content = &quot;&quot;;&#xD;
		for (String str : arr) {&#xD;
			content += String.format(&quot;%s\t&quot;, str);&#xD;
		}&#xD;
		content += &quot;\n&quot;;&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DTv-OdejEe2IjMkQsyA0cQ" name="getFakeDataTable" specification="_DTanAdejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_DTv-OtejEe2IjMkQsyA0cQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return"/>
                <language>java</language>
                <body>// don't need to test this because this will never be used when Reliability Analysis is implemented&#xD;
		List&lt;String> flows = program.workLoad.getFlowNamesInOriginalOrder();&#xD;
		if (inStandardForm(flows)) {&#xD;
			sortFlows(flows);&#xD;
		}&#xD;
		int numColumns = getFlowsAndNodes(flows).size();&#xD;
		int numRows = program.scheduleBuilt.size();&#xD;
		ReliabilityTable data = new ReliabilityTable();&#xD;
		for (int i = 0; i &lt; numRows; i++) {&#xD;
			ReliabilityRow dataRow = new ReliabilityRow();&#xD;
			for (int j = 0; j &lt; numColumns; j++) {&#xD;
				dataRow.add((double) (((int) (Math.random() * 100)) / 100.0));&#xD;
			}&#xD;
			data.add(dataRow);&#xD;
		}&#xD;
		return data;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LU_AdO4Ee2O0cjNcmYJpQ" name="visualization" method="_5Sn54dO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlR9ejEe2IjMkQsyA0cQ">
                  <body>This method creates a Description object for the visualization and adds a header and the WorkLoad's &#xD;
	 * information (scheduler, minimum packet reception rate, end-to-end reliability, number of channels,&#xD;
	 * and flows), then adds the reliability probabilities for each flow&#xD;
	 * @return a Description with all the program and reliability information</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QwRldO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LU_AtO4Ee2O0cjNcmYJpQ" name="getHeader" method="_5Sn549O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlSNejEe2IjMkQsyA0cQ">
                  <body>This method creates a header for the Reliability Analysis with the program's name&#xD;
	 * @return header for the description</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LU_A9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LU_BNO4Ee2O0cjNcmYJpQ" name="getScheduler" method="_5Sn55dO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlSdejEe2IjMkQsyA0cQ">
                  <body>This method creates a string indicating the program's scheduler name&#xD;
	 * @return scheduler name string</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LU_BdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LU_BtO4Ee2O0cjNcmYJpQ" name="getM" method="_5Sn559O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlStejEe2IjMkQsyA0cQ">
                  <body>This method creates a string indicating the program's minimum packet reception rate (M)&#xD;
	 * @return M string</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LVmENO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LVmEdO4Ee2O0cjNcmYJpQ" name="getE2E" method="_5Sn56dO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlS9ejEe2IjMkQsyA0cQ">
                  <body>This method creates a string indicating the program's end-to-end reliability (E2E)&#xD;
	 * @return E2E string</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LVmEtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LVmE9O4Ee2O0cjNcmYJpQ" name="getnChannels" method="_5Sn569O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlTNejEe2IjMkQsyA0cQ">
                  <body>This method creates a string indicating the program's number of channels (nChannels)&#xD;
	 * @return nChannels string</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LVmFNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LVmF9O4Ee2O0cjNcmYJpQ" name="getReliabilities" method="_5Sn58tO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlVNejEe2IjMkQsyA0cQ">
                  <body>This method creates a ReliabilityTable object with the reliabilities from the ReliabilityAnalysis&#xD;
	 * @return table of reliabilities</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QwRmdO4Ee2O0cjNcmYJpQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QwRkNO4Ee2O0cjNcmYJpQ" name="ReliabilityVisualization" visibility="package" method="_5Sn53tO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5QwRktO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5QwRk9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DTwlRtejEe2IjMkQsyA0cQ">
                  <body>This constructor calls the VisualizationObject constructor and creates a ReliabilityAnalysis object &#xD;
	 * @param warp the WarpInterface to use</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QwRkdO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QwRlNO4Ee2O0cjNcmYJpQ" type="_5LU_ANO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QwRltO4Ee2O0cjNcmYJpQ" name="reliabiltyTableToDescription" method="_5Sn579O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_DTwlU9ejEe2IjMkQsyA0cQ">
                  <body>This method converts a ReliabilityTable to a Description object&#xD;
	 * @param r the ReliabilityTable to convert&#xD;
	 * @return a Description with the information from the ReliabilityTable</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QwRl9O4Ee2O0cjNcmYJpQ" name="r" type="_5LUX8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QwRmNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DTYKwNejEe2IjMkQsyA0cQ" name="getFlowsWithNodes" method="_DTvXItejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_DTwlTdejEe2IjMkQsyA0cQ">
                  <body>This method creates a string of the program's flows and their nodes, &#xD;
	 * in order of flow and separated by tabs&#xD;
	 * @return formatted string with flows and nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_DTgGkNejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DTYKwdejEe2IjMkQsyA0cQ" name="getFlowsAndNodes" method="_DTvXJNejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_DTwlTtejEe2IjMkQsyA0cQ">
                  <body>This method creates an ArrayList of the program's flows and their nodes&#xD;
	 * @param flows is a list of the program's flows&#xD;
	 * @return flows and nodes ArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_DTYKwtejEe2IjMkQsyA0cQ" name="flows" type="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_DTYx0NejEe2IjMkQsyA0cQ" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DTYx0dejEe2IjMkQsyA0cQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DTZY4NejEe2IjMkQsyA0cQ" name="inStandardForm" method="_DTvXKNejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_DTwlT9ejEe2IjMkQsyA0cQ">
                  <body>This method returns a boolean indicating whether the names of the program's flows &#xD;
	 * are in the form &quot;F&lt;int>&quot; (standard naming convention for flows)&#xD;
	 * @param flows is a list of the program's flows&#xD;
	 * @return true if all flow names are in standard form, false if not</body>
                </ownedComment>
                <ownedParameter xmi:id="_DTZY4dejEe2IjMkQsyA0cQ" name="flows" type="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_DTgtoNejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DTZY49ejEe2IjMkQsyA0cQ" name="sortFlows" method="_DTv-MNejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_DTwlUNejEe2IjMkQsyA0cQ">
                  <body>This method sorts the flows by number in increasing order&#xD;
	 * @param flows is a list of the program's flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_DTZY5NejEe2IjMkQsyA0cQ" name="flows" type="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DTZ_8dejEe2IjMkQsyA0cQ" name="listToString" method="_DTv-NtejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_DTwlUtejEe2IjMkQsyA0cQ">
                  <body>This method creates a string from a list of strings, formatted with tabs between list element&#xD;
	 * @param arr is the list to convert &#xD;
	 * @return a formatted string of the list elements</body>
                </ownedComment>
                <ownedParameter xmi:id="_DTZ_8tejEe2IjMkQsyA0cQ" name="arr" type="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_DTgtptejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DTanAdejEe2IjMkQsyA0cQ" name="getFakeDataTable" method="_DTv-OdejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_DTwlVdejEe2IjMkQsyA0cQ">
                  <body>For debugging?&#xD;
	 * @return ReliabilityTable</body>
                </ownedComment>
                <ownedParameter xmi:id="_DTanAtejEe2IjMkQsyA0cQ" type="_5LUX8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DTgtodejEe2IjMkQsyA0cQ" name="listToString" method="_DTv-MtejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_DTwlUdejEe2IjMkQsyA0cQ">
                  <body>This method creates a string from a string array, formatted with tabs between each array element&#xD;
	 * @param arr is the array to convert&#xD;
	 * @return a formatted string of the array elements</body>
                </ownedComment>
                <ownedParameter xmi:id="_DTgtotejEe2IjMkQsyA0cQ" name="arr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DTgtpNejEe2IjMkQsyA0cQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DTgto9ejEe2IjMkQsyA0cQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LWNINO4Ee2O0cjNcmYJpQ" name="ReportVisualization">
              <generalization xmi:id="_5Qw4qtO4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SNDFNO4Ee2O0cjNcmYJpQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SNDFdO4Ee2O0cjNcmYJpQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SNDFtO4Ee2O0cjNcmYJpQ" name="content" visibility="private" type="_5K0BoNO4Ee2O0cjNcmYJpQ" association="_5TMhkdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SNDGNO4Ee2O0cjNcmYJpQ" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog4NO4Ee2O0cjNcmYJpQ" name="ReportVisualization" specification="_5Qw4oNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog4dO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sog4tO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lf-JdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sog49O4Ee2O0cjNcmYJpQ" name="content" type="_5K0BoNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sog5NO4Ee2O0cjNcmYJpQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sog5dO4Ee2O0cjNcmYJpQ" type="_5LWNINO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog5tO4Ee2O0cjNcmYJpQ" name="visualization" specification="_5LWNIdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog59O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog6NO4Ee2O0cjNcmYJpQ" name="createReport" specification="_5LW0MtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog6dO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LWNIdO4Ee2O0cjNcmYJpQ" name="visualization" method="_5Sog5tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qw4qNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LW0MtO4Ee2O0cjNcmYJpQ" name="createReport" visibility="private" method="_5Sog6NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qw4qdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qw4oNO4Ee2O0cjNcmYJpQ" name="ReportVisualization" visibility="package" method="_5Sog4NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Qw4pdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Qw4ptO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Qw4odO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qw4otO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lf-JdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qw4o9O4Ee2O0cjNcmYJpQ" name="content" type="_5K0BoNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qw4pNO4Ee2O0cjNcmYJpQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qw4p9O4Ee2O0cjNcmYJpQ" type="_5LWNINO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LW0M9O4Ee2O0cjNcmYJpQ" name="Row">
              <generalization xmi:id="_5RtT3NO4Ee2O0cjNcmYJpQ" general="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SNqINO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SNqIdO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog6tO4Ee2O0cjNcmYJpQ" name="Row" specification="_5LXbQdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog69O4Ee2O0cjNcmYJpQ" type="_5LW0M9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog7NO4Ee2O0cjNcmYJpQ" name="Row" specification="_5RtT0NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog7dO4Ee2O0cjNcmYJpQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sog7tO4Ee2O0cjNcmYJpQ" name="element" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sog79O4Ee2O0cjNcmYJpQ" type="_5LW0M9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog8NO4Ee2O0cjNcmYJpQ" name="Row" specification="_5RtT1tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog8dO4Ee2O0cjNcmYJpQ" name="rowArray" type="_5RgfgNO4Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Sog8tO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sog89O4Ee2O0cjNcmYJpQ" type="_5LW0M9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog9NO4Ee2O0cjNcmYJpQ" name="Row" specification="_5LXbRdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog9dO4Ee2O0cjNcmYJpQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sog9tO4Ee2O0cjNcmYJpQ" type="_5LW0M9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LXbQdO4Ee2O0cjNcmYJpQ" name="Row" method="_5Sog6tO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LXbQtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LXbQ9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LXbRNO4Ee2O0cjNcmYJpQ" type="_5LW0M9O4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LXbRdO4Ee2O0cjNcmYJpQ" name="Row" visibility="package" method="_5Sog9NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LXbR9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LXbSNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LXbRtO4Ee2O0cjNcmYJpQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LXbSdO4Ee2O0cjNcmYJpQ" type="_5LW0M9O4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RtT0NO4Ee2O0cjNcmYJpQ" name="Row" visibility="package" method="_5Sog7NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RtT09O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RtT1NO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5RtT0dO4Ee2O0cjNcmYJpQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RtT0tO4Ee2O0cjNcmYJpQ" name="element" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RtT1dO4Ee2O0cjNcmYJpQ" type="_5LW0M9O4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RtT1tO4Ee2O0cjNcmYJpQ" name="Row" visibility="package" method="_5Sog8NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RtT2NO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RtT2dO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5RtT19O4Ee2O0cjNcmYJpQ" name="rowArray" type="_5RgfgNO4Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5RtT29O4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RtT2tO4Ee2O0cjNcmYJpQ" type="_5LW0M9O4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LYCUNO4Ee2O0cjNcmYJpQ" name="WorkLoadDescription">
              <ownedComment xmi:id="_C44AHdejEe2IjMkQsyA0cQ">
                <body>Reads the input file, whose name is passed as input parameter to the&#xD;
constructor, and builds a Description object based on the contents. Each line&#xD;
of the file is an entry (string) in the Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_5QyGwtO4Ee2O0cjNcmYJpQ" general="_5Lmr0NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SNqItO4Ee2O0cjNcmYJpQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SNqI9O4Ee2O0cjNcmYJpQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SNqJNO4Ee2O0cjNcmYJpQ" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SNqJdO4Ee2O0cjNcmYJpQ" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SNqJtO4Ee2O0cjNcmYJpQ" name="description" visibility="private" type="_5K0BoNO4Ee2O0cjNcmYJpQ" association="_5TMhlNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SNqKNO4Ee2O0cjNcmYJpQ" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SNqKtO4Ee2O0cjNcmYJpQ" name="fm" visibility="private" type="_5K3E8NO4Ee2O0cjNcmYJpQ" association="_5TMhl9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SNqLNO4Ee2O0cjNcmYJpQ" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog99O4Ee2O0cjNcmYJpQ" name="WorkLoadDescription" specification="_5LYCUdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog-NO4Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sog-dO4Ee2O0cjNcmYJpQ" type="_5LYCUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
		this.fm = this.getFileManager();&#xD;
		initialize(inputFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog-tO4Ee2O0cjNcmYJpQ" name="visualization" specification="_5LYpYNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog-9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog_NO4Ee2O0cjNcmYJpQ" name="fileVisualization" specification="_5LYpZNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog_dO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sog_tO4Ee2O0cjNcmYJpQ" name="toString" specification="_5LYpaNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sog_9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SohANO4Ee2O0cjNcmYJpQ" name="initialize" specification="_5LZQcNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SohAdO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
		InputGraphFile gf = new InputGraphFile(fm);&#xD;
		inputGraphString = gf.readGraphFile(inputFile);&#xD;
		this.inputFileName = gf.getGraphFileName();&#xD;
		description = new Description(inputGraphString);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SohAtO4Ee2O0cjNcmYJpQ" name="main" specification="_5LZQctO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SohA9O4Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SohBNO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoadDescription wld = new WorkLoadDescription(fileName);&#xD;
		Description content = wld.visualization();&#xD;
		// remove empty lines&#xD;
		for (int i = content.size() - 1; i >= 0; i--) {&#xD;
			// equals &quot;&quot; if the line only contains whitespace and newlines&#xD;
			if (content.get(i).trim().equals(&quot;&quot;)) {&#xD;
				content.remove(i);&#xD;
			}&#xD;
		}&#xD;
		// The title is the first word in the first index of the content&#xD;
		// split doesn't remove spaces from the middle&#xD;
		String title = content.remove(0).trim().split(&quot; &quot;)[0];&#xD;
		// there is a } at the end so remove it&#xD;
		content.remove(content.size() - 1);&#xD;
		// sort alphabetically&#xD;
		// Collator is a comparator that sorts string alphabetically&#xD;
		Collections.sort(content, Collator.getInstance());&#xD;
		System.out.println(title);&#xD;
		for (int i = 1; i &lt;= content.size(); i++) {&#xD;
			System.out.println(&quot;Flow &quot; + i + &quot;: &quot; + content.get(i - 1).trim());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LYCUdO4Ee2O0cjNcmYJpQ" name="WorkLoadDescription" visibility="package" method="_5Sog99O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LYCU9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LYCVNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LYCUtO4Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LYCVdO4Ee2O0cjNcmYJpQ" type="_5LYCUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LYpYNO4Ee2O0cjNcmYJpQ" name="visualization" method="_5Sog-tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QyGwNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LYpZNO4Ee2O0cjNcmYJpQ" name="fileVisualization" method="_5Sog_NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QyGwdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LYpaNO4Ee2O0cjNcmYJpQ" name="toString" method="_5Sog_tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LYpadO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LZQcNO4Ee2O0cjNcmYJpQ" name="initialize" visibility="private" method="_5SohANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LZQcdO4Ee2O0cjNcmYJpQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LZQctO4Ee2O0cjNcmYJpQ" name="main" isStatic="true" method="_5SohAtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LZQc9O4Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5LZQdNO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LZ3gNO4Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue">
              <generalization xmi:id="_5LZ3gtO4Ee2O0cjNcmYJpQ" general="_5LQtldO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SORMNO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SORMdO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpH8NO4Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue" specification="_5Rt64dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpH8dO4Ee2O0cjNcmYJpQ" name="comparitor" type="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpH8tO4Ee2O0cjNcmYJpQ" type="_5LZ3gNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpH89O4Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue" specification="_5Ruh8NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpH9NO4Ee2O0cjNcmYJpQ" name="comparitor" type="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpH9dO4Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_5QnusNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpH9tO4Ee2O0cjNcmYJpQ" type="_5LZ3gNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Rt64dO4Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue" visibility="package" method="_5SpH8NO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Rt649O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Rt65NO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Rt64tO4Ee2O0cjNcmYJpQ" name="comparitor" type="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rt65dO4Ee2O0cjNcmYJpQ" type="_5LZ3gNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ruh8NO4Ee2O0cjNcmYJpQ" name="SchedulableObjectQueue" visibility="package" method="_5SpH89O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Ruh89O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Ruh9NO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Ruh8dO4Ee2O0cjNcmYJpQ" name="comparitor" type="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Ruh8tO4Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_5QnusNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Ruh9dO4Ee2O0cjNcmYJpQ" type="_5LZ3gNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LaekdO4Ee2O0cjNcmYJpQ" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_C408xNejEe2IjMkQsyA0cQ">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SORMtO4Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SORM9O4Ee2O0cjNcmYJpQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SORNNO4Ee2O0cjNcmYJpQ" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SORNtO4Ee2O0cjNcmYJpQ" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SORONO4Ee2O0cjNcmYJpQ" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SOROdO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SORO9O4Ee2O0cjNcmYJpQ" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SO4QNO4Ee2O0cjNcmYJpQ" name="schedule" visibility="protected" type="_5LeI8NO4Ee2O0cjNcmYJpQ" association="_5TNIoNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SO4QtO4Ee2O0cjNcmYJpQ" name="poset" visibility="protected" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TNIo9O4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpH99O4Ee2O0cjNcmYJpQ" name="Schedule" specification="_5Qyt0NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpH-NO4Ee2O0cjNcmYJpQ" name="poset" type="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpH-dO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpH-tO4Ee2O0cjNcmYJpQ" type="_5LaekdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpIBdO4Ee2O0cjNcmYJpQ" name="getSchedule" specification="_5LbsstO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpIBtO4Ee2O0cjNcmYJpQ" type="_5LeI8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpIB9O4Ee2O0cjNcmYJpQ" name="buildSchedule" specification="_5Lbss9O4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpICNO4Ee2O0cjNcmYJpQ" name="toProgram" specification="_5LbstNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpICdO4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpICtO4Ee2O0cjNcmYJpQ" name="replaceNullWithSleep" specification="_5Qyt2NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpIC9O4Ee2O0cjNcmYJpQ" name="program" type="_5LNqQNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpIDNO4Ee2O0cjNcmYJpQ" name="fakeSchedulingToTestRest" specification="_5Qyt2tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpIDdO4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpIDtO4Ee2O0cjNcmYJpQ" name="getChannelAndSetStartTime" specification="_5Qyt3NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpID9O4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpIENO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpIEdO4Ee2O0cjNcmYJpQ" name="findChannelAndTime" specification="_5QzU4NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpIEtO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpIE9O4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpIFNO4Ee2O0cjNcmYJpQ" type="_5LbFoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvANO4Ee2O0cjNcmYJpQ" name="continueSearch" specification="_5QzU5NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvAdO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvAtO4Ee2O0cjNcmYJpQ" name="activation" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvA9O4Ee2O0cjNcmYJpQ" type="_5LbFoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvBNO4Ee2O0cjNcmYJpQ" name="noOtherChannelConflicts" specification="_5QzU6NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvBdO4Ee2O0cjNcmYJpQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvBtO4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvB9O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvCNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvCdO4Ee2O0cjNcmYJpQ" name="conflictsExist" specification="_5QzU7dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvCtO4Ee2O0cjNcmYJpQ" name="obj" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvC9O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvDNO4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvDdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvDtO4Ee2O0cjNcmYJpQ" name="freeOfCoordinatorConflicts" specification="_5Qz78NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvD9O4Ee2O0cjNcmYJpQ" name="obj" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvENO4Ee2O0cjNcmYJpQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvEdO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvEtO4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvE9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvFNO4Ee2O0cjNcmYJpQ" name="isAvailable" specification="_5Qz79tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvFdO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvFtO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvF9O4Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvGNO4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvGdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvGtO4Ee2O0cjNcmYJpQ" name="isAvailable" specification="_5Qz7_NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvG9O4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvHNO4Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvHdO4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvHtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvH9O4Ee2O0cjNcmYJpQ" name="timeRemaining" specification="_5LcTwNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvINO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvIdO4Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvItO4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvI9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvJNO4Ee2O0cjNcmYJpQ" name="canCombineEntriesInPlace" specification="_5Qz8AdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvJdO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvJtO4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvJ9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvKNO4Ee2O0cjNcmYJpQ" name="combinedEntriesInPlace" specification="_5Q0jANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvKdO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvKtO4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvK9O4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SpvLNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvLdO4Ee2O0cjNcmYJpQ" name="addToSchedule" specification="_5Q0jBdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvLtO4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SpvL9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvMNO4Ee2O0cjNcmYJpQ" name="reportNotSchedulable" specification="_5Q0jCNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SpvMdO4Ee2O0cjNcmYJpQ" name="object" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvMtO4Ee2O0cjNcmYJpQ" name="printVerbose" specification="_5LcTxdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpvM9O4Ee2O0cjNcmYJpQ" name="print" specification="_5Lc60NO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LbsstO4Ee2O0cjNcmYJpQ" name="getSchedule" method="_5SpIBdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C408x9ejEe2IjMkQsyA0cQ">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qyt1tO4Ee2O0cjNcmYJpQ" type="_5LeI8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lbss9O4Ee2O0cjNcmYJpQ" name="buildSchedule" visibility="private" method="_5SpIB9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5LbstNO4Ee2O0cjNcmYJpQ" name="toProgram" method="_5SpICNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qyt19O4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LcTwNO4Ee2O0cjNcmYJpQ" name="timeRemaining" visibility="protected" method="_5SpvH9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C408zdejEe2IjMkQsyA0cQ">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LcTwdO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LcTwtO4Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LcTw9O4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LcTxNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LcTxdO4Ee2O0cjNcmYJpQ" name="printVerbose" method="_5SpvMtO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5Lc60NO4Ee2O0cjNcmYJpQ" name="print" method="_5SpvM9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5Qyt0NO4Ee2O0cjNcmYJpQ" name="Schedule" visibility="package" method="_5SpH99O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Qyt09O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Qyt1NO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Qyt0dO4Ee2O0cjNcmYJpQ" name="poset" type="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qyt0tO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qyt1dO4Ee2O0cjNcmYJpQ" type="_5LaekdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qyt2NO4Ee2O0cjNcmYJpQ" name="replaceNullWithSleep" visibility="private" method="_5SpICtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C408yNejEe2IjMkQsyA0cQ">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qyt2dO4Ee2O0cjNcmYJpQ" name="program" type="_5LNqQNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qyt2tO4Ee2O0cjNcmYJpQ" name="fakeSchedulingToTestRest" visibility="private" method="_5SpIDNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qyt29O4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qyt3NO4Ee2O0cjNcmYJpQ" name="getChannelAndSetStartTime" visibility="protected" method="_5SpIDtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C408ydejEe2IjMkQsyA0cQ">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qyt3dO4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qyt3tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QzU4NO4Ee2O0cjNcmYJpQ" name="findChannelAndTime" visibility="protected" method="_5SpIEdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QzU4dO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QzU4tO4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QzU49O4Ee2O0cjNcmYJpQ" type="_5LbFoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QzU5NO4Ee2O0cjNcmYJpQ" name="continueSearch" visibility="protected" method="_5SpvANO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C408ytejEe2IjMkQsyA0cQ">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_5QzU5dO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QzU5tO4Ee2O0cjNcmYJpQ" name="activation" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QzU59O4Ee2O0cjNcmYJpQ" type="_5LbFoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5QzU6NO4Ee2O0cjNcmYJpQ" name="noOtherChannelConflicts" visibility="protected" method="_5SpvBNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QzU6dO4Ee2O0cjNcmYJpQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QzU6tO4Ee2O0cjNcmYJpQ" name="schedulableObject" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QzU69O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QzU7NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5QzU7dO4Ee2O0cjNcmYJpQ" name="conflictsExist" visibility="protected" method="_5SpvCdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5QzU7tO4Ee2O0cjNcmYJpQ" name="obj" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5QzU79O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QzU8NO4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5QzU8dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qz78NO4Ee2O0cjNcmYJpQ" name="freeOfCoordinatorConflicts" visibility="protected" method="_5SpvDtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qz78dO4Ee2O0cjNcmYJpQ" name="obj" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qz78tO4Ee2O0cjNcmYJpQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qz789O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qz79NO4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qz79dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qz79tO4Ee2O0cjNcmYJpQ" name="isAvailable" visibility="protected" method="_5SpvFNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C408y9ejEe2IjMkQsyA0cQ">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qz799O4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qz7-NO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qz7-dO4Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qz7-tO4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qz7-9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qz7_NO4Ee2O0cjNcmYJpQ" name="isAvailable" visibility="protected" method="_5SpvGtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C408zNejEe2IjMkQsyA0cQ">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Qz7_dO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qz7_tO4Ee2O0cjNcmYJpQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qz7_9O4Ee2O0cjNcmYJpQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Qz8ANO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Qz8AdO4Ee2O0cjNcmYJpQ" name="canCombineEntriesInPlace" visibility="private" method="_5SpvJNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Qz8AtO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qz8A9O4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Qz8BNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q0jANO4Ee2O0cjNcmYJpQ" name="combinedEntriesInPlace" visibility="private" method="_5SpvKNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Q0jAdO4Ee2O0cjNcmYJpQ" name="a1" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q0jAtO4Ee2O0cjNcmYJpQ" name="a2" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q0jA9O4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Q0jBNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q0jBdO4Ee2O0cjNcmYJpQ" name="addToSchedule" visibility="protected" method="_5SpvLdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Q0jBtO4Ee2O0cjNcmYJpQ" name="next" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q0jB9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q0jCNO4Ee2O0cjNcmYJpQ" name="reportNotSchedulable" visibility="private" method="_5SpvMNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Q0jCdO4Ee2O0cjNcmYJpQ" name="object" type="_5Kl_NdO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_5LbFoNO4Ee2O0cjNcmYJpQ" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_5SO4RNO4Ee2O0cjNcmYJpQ" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_5SO4RtO4Ee2O0cjNcmYJpQ" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpH-9O4Ee2O0cjNcmYJpQ" name="ScheduleLocation" specification="_5LbFodO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SpH_NO4Ee2O0cjNcmYJpQ" type="_5LbFoNO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpH_dO4Ee2O0cjNcmYJpQ" name="ScheduleLocation" specification="_5LbFpdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SpH_tO4Ee2O0cjNcmYJpQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_5SpH_9O4Ee2O0cjNcmYJpQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_5SpIANO4Ee2O0cjNcmYJpQ" type="_5LbFoNO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpIAdO4Ee2O0cjNcmYJpQ" name="getChannel" specification="_5LbFq9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SpIAtO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SpIA9O4Ee2O0cjNcmYJpQ" name="getTime" specification="_5LbssNO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SpIBNO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_5LbFodO4Ee2O0cjNcmYJpQ" name="ScheduleLocation" visibility="package" method="_5SpH-9O4Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_5LbFotO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_5LbFo9O4Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_5LbFpNO4Ee2O0cjNcmYJpQ" type="_5LbFoNO4Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5LbFpdO4Ee2O0cjNcmYJpQ" name="ScheduleLocation" visibility="package" method="_5SpH_dO4Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_5LbFqNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_5LbFqdO4Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_5LbFptO4Ee2O0cjNcmYJpQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_5LbFp9O4Ee2O0cjNcmYJpQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_5LbFqtO4Ee2O0cjNcmYJpQ" type="_5LbFoNO4Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5LbFq9O4Ee2O0cjNcmYJpQ" name="getChannel" visibility="protected" method="_5SpIAdO4Ee2O0cjNcmYJpQ">
                  <ownedComment xmi:id="_C408xdejEe2IjMkQsyA0cQ">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_5LbFrNO4Ee2O0cjNcmYJpQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_5LbssNO4Ee2O0cjNcmYJpQ" name="getTime" visibility="protected" method="_5SpIA9O4Ee2O0cjNcmYJpQ">
                  <ownedComment xmi:id="_C408xtejEe2IjMkQsyA0cQ">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_5LbssdO4Ee2O0cjNcmYJpQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LeI8NO4Ee2O0cjNcmYJpQ" name="ScheduleTable">
              <generalization xmi:id="_5Q1KENO4Ee2O0cjNcmYJpQ" general="_5LhzUNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SPfUNO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SPfUdO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWENO4Ee2O0cjNcmYJpQ" name="ScheduleTable" specification="_5LeI8dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWEdO4Ee2O0cjNcmYJpQ" type="_5LeI8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWEtO4Ee2O0cjNcmYJpQ" name="ScheduleTable" specification="_5LewA9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWE9O4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWFNO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWFdO4Ee2O0cjNcmYJpQ" type="_5LeI8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LeI8dO4Ee2O0cjNcmYJpQ" name="ScheduleTable" visibility="package" method="_5SqWENO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LewANO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LewAdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LewAtO4Ee2O0cjNcmYJpQ" type="_5LeI8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LewA9O4Ee2O0cjNcmYJpQ" name="ScheduleTable" visibility="package" method="_5SqWEtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LewBtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LewB9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LewBNO4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LewBdO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LewCNO4Ee2O0cjNcmYJpQ" type="_5LeI8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LewCdO4Ee2O0cjNcmYJpQ" name="ScheduleTime">
              <ownedAttribute xmi:id="_5SPfUtO4Ee2O0cjNcmYJpQ" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SPfU9O4Ee2O0cjNcmYJpQ" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWFtO4Ee2O0cjNcmYJpQ" name="ScheduleTime" specification="_5LewCtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWF9O4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWGNO4Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWGdO4Ee2O0cjNcmYJpQ" type="_5LewCdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LewCtO4Ee2O0cjNcmYJpQ" name="ScheduleTime" visibility="package" method="_5SqWFtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LewDdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LewDtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LewC9O4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LewDNO4Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LfXENO4Ee2O0cjNcmYJpQ" type="_5LewCdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LfXEdO4Ee2O0cjNcmYJpQ" name="SimulatorInput">
              <ownedComment xmi:id="_C408wtejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LfXEtO4Ee2O0cjNcmYJpQ" name="SortedPeriodQueue">
              <generalization xmi:id="_5Lf-I9O4Ee2O0cjNcmYJpQ" general="_5LQtldO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SPfVNO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SPfVdO4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWGtO4Ee2O0cjNcmYJpQ" name="SortedPeriodQueue" specification="_5LfXFNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWG9O4Ee2O0cjNcmYJpQ" type="_5LfXEtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWHNO4Ee2O0cjNcmYJpQ" name="SortedPeriodQueue" specification="_5Q1xINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWHdO4Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_5QnusNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SqWHtO4Ee2O0cjNcmYJpQ" type="_5LfXEtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LfXFNO4Ee2O0cjNcmYJpQ" name="SortedPeriodQueue" visibility="package" method="_5SqWGtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Lf-INO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Lf-IdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Lf-ItO4Ee2O0cjNcmYJpQ" type="_5LfXEtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q1xINO4Ee2O0cjNcmYJpQ" name="SortedPeriodQueue" visibility="package" method="_5SqWHNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Q1xItO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Q1xI9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Q1xIdO4Ee2O0cjNcmYJpQ" name="schedulableObjects" type="_5QnusNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q1xJNO4Ee2O0cjNcmYJpQ" type="_5LfXEtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_5Lf-JdO4Ee2O0cjNcmYJpQ" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_5Q1xJtO4Ee2O0cjNcmYJpQ" general="_5LTJ0NO4Ee2O0cjNcmYJpQ"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_5LglMNO4Ee2O0cjNcmYJpQ" name="ScheduleChoices">
                <ownedLiteral xmi:id="_5LglMtO4Ee2O0cjNcmYJpQ" name="PRIORITY"/>
                <ownedLiteral xmi:id="_5LglM9O4Ee2O0cjNcmYJpQ" name="RM"/>
                <ownedLiteral xmi:id="_5LglNNO4Ee2O0cjNcmYJpQ" name="DM"/>
                <ownedLiteral xmi:id="_5LglNdO4Ee2O0cjNcmYJpQ" name="RTHART"/>
                <ownedLiteral xmi:id="_5LglNtO4Ee2O0cjNcmYJpQ" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_5LglN9O4Ee2O0cjNcmYJpQ" name="POSET_RM"/>
                <ownedLiteral xmi:id="_5LglONO4Ee2O0cjNcmYJpQ" name="POSET_DM"/>
                <ownedLiteral xmi:id="_5LglOdO4Ee2O0cjNcmYJpQ" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_5LglOtO4Ee2O0cjNcmYJpQ" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_5LglO9O4Ee2O0cjNcmYJpQ" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_5LglPNO4Ee2O0cjNcmYJpQ" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_5LglPdO4Ee2O0cjNcmYJpQ" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_5LglPtO4Ee2O0cjNcmYJpQ" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_5LglP9O4Ee2O0cjNcmYJpQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5LglQNO4Ee2O0cjNcmYJpQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5LhMQNO4Ee2O0cjNcmYJpQ" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5LhMQdO4Ee2O0cjNcmYJpQ" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5LhMQtO4Ee2O0cjNcmYJpQ" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5LhMQ9O4Ee2O0cjNcmYJpQ" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LhMRNO4Ee2O0cjNcmYJpQ" name="SystemFactory">
              <ownedComment xmi:id="_C408w9ejEe2IjMkQsyA0cQ">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_B-LSYNejEe2IjMkQsyA0cQ" name="create" specification="_B9jnUNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_B-LSYdejEe2IjMkQsyA0cQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B-LSYtejEe2IjMkQsyA0cQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_B-LSY9ejEe2IjMkQsyA0cQ" name="choice" type="_5Q2YMNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B-LSZNejEe2IjMkQsyA0cQ" type="_5Lv1wNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new WarpSystem(workload, numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_B9jnUNejEe2IjMkQsyA0cQ" name="create" isStatic="true" method="_B-LSYNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_B9jnUdejEe2IjMkQsyA0cQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B9jnUtejEe2IjMkQsyA0cQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_B9jnU9ejEe2IjMkQsyA0cQ" name="choice" type="_5Q2YMNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B9jnVNejEe2IjMkQsyA0cQ" type="_5Lv1wNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LhzUNO4Ee2O0cjNcmYJpQ" name="Table">
              <generalization xmi:id="_5RvwENO4Ee2O0cjNcmYJpQ" general="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SPfVtO4Ee2O0cjNcmYJpQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SPfV9O4Ee2O0cjNcmYJpQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWJNO4Ee2O0cjNcmYJpQ" name="Table" specification="_5LhzUtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWJdO4Ee2O0cjNcmYJpQ" type="_5LhzUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWJtO4Ee2O0cjNcmYJpQ" name="Table" specification="_5LhzVtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWJ9O4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWKNO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWKdO4Ee2O0cjNcmYJpQ" type="_5LhzUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWKtO4Ee2O0cjNcmYJpQ" name="getNumRows" specification="_5LiaY9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWK9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWLNO4Ee2O0cjNcmYJpQ" name="getNumColumns" specification="_5LiaZdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWLdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWLtO4Ee2O0cjNcmYJpQ" name="set" specification="_5RvJANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWL9O4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWMNO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWMdO4Ee2O0cjNcmYJpQ" name="element" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SqWMtO4Ee2O0cjNcmYJpQ" name="get" specification="_5LiaZ9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SqWM9O4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWNNO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SqWNdO4Ee2O0cjNcmYJpQ" type="_5RgfgNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LhzUtO4Ee2O0cjNcmYJpQ" name="Table" method="_5SqWJNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LhzU9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LhzVNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LhzVdO4Ee2O0cjNcmYJpQ" type="_5LhzUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LhzVtO4Ee2O0cjNcmYJpQ" name="Table" method="_5SqWJtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5LiaYNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5LiaYdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5LhzV9O4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LhzWNO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LiaYtO4Ee2O0cjNcmYJpQ" type="_5LhzUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LiaY9O4Ee2O0cjNcmYJpQ" name="getNumRows" method="_5SqWKtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LiaZNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LiaZdO4Ee2O0cjNcmYJpQ" name="getNumColumns" method="_5SqWLNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LiaZtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LiaZ9O4Ee2O0cjNcmYJpQ" name="get" method="_5SqWMtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LiaaNO4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LiaadO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RvJBNO4Ee2O0cjNcmYJpQ" type="_5RgfgNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RvJANO4Ee2O0cjNcmYJpQ" name="set" method="_5SqWLtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RvJAdO4Ee2O0cjNcmYJpQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RvJAtO4Ee2O0cjNcmYJpQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RvJA9O4Ee2O0cjNcmYJpQ" name="element" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_5LjBcNO4Ee2O0cjNcmYJpQ" name="Visualization">
              <ownedComment xmi:id="_C408wdejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_5LjBcdO4Ee2O0cjNcmYJpQ" name="SystemChoices">
                <ownedLiteral xmi:id="_5LjBc9O4Ee2O0cjNcmYJpQ" name="SOURCE"/>
                <ownedLiteral xmi:id="_5LjBdNO4Ee2O0cjNcmYJpQ" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_5LjBddO4Ee2O0cjNcmYJpQ" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_5LjBdtO4Ee2O0cjNcmYJpQ" name="LATENCY"/>
                <ownedLiteral xmi:id="_5LjBd9O4Ee2O0cjNcmYJpQ" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_5LjBeNO4Ee2O0cjNcmYJpQ" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_5LjBedO4Ee2O0cjNcmYJpQ" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_5LjBetO4Ee2O0cjNcmYJpQ" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_5LjogdO4Ee2O0cjNcmYJpQ" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_5LjogtO4Ee2O0cjNcmYJpQ" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_5Ljog9O4Ee2O0cjNcmYJpQ" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_5LjohNO4Ee2O0cjNcmYJpQ" name="toDisplay"/>
              <ownedOperation xmi:id="_5LjohdO4Ee2O0cjNcmYJpQ" name="toFile"/>
              <ownedOperation xmi:id="_5LjohtO4Ee2O0cjNcmYJpQ" name="toString">
                <ownedParameter xmi:id="_5Ljoh9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LjoiNO4Ee2O0cjNcmYJpQ" name="VisualizationFactory">
              <ownedComment xmi:id="_C408wNejEe2IjMkQsyA0cQ">
                <body>Factory Class to create a visualization instance. This factory can be used to&#xD;
create different types of visualizations.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_B-L5cNejEe2IjMkQsyA0cQ" name="createProgramVisualization" specification="_B9kOYNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_B-L5cdejEe2IjMkQsyA0cQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B-L5ctejEe2IjMkQsyA0cQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_B-L5c9ejEe2IjMkQsyA0cQ" name="choice" type="_5Q2_QNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B-L5dNejEe2IjMkQsyA0cQ" type="_5LjBcNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_B-L5ddejEe2IjMkQsyA0cQ" name="createWorkLoadVisualization" specification="_B9k1cdejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_B-L5dtejEe2IjMkQsyA0cQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B-L5d9ejEe2IjMkQsyA0cQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_B-L5eNejEe2IjMkQsyA0cQ" name="choice" type="_5Q2_QtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B-L5edejEe2IjMkQsyA0cQ" type="_5LjBcNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_B9kOYNejEe2IjMkQsyA0cQ" name="createProgramVisualization" isStatic="true" method="_B-L5cNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_B9kOYdejEe2IjMkQsyA0cQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B9kOYtejEe2IjMkQsyA0cQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_B9kOY9ejEe2IjMkQsyA0cQ" name="choice" type="_5Q2_QNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B9k1cNejEe2IjMkQsyA0cQ" type="_5LjBcNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_B9k1cdejEe2IjMkQsyA0cQ" name="createWorkLoadVisualization" isStatic="true" method="_B-L5ddejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_B9k1ctejEe2IjMkQsyA0cQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B9k1c9ejEe2IjMkQsyA0cQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_B9k1dNejEe2IjMkQsyA0cQ" name="choice" type="_5Q2_QtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B9k1ddejEe2IjMkQsyA0cQ" type="_5LjBcNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LkPkNO4Ee2O0cjNcmYJpQ" name="VisualizationImplementation">
              <ownedComment xmi:id="_DTwlVtejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SPfWNO4Ee2O0cjNcmYJpQ" name="visualization" visibility="private" type="_5K0BoNO4Ee2O0cjNcmYJpQ" association="_5TNIptO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SQGYdO4Ee2O0cjNcmYJpQ" name="fileContent" visibility="private" type="_5K0BoNO4Ee2O0cjNcmYJpQ" association="_5TNIqdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SQGY9O4Ee2O0cjNcmYJpQ" name="window" visibility="private" type="_5K_n0NO4Ee2O0cjNcmYJpQ" association="_5TNvsdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SQGZdO4Ee2O0cjNcmYJpQ" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SQGZ9O4Ee2O0cjNcmYJpQ" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SQGadO4Ee2O0cjNcmYJpQ" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SQGa9O4Ee2O0cjNcmYJpQ" name="fm" visibility="private" type="_5K3E8NO4Ee2O0cjNcmYJpQ" association="_5TNvtNO4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SQGbNO4Ee2O0cjNcmYJpQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SQtcdO4Ee2O0cjNcmYJpQ" name="warp" visibility="private" type="_5Lv1wNO4Ee2O0cjNcmYJpQ" association="_5TNvt9O4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SQtctO4Ee2O0cjNcmYJpQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SQtdNO4Ee2O0cjNcmYJpQ" name="workLoad" visibility="private" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5TOWwNO4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SQtddO4Ee2O0cjNcmYJpQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SQtd9O4Ee2O0cjNcmYJpQ" name="visualizationObject" visibility="private" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" association="_5TOWw9O4Ee2O0cjNcmYJpQ"/>
              <interfaceRealization xmi:id="_5Q3mVtO4Ee2O0cjNcmYJpQ" client="_5LkPkNO4Ee2O0cjNcmYJpQ" supplier="_5LjBcNO4Ee2O0cjNcmYJpQ" contract="_5LjBcNO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9KtO4Ee2O0cjNcmYJpQ" name="VisualizationImplementation" specification="_5RwXItO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sq9K9O4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sq9LNO4Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sq9LdO4Ee2O0cjNcmYJpQ" name="choice" type="_5RwXINO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sq9LtO4Ee2O0cjNcmYJpQ" type="_5LkPkNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
		this.warp = warp;&#xD;
		inputFileName = warp.toWorkload().getInputFileName();&#xD;
		this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
		visualizationObject = null;&#xD;
		createVisualization(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9L9O4Ee2O0cjNcmYJpQ" name="VisualizationImplementation" specification="_5RwXK9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sq9MNO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sq9MdO4Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sq9MtO4Ee2O0cjNcmYJpQ" name="choice" type="_5RwXKdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sq9M9O4Ee2O0cjNcmYJpQ" type="_5LkPkNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
		this.workLoad = workLoad;&#xD;
		inputFileName = workLoad.getInputFileName();&#xD;
		this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
		visualizationObject = null;&#xD;
		createVisualization(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9NNO4Ee2O0cjNcmYJpQ" name="toDisplay" specification="_5Lk2oNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
		if (window != null) {&#xD;
			window.setVisible();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9NdO4Ee2O0cjNcmYJpQ" name="toFile" specification="_5Lk2pNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9NtO4Ee2O0cjNcmYJpQ" name="toString" specification="_5Lk2qNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sq9N9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9ONO4Ee2O0cjNcmYJpQ" name="createVisualization" specification="_5RwXMtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sq9OdO4Ee2O0cjNcmYJpQ" name="choice" type="_5RwXINO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
		case SOURCE:&#xD;
			createVisualization(new ProgramVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case RELIABILITIES:&#xD;
			// TODO Implement Reliability Analysis Visualization&#xD;
			createVisualization(new ReliabilityVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case SIMULATOR_INPUT:&#xD;
			// TODO Implement Simulator Input Visualization&#xD;
			createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
			break;&#xD;
&#xD;
		case LATENCY:&#xD;
			// TODO Implement Latency Analysis Visualization&#xD;
			createVisualization(new LatencyVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case CHANNEL:&#xD;
			// TODO Implement Channel Analysis Visualization&#xD;
			createVisualization(new ChannelVisualization(warp));&#xD;
			break;&#xD;
&#xD;
		case LATENCY_REPORT:&#xD;
			createVisualization(&#xD;
					new ReportVisualization(fm, warp, new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
			break;&#xD;
&#xD;
		case DEADLINE_REPORT:&#xD;
			createVisualization(new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9OtO4Ee2O0cjNcmYJpQ" name="createVisualization" specification="_5RwXNNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sq9O9O4Ee2O0cjNcmYJpQ" name="choice" type="_5RwXKdO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
		case COMUNICATION_GRAPH:&#xD;
			// createWarpVisualization();&#xD;
			createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
			break;&#xD;
&#xD;
		case GRAPHVIZ:&#xD;
			createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
			break;&#xD;
&#xD;
		case INPUT_GRAPH:&#xD;
			createVisualization(workLoad);&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
			break;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9PNO4Ee2O0cjNcmYJpQ" name="createVisualization" specification="_5RwXNtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sq9PdO4Ee2O0cjNcmYJpQ" name="obj" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
		fileContent = obj.fileVisualization();&#xD;
		/* display is file content printed to console */&#xD;
		fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
		visualizationObject = obj;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9PtO4Ee2O0cjNcmYJpQ" name="createFileNameTemplate" specification="_5Llds9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sq9P9O4Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sq9QNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
		var workingDirectory = fm.getBaseDirectory();&#xD;
		var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
		// Now create the fileNameTemplate using full output path and input filename&#xD;
		if (inputFileName.contains(&quot;/&quot;)) {&#xD;
			var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
			fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
		} else {&#xD;
			fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
		}&#xD;
		return fileNameTemplate;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Lk2oNO4Ee2O0cjNcmYJpQ" name="toDisplay" method="_5Sq9NNO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5Lk2pNO4Ee2O0cjNcmYJpQ" name="toFile" method="_5Sq9NdO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5Lk2qNO4Ee2O0cjNcmYJpQ" name="toString" method="_5Sq9NtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Lk2qdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Llds9O4Ee2O0cjNcmYJpQ" name="createFileNameTemplate" visibility="private" method="_5Sq9PtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LldtNO4Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LldtdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RwXItO4Ee2O0cjNcmYJpQ" name="VisualizationImplementation" method="_5Sq9KtO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RwXJtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RwXJ9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5RwXI9O4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RwXJNO4Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RwXJdO4Ee2O0cjNcmYJpQ" name="choice" type="_5RwXINO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RwXKNO4Ee2O0cjNcmYJpQ" type="_5LkPkNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RwXK9O4Ee2O0cjNcmYJpQ" name="VisualizationImplementation" method="_5Sq9L9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RwXL9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RwXMNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5RwXLNO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RwXLdO4Ee2O0cjNcmYJpQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RwXLtO4Ee2O0cjNcmYJpQ" name="choice" type="_5RwXKdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RwXMdO4Ee2O0cjNcmYJpQ" type="_5LkPkNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RwXMtO4Ee2O0cjNcmYJpQ" name="createVisualization" visibility="private" method="_5Sq9ONO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RwXM9O4Ee2O0cjNcmYJpQ" name="choice" type="_5RwXINO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RwXNNO4Ee2O0cjNcmYJpQ" name="createVisualization" visibility="private" method="_5Sq9OtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RwXNdO4Ee2O0cjNcmYJpQ" name="choice" type="_5RwXKdO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RwXNtO4Ee2O0cjNcmYJpQ" name="createVisualization" visibility="private" method="_5Sq9PNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RwXN9O4Ee2O0cjNcmYJpQ" name="obj" type="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5Lmr0NO4Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_C40VttejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SRUgNO4Ee2O0cjNcmYJpQ" name="fm" visibility="private" type="_5K3E8NO4Ee2O0cjNcmYJpQ" association="_5TOWxtO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SRUgtO4Ee2O0cjNcmYJpQ" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SRUhNO4Ee2O0cjNcmYJpQ" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SRUhtO4Ee2O0cjNcmYJpQ" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SRUh9O4Ee2O0cjNcmYJpQ" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SRUiNO4Ee2O0cjNcmYJpQ" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SRUidO4Ee2O0cjNcmYJpQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sq9QdO4Ee2O0cjNcmYJpQ" name="VisualizationObject" specification="_5Q40cNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sq9QtO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sq9Q9O4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sq9RNO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sq9RdO4Ee2O0cjNcmYJpQ" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;, String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
				String.valueOf(workLoad.getE2e()));&#xD;
		this.suffix = suffix;&#xD;
		visualizationData = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkMNO4Ee2O0cjNcmYJpQ" name="VisualizationObject" specification="_5Q40d9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkMdO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SrkMtO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lf-JdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SrkM9O4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkNNO4Ee2O0cjNcmYJpQ" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e());&#xD;
		}&#xD;
		this.suffix = suffix;&#xD;
		visualizationData = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkNdO4Ee2O0cjNcmYJpQ" name="VisualizationObject" specification="_5Q5bgNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkNtO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SrkN9O4Ee2O0cjNcmYJpQ" name="warp" type="_5Lf-JdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SrkONO4Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkOdO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkOtO4Ee2O0cjNcmYJpQ" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
					+ nameExtension;&#xD;
		}&#xD;
&#xD;
		this.suffix = suffix;&#xD;
		visualizationData = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkO9O4Ee2O0cjNcmYJpQ" name="VisualizationObject" specification="_5Q5biNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkPNO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SrkPdO4Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkPtO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkP9O4Ee2O0cjNcmYJpQ" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = nameExtension;&#xD;
		this.suffix = suffix;&#xD;
		visualizationData = null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkQNO4Ee2O0cjNcmYJpQ" name="nameExtension" specification="_5Rw-MtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkQdO4Ee2O0cjNcmYJpQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkQtO4Ee2O0cjNcmYJpQ" name="m" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SrkQ9O4Ee2O0cjNcmYJpQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkRNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkRdO4Ee2O0cjNcmYJpQ" name="nameExtension" specification="_5LnS4NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkRtO4Ee2O0cjNcmYJpQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkR9O4Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkSNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkSdO4Ee2O0cjNcmYJpQ" name="getFileManager" specification="_5LnS5NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkStO4Ee2O0cjNcmYJpQ" type="_5K3E8NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkS9O4Ee2O0cjNcmYJpQ" name="visualization" specification="_5LnS5dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkTNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
		var data = createVisualizationData();&#xD;
&#xD;
		if (data != null) {&#xD;
			String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
			content.add(nodeString);&#xD;
&#xD;
			for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
				var row = data[rowIndex];&#xD;
				String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
				content.add(rowString);&#xD;
			}&#xD;
		} else {&#xD;
			content.add(NOT_IMPLEMENTED);&#xD;
		}&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkTdO4Ee2O0cjNcmYJpQ" name="createFile" specification="_5LnS5tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkTtO4Ee2O0cjNcmYJpQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SrkT9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkUNO4Ee2O0cjNcmYJpQ" name="fileVisualization" specification="_5LnS6dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkUdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
		fileContent.addAll(visualization());&#xD;
		fileContent.addAll(createFooter());&#xD;
		return fileContent;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkUtO4Ee2O0cjNcmYJpQ" name="displayVisualization" specification="_5Ln58NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkU9O4Ee2O0cjNcmYJpQ" type="_5K_n0NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null; // not implemented&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkVNO4Ee2O0cjNcmYJpQ" name="createHeader" specification="_5Ln58dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkVdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkVtO4Ee2O0cjNcmYJpQ" name="createFooter" specification="_5Ln58tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkV9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkWNO4Ee2O0cjNcmYJpQ" name="createColumnHeader" specification="_5Ln589O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkWdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SrkWtO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] { NOT_IMPLEMENTED };&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SrkW9O4Ee2O0cjNcmYJpQ" name="createVisualizationData" specification="_5Ln599O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SrkXNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SrkXdO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LnS4NO4Ee2O0cjNcmYJpQ" name="nameExtension" visibility="private" method="_5SrkRdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LnS4dO4Ee2O0cjNcmYJpQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LnS4tO4Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LnS49O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LnS5NO4Ee2O0cjNcmYJpQ" name="getFileManager" method="_5SrkSdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C40Vt9ejEe2IjMkQsyA0cQ">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Q5bj9O4Ee2O0cjNcmYJpQ" type="_5K3E8NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LnS5dO4Ee2O0cjNcmYJpQ" name="visualization" method="_5SrkS9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Q5bkNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LnS5tO4Ee2O0cjNcmYJpQ" name="createFile" method="_5SrkTdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LnS59O4Ee2O0cjNcmYJpQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5LnS6NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LnS6dO4Ee2O0cjNcmYJpQ" name="fileVisualization" method="_5SrkUNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Q5bkdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ln58NO4Ee2O0cjNcmYJpQ" name="displayVisualization" method="_5SrkUtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Q5bktO4Ee2O0cjNcmYJpQ" type="_5K_n0NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ln58dO4Ee2O0cjNcmYJpQ" name="createHeader" visibility="protected" method="_5SrkVNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Q5bk9O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ln58tO4Ee2O0cjNcmYJpQ" name="createFooter" visibility="protected" method="_5SrkVtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Q6CkNO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ln589O4Ee2O0cjNcmYJpQ" name="createColumnHeader" visibility="protected" method="_5SrkWNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Ln59NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Ln59dO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ln599O4Ee2O0cjNcmYJpQ" name="createVisualizationData" visibility="protected" method="_5SrkW9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Ln5-NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Ln5-dO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q40cNO4Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" method="_5Sq9QdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Q40dNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Q40ddO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Q40cdO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q40ctO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q40c9O4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Q40dtO4Ee2O0cjNcmYJpQ" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q40d9O4Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" method="_5SrkMNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Q40e9O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Q40fNO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Q40eNO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q40edO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lf-JdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q40etO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Q40fdO4Ee2O0cjNcmYJpQ" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q5bgNO4Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" method="_5SrkNdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Q5bhdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Q5bhtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Q5bgdO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q5bgtO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lf-JdO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q5bg9O4Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Q5bhNO4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Q5bh9O4Ee2O0cjNcmYJpQ" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q5biNO4Ee2O0cjNcmYJpQ" name="VisualizationObject" visibility="package" method="_5SrkO9O4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5Q5bjNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5Q5bjdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5Q5bidO4Ee2O0cjNcmYJpQ" name="fm" type="_5K3E8NO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Q5bitO4Ee2O0cjNcmYJpQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Q5bi9O4Ee2O0cjNcmYJpQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Q5bjtO4Ee2O0cjNcmYJpQ" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Rw-MtO4Ee2O0cjNcmYJpQ" name="nameExtension" visibility="private" method="_5SrkQNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Rw-M9O4Ee2O0cjNcmYJpQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Rw-NNO4Ee2O0cjNcmYJpQ" name="m" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Rw-NdO4Ee2O0cjNcmYJpQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Rw-NtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LpIENO4Ee2O0cjNcmYJpQ" name="Warp">
              <ownedComment xmi:id="_C42K4dejEe2IjMkQsyA0cQ">
                <body>&lt;h1>This is the entry point to the warp program.&lt;/h1>&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SR7kNO4Ee2O0cjNcmYJpQ" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SR7kdO4Ee2O0cjNcmYJpQ" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SR7ktO4Ee2O0cjNcmYJpQ" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_5RreodO4Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SR7k9O4Ee2O0cjNcmYJpQ" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SR7lNO4Ee2O0cjNcmYJpQ" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_5RreodO4Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SR7ldO4Ee2O0cjNcmYJpQ" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SR7ltO4Ee2O0cjNcmYJpQ" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SR7l9O4Ee2O0cjNcmYJpQ" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SR7mNO4Ee2O0cjNcmYJpQ" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_5Q2YMNO4Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SR7mdO4Ee2O0cjNcmYJpQ" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SR7mtO4Ee2O0cjNcmYJpQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SR7m9O4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SR7nNO4Ee2O0cjNcmYJpQ" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SSiodO4Ee2O0cjNcmYJpQ" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SSio9O4Ee2O0cjNcmYJpQ" name="minLQ" visibility="private" isStatic="true" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SSipdO4Ee2O0cjNcmYJpQ" name="e2e" visibility="private" isStatic="true" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SSip9O4Ee2O0cjNcmYJpQ" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SSiqdO4Ee2O0cjNcmYJpQ" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SSiq9O4Ee2O0cjNcmYJpQ" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SSirdO4Ee2O0cjNcmYJpQ" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STJsdO4Ee2O0cjNcmYJpQ" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STJs9O4Ee2O0cjNcmYJpQ" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STJtdO4Ee2O0cjNcmYJpQ" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STJt9O4Ee2O0cjNcmYJpQ" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STJudO4Ee2O0cjNcmYJpQ" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STJu9O4Ee2O0cjNcmYJpQ" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STwwNO4Ee2O0cjNcmYJpQ" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5STwwdO4Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STww9O4Ee2O0cjNcmYJpQ" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STwxdO4Ee2O0cjNcmYJpQ" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STwx9O4Ee2O0cjNcmYJpQ" name="schedulerSelected" visibility="private" isStatic="true" type="_5Q2YMNO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLQNO4Ee2O0cjNcmYJpQ" name="main" specification="_5LpvINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SsLQdO4Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SsLQtO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
		setWarpParameters(args);&#xD;
&#xD;
		// and print out the values if in verbose mode&#xD;
		if (verboseMode) {&#xD;
			printWarpParameters();&#xD;
		}&#xD;
&#xD;
		// Create and visualize the workload&#xD;
		// inputFile string, which may be null,&#xD;
		WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
		if (allRequested) {&#xD;
			for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
				visualize(workLoad, choice); // visualize all Program choices&#xD;
			}&#xD;
			// Create and visualize the Warp System&#xD;
			if (schedulerRequested) {&#xD;
				WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
				verifyPerformanceRequirements(warp);&#xD;
				for (SystemChoices choice : SystemChoices.values()) {&#xD;
					visualize(warp, choice); // visualize all System choices&#xD;
				}&#xD;
			} else { // create a system for all scheduler choices&#xD;
				for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
					schedulerSelected = sch;&#xD;
					WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
					verifyPerformanceRequirements(warp);&#xD;
					for (SystemChoices choice : SystemChoices.values()) {&#xD;
						visualize(warp, choice); // visualize all System choices&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		} else { // visualize warp workload, source program and other requested items&#xD;
			visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
			if (wfRequested) {&#xD;
				visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
			}&#xD;
			if (gvRequested) {&#xD;
				visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
			}&#xD;
			WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
			verifyPerformanceRequirements(warp);&#xD;
			visualize(warp, SystemChoices.SOURCE);&#xD;
			if (caRequested) {&#xD;
				visualize(warp, SystemChoices.CHANNEL);&#xD;
			}&#xD;
			if (laRequested) {&#xD;
				visualize(warp, SystemChoices.LATENCY);&#xD;
			}&#xD;
			if (latencyRequested || laRequested) {&#xD;
				visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
			}&#xD;
			if (raRequested) {&#xD;
				visualize(warp, SystemChoices.RELIABILITIES);&#xD;
			}&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLSdO4Ee2O0cjNcmYJpQ" name="verifyPerformanceRequirements" specification="_5Q73w9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SsLStO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
		verifyReliabilities(warp);&#xD;
		verifyNoChannelConflicts(warp);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLS9O4Ee2O0cjNcmYJpQ" name="verifyReliabilities" specification="_5Q73xdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SsLTNO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
			/* RealTime HART doesn't adhere to reliability targets */&#xD;
			if (!warp.reliabilitiesMet()) {&#xD;
				System.err.printf(&#xD;
						&quot;\n\tERROR: Not all flows meet the end-to-end &quot; + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
						String.valueOf(e2e), schedulerSelected.toString());&#xD;
			} else if (verboseMode) {&#xD;
				System.out.printf(&quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
						String.valueOf(e2e), schedulerSelected.toString());&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLTdO4Ee2O0cjNcmYJpQ" name="verifyDeadlines" specification="_5Q73x9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SsLTtO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
			System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
					schedulerSelected.toString());&#xD;
			visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
		} else if (verboseMode) {&#xD;
			System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
					schedulerSelected.toString());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLT9O4Ee2O0cjNcmYJpQ" name="verifyNoChannelConflicts" specification="_5Q73ydO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SsLUNO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
			System.err.printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
			if (!caRequested) { // only need to create the visualization if not already requested&#xD;
				visualize(warp, SystemChoices.CHANNEL);&#xD;
			}&#xD;
		} else if (verboseMode) {&#xD;
			System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLUdO4Ee2O0cjNcmYJpQ" name="setWarpParameters" specification="_5LqWMNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SsLUtO4Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SsLU9O4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
		// function--need to set up globals?&#xD;
&#xD;
// create holder objects for storing results ...&#xD;
// BooleanHolder debug = new BooleanHolder();&#xD;
		StringHolder schedulerSelected = new StringHolder();&#xD;
		IntHolder channels = new IntHolder();&#xD;
		IntHolder faults = new IntHolder();&#xD;
		DoubleHolder m = new DoubleHolder();&#xD;
		DoubleHolder end2end = new DoubleHolder();&#xD;
		BooleanHolder gui = new BooleanHolder();&#xD;
		BooleanHolder gv = new BooleanHolder();&#xD;
		BooleanHolder wf = new BooleanHolder();&#xD;
		BooleanHolder ra = new BooleanHolder();&#xD;
		BooleanHolder la = new BooleanHolder();&#xD;
		BooleanHolder ca = new BooleanHolder();&#xD;
		BooleanHolder s = new BooleanHolder();&#xD;
		BooleanHolder all = new BooleanHolder();&#xD;
		BooleanHolder latency = new BooleanHolder();&#xD;
		BooleanHolder verbose = new BooleanHolder();&#xD;
		StringHolder input = new StringHolder();&#xD;
		StringHolder output = new StringHolder();&#xD;
&#xD;
// create the parser and specify the allowed options ...&#xD;
		ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
		parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;, schedulerSelected);&#xD;
		parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
		parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
		parser.addOption(&quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;, end2end);&#xD;
		parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;, faults);&#xD;
		parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
		parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
		parser.addOption(&#xD;
				&quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
				wf);&#xD;
		parser.addOption(&quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;, ra);&#xD;
		parser.addOption(&quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
		parser.addOption(&quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
		parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
		parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
		parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
		parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
		parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;, output);&#xD;
		parser.addOption(&#xD;
				&quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
				verbose);&#xD;
// parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
// $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
// match the arguments ...&#xD;
		parser.matchAllArgs(args);&#xD;
&#xD;
// Set WARP system configuration options&#xD;
		if (channels.value > 0) {&#xD;
			nChannels = channels.value; // set option specified&#xD;
		} else {&#xD;
			nChannels = NUM_CHANNELS; // set to default&#xD;
		}&#xD;
		if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
			numFaults = faults.value; // set option specified&#xD;
		} else {&#xD;
			numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
		}&#xD;
		if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
			minLQ = m.value; // set option specified&#xD;
		} else {&#xD;
			minLQ = MIN_LQ; // set to default&#xD;
		}&#xD;
		if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
			e2e = end2end.value; // set option specified&#xD;
		} else {&#xD;
			e2e = E2E; // set to default&#xD;
		}&#xD;
		if (output.value != null) { // default output subdirectory (from working directory)&#xD;
			outputSubDirectory = output.value; // set option specified&#xD;
		} else {&#xD;
			outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
		}&#xD;
&#xD;
		guiRequested = gui.value; // GraphVis file requested flag&#xD;
		gvRequested = gv.value; // GraphVis file requested flag&#xD;
		wfRequested = wf.value; // WARP file requested flag&#xD;
		raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
		laRequested = la.value; // Latency Analysis file requested flag&#xD;
		caRequested = ca.value; // Latency Analysis file requested flag&#xD;
		simRequested = s.value; // Simulation file requested flag&#xD;
		allRequested = all.value; // all out files requested flag&#xD;
		latencyRequested = latency.value; // latency report requested flag&#xD;
		verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
// debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
		inputFile = input.value; // input file specified&#xD;
		if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
			schedulerRequested = true;&#xD;
			switch (schedulerSelected.value) {&#xD;
			case &quot;priority&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
				break;&#xD;
&#xD;
			case &quot;rm&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
				break;&#xD;
&#xD;
			case &quot;dm&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
				break;&#xD;
&#xD;
			case &quot;rtHart&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
				break;&#xD;
&#xD;
			case &quot;poset&quot;:&#xD;
				Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
				break;&#xD;
&#xD;
			default:&#xD;
				Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
				break;&#xD;
			}&#xD;
		} else { // null value when no scheduler specified; so use default&#xD;
			Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLVNO4Ee2O0cjNcmYJpQ" name="printWarpParameters" specification="_5LqWNNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
		// Print out each of the system configuration values&#xD;
		System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
		System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
		System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
		System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
		System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
		System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
		System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
		System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
		System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
		System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
		System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
		System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
		System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
		System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
		System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
		if (inputFile != null) {&#xD;
			System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
		} else {&#xD;
			System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
		}&#xD;
		System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
		System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
		// System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_B-NHkNejEe2IjMkQsyA0cQ" name="visualize" specification="_B8LuUNejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_B-NHkdejEe2IjMkQsyA0cQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B-NHktejEe2IjMkQsyA0cQ" name="choice" type="_5Q2_QtO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
		if (viz != null) {&#xD;
			if (verboseMode) {&#xD;
				System.out.println(viz.toString());&#xD;
			}&#xD;
			viz.toFile();&#xD;
			if (guiRequested) {&#xD;
				viz.toDisplay();&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_B-NHk9ejEe2IjMkQsyA0cQ" name="visualize" specification="_B8MVYdejEe2IjMkQsyA0cQ">
                <ownedParameter xmi:id="_B-NHlNejEe2IjMkQsyA0cQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B-NHldejEe2IjMkQsyA0cQ" name="choice" type="_5Q2_QNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
		if (viz != null) {&#xD;
			viz.toFile();&#xD;
			if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
				/* Only display window when a specific scheduler has been requested */&#xD;
				viz.toDisplay();&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LpvINO4Ee2O0cjNcmYJpQ" name="main" isStatic="true" method="_5SsLQNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K4tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Entry point of the warp program.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Sets up the warp parameters according to the command line arguments. The&#xD;
	 * program will print the parameters if it is in verbose mode. Then a workload&#xD;
	 * is created based off of the input file. Finally if all was requested, all&#xD;
	 * visualizations files are made, and if set&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param args command line arguments.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LpvIdO4Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5LpvItO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LqWMNO4Ee2O0cjNcmYJpQ" name="setWarpParameters" visibility="private" isStatic="true" method="_5SsLUdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K6dejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Sets the class attributes based on the command line arguments.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * If no value is given for an attribute the value will be set to the default.&#xD;
	 * &lt;/p>&#xD;
	 * &lt;h2>Options&lt;/h2>&#xD;
	 * &lt;ul>&#xD;
	 * &lt;li>-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&lt;/li>&#xD;
	 * &lt;li>-c, --channels %d {[1,16]} #number of wireless channels&lt;/li>&#xD;
	 * &lt;li>-m %f {[0.5,1.0]} #minimum link quality in the system&lt;/li>&#xD;
	 * &lt;li>-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for&#xD;
	 * all flows&lt;/li>&#xD;
	 * &lt;li>-f, --faults %d {[1,10]} #number of faults per edge in a flow (per&#xD;
	 * period)&lt;/li>&#xD;
	 * &lt;li>-gui %v #create a gui visualizations&lt;/li>&#xD;
	 * &lt;li>-gv %v #create a graph visualization (.gv) file for GraphViz&lt;/li>&#xD;
	 * &lt;li>-wf %v #create a WARP (.wf) file that shows the maximum number of&#xD;
	 * transmissions on each segment of the flow needed to meet the end-to-end&#xD;
	 * reliability&lt;/li>&#xD;
	 * &lt;li>-ra %v #create a reliability analysis file (tab delimited .csv) for the&#xD;
	 * warp program&lt;/li>&#xD;
	 * &lt;li>-la %v #create a latency analysis file (tab delimited .csv) for the warp&#xD;
	 * program&lt;/li>&#xD;
	 * &lt;li>-ca %v #create a channel analysis file (tab delimited .csv) for the warp&#xD;
	 * program&lt;/li>&#xD;
	 * &lt;li>-s %v #create a simulator input file (.txt) for the warp program&lt;/li>&#xD;
	 * &lt;li>-a, --all %v #create all output files (activates -gv, -wf, -ra, -s)&lt;/li>&#xD;
	 * &lt;li>-l, --latency %v #generates end-to-end latency report file (.txt)&lt;/li>&#xD;
	 * &lt;li>-i, --input %s #&lt;InputFile> of graph flows (workload)&lt;/li>&#xD;
	 * &lt;li>-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&lt;/li>&#xD;
	 * &lt;li>-v, --verbose %v #Echo input file name and parsed contents. Then for each&#xD;
	 * flow instance: show maximum E2E latency and min/max communication cost for&#xD;
	 * that instance of the flow&lt;/li>&#xD;
	 * &lt;/ul>&#xD;
	 * &#xD;
	 * @param args An array of strings of the command line arguments</body>
                </ownedComment>
                <ownedParameter xmi:id="_5LqWMdO4Ee2O0cjNcmYJpQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5LqWMtO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LqWNNO4Ee2O0cjNcmYJpQ" name="printWarpParameters" visibility="private" isStatic="true" method="_5SsLVNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K6tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Prints the warp system configuration parameters&lt;/h1></body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q73w9O4Ee2O0cjNcmYJpQ" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_5SsLSdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K5dejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Verifies a WarpInterface's performance.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Verifies the deadlines, reliabilities and if there are channel conflicts. If&#xD;
	 * something is not verified a message will be printed to the console and in the&#xD;
	 * case of a failure to verify the deadlines or the channel conflicts, a&#xD;
	 * deadline/channel report will be created. If everything is successful a&#xD;
	 * success message will be printed to the console.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp The WarpInterface to verify.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Q73xNO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q73xdO4Ee2O0cjNcmYJpQ" name="verifyReliabilities" visibility="private" isStatic="true" method="_5SsLS9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K5tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Checks if the reliabilities are met on the WarpInterface.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * NOTE: the reliability check is currently not implemented and will always&#xD;
	 * return true. Prints the result of the check to the console.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp The WarpInterface to check the reliabilities of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Q73xtO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q73x9O4Ee2O0cjNcmYJpQ" name="verifyDeadlines" visibility="private" isStatic="true" method="_5SsLTdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K59ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Checks to see if the deadlines are met on the warp interface&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Returns false if there is at least one deadline missed. If a deadline is&#xD;
	 * missed a deadline report file will be created. Result is printed to the&#xD;
	 * console.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp The WarpInterface to check the deadlines of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Q73yNO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Q73ydO4Ee2O0cjNcmYJpQ" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_5SsLT9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K6NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Checks if there is a channel conflict in the warp interface.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * The result is printed to the console. If a channel analysis file was not&#xD;
	 * originally requested, one will be made.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp The WarpInterface to check the channel conflicts of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Q73ytO4Ee2O0cjNcmYJpQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_B8LuUNejEe2IjMkQsyA0cQ" name="visualize" visibility="private" isStatic="true" method="_B-NHkNejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_C42K49ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Visualizes a workload.&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Puts the visualization in the the output folder directory. The type of&#xD;
	 * visualization is determined by the choice object that is passed in.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param workLoad The workload to visualize&#xD;
	 * @param choice   An item from the WorkLoadChoices enum that specifies what&#xD;
	 *                 visualization to create.</body>
                </ownedComment>
                <ownedParameter xmi:id="_B8LuUdejEe2IjMkQsyA0cQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B8MVYNejEe2IjMkQsyA0cQ" name="choice" type="_5Q2_QtO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_B8MVYdejEe2IjMkQsyA0cQ" name="visualize" visibility="private" isStatic="true" method="_B-NHk9ejEe2IjMkQsyA0cQ">
                <ownedComment xmi:id="_C42K5NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Creates a visualization for a WarpInterface&lt;/h1>&#xD;
	 * &lt;p>&#xD;
	 * Puts the visualization in the the output folder directory. The type of&#xD;
	 * visualization is determined by the choice object that is passed in.&#xD;
	 * &lt;/p>&#xD;
	 * &#xD;
	 * @param warp   a WarpInteface probably a WarpSystem class&#xD;
	 * @param choice An item from the SystemChoices enum that specifies what&#xD;
	 *               visualization to create.</body>
                </ownedComment>
                <ownedParameter xmi:id="_B8MVYtejEe2IjMkQsyA0cQ" name="warp" type="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_B8MVY9ejEe2IjMkQsyA0cQ" name="choice" type="_5Q2_QNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LsLYNO4Ee2O0cjNcmYJpQ" name="WarpDSL">
              <ownedComment xmi:id="_C42K69ejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5STwydO4Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5STwytO4Ee2O0cjNcmYJpQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5STwy9O4Ee2O0cjNcmYJpQ" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SUX0NO4Ee2O0cjNcmYJpQ" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SUX0dO4Ee2O0cjNcmYJpQ" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SUX0tO4Ee2O0cjNcmYJpQ" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyWNO4Ee2O0cjNcmYJpQ" name="getInstructionParameters" specification="_5LtZgtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SsyWdO4Ee2O0cjNcmYJpQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SsyWtO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5LtZgtO4Ee2O0cjNcmYJpQ" name="getInstructionParameters" method="_5SsyWNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LtZg9O4Ee2O0cjNcmYJpQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RyMUNO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_5LsLYdO4Ee2O0cjNcmYJpQ" name="InstructionParameters">
                <ownedAttribute xmi:id="_5SUX09O4Ee2O0cjNcmYJpQ" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SUX1NO4Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_5SUX1dO4Ee2O0cjNcmYJpQ" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SUX1tO4Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_5SUX19O4Ee2O0cjNcmYJpQ" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SUX2NO4Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_5SUX2dO4Ee2O0cjNcmYJpQ" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SUX2tO4Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_5SUX29O4Ee2O0cjNcmYJpQ" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SUX3NO4Ee2O0cjNcmYJpQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_5SUX3dO4Ee2O0cjNcmYJpQ" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SUX3tO4Ee2O0cjNcmYJpQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_5SUX4NO4Ee2O0cjNcmYJpQ" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SU-4NO4Ee2O0cjNcmYJpQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLVdO4Ee2O0cjNcmYJpQ" name="getCoordinator" specification="_5LsLYtO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsLVtO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLV9O4Ee2O0cjNcmYJpQ" name="setCoordinator" specification="_5LsycdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsLWNO4Ee2O0cjNcmYJpQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLWdO4Ee2O0cjNcmYJpQ" name="setName" specification="_5Lsyc9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsLWtO4Ee2O0cjNcmYJpQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsLW9O4Ee2O0cjNcmYJpQ" name="setFlow" specification="_5LsyddO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsLXNO4Ee2O0cjNcmYJpQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyUNO4Ee2O0cjNcmYJpQ" name="setSrc" specification="_5Lsyd9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyUdO4Ee2O0cjNcmYJpQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyUtO4Ee2O0cjNcmYJpQ" name="setSnk" specification="_5LsyedO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyU9O4Ee2O0cjNcmYJpQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyVNO4Ee2O0cjNcmYJpQ" name="setChannel" specification="_5Lsye9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyVdO4Ee2O0cjNcmYJpQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyVtO4Ee2O0cjNcmYJpQ" name="unused" specification="_5LtZgNO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyV9O4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_5LsLYtO4Ee2O0cjNcmYJpQ" name="getCoordinator" method="_5SsLVdO4Ee2O0cjNcmYJpQ">
                  <ownedComment xmi:id="_C42K7NejEe2IjMkQsyA0cQ">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_5LsycNO4Ee2O0cjNcmYJpQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_5LsycdO4Ee2O0cjNcmYJpQ" name="setCoordinator" method="_5SsLV9O4Ee2O0cjNcmYJpQ">
                  <ownedComment xmi:id="_C42K7dejEe2IjMkQsyA0cQ">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_5LsyctO4Ee2O0cjNcmYJpQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_5Lsyc9O4Ee2O0cjNcmYJpQ" name="setName" visibility="private" method="_5SsLWdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5LsydNO4Ee2O0cjNcmYJpQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_5LsyddO4Ee2O0cjNcmYJpQ" name="setFlow" visibility="private" method="_5SsLW9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5LsydtO4Ee2O0cjNcmYJpQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_5Lsyd9O4Ee2O0cjNcmYJpQ" name="setSrc" visibility="private" method="_5SsyUNO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5LsyeNO4Ee2O0cjNcmYJpQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_5LsyedO4Ee2O0cjNcmYJpQ" name="setSnk" visibility="private" method="_5SsyUtO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5LsyetO4Ee2O0cjNcmYJpQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_5Lsye9O4Ee2O0cjNcmYJpQ" name="setChannel" visibility="private" method="_5SsyVNO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5LsyfNO4Ee2O0cjNcmYJpQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_5LtZgNO4Ee2O0cjNcmYJpQ" name="unused" method="_5SsyVtO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5LtZgdO4Ee2O0cjNcmYJpQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_5LuAkNO4Ee2O0cjNcmYJpQ" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_5RyzY9O4Ee2O0cjNcmYJpQ" general="_5RyzYNO4Ee2O0cjNcmYJpQ"/>
                <ownedAttribute xmi:id="_5SU-4dO4Ee2O0cjNcmYJpQ" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_5SU-49O4Ee2O0cjNcmYJpQ" name="instructionParametersArrayList" visibility="package" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5TOWydO4Ee2O0cjNcmYJpQ"/>
                <ownedAttribute xmi:id="_5SU-5tO4Ee2O0cjNcmYJpQ" name="instructionParameters" visibility="package" type="_5QkrYNO4Ee2O0cjNcmYJpQ" association="_5TO90dO4Ee2O0cjNcmYJpQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyW9O4Ee2O0cjNcmYJpQ" name="ListenerDsl" specification="_5LuAkdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyXNO4Ee2O0cjNcmYJpQ" type="_5LuAkNO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyXdO4Ee2O0cjNcmYJpQ" name="getInstructionParameters" specification="_5LuAldO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyXtO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyX9O4Ee2O0cjNcmYJpQ" name="enterAction" specification="_5Q9s8dO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyYNO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q9F4NO4Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyYdO4Ee2O0cjNcmYJpQ" name="exitAction" specification="_5Q9s9tO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyYtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q9F4NO4Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyY9O4Ee2O0cjNcmYJpQ" name="exitFlowName" specification="_5Q-UBdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyZNO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q-UA9O4Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyZdO4Ee2O0cjNcmYJpQ" name="exitCmd" specification="_5Q-7EdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyZtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q-UCtO4Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyZ9O4Ee2O0cjNcmYJpQ" name="exitSrcNode" specification="_5Q_iINO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyaNO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q-7FtO4Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SsyadO4Ee2O0cjNcmYJpQ" name="exitSnkNode" specification="_5Q_iJ9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsyatO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q_iJdO4Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Ssya9O4Ee2O0cjNcmYJpQ" name="exitChannel" specification="_5RAJNNO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5SsybNO4Ee2O0cjNcmYJpQ" name="ctx" type="_5RAJMtO4Ee2O0cjNcmYJpQ"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_5LuAkdO4Ee2O0cjNcmYJpQ" name="ListenerDsl" visibility="package" method="_5SsyW9O4Ee2O0cjNcmYJpQ">
                  <eAnnotations xmi:id="_5LuAktO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_5LuAk9O4Ee2O0cjNcmYJpQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_5LuAlNO4Ee2O0cjNcmYJpQ" type="_5LuAkNO4Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5LuAldO4Ee2O0cjNcmYJpQ" name="getInstructionParameters" method="_5SsyXdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5RyzYtO4Ee2O0cjNcmYJpQ" type="_5QQiUNO4Ee2O0cjNcmYJpQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5Q9s8dO4Ee2O0cjNcmYJpQ" name="enterAction" method="_5SsyX9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5Q9s8tO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q9F4NO4Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5Q9s9tO4Ee2O0cjNcmYJpQ" name="exitAction" method="_5SsyYdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5Q9s99O4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q9F4NO4Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5Q-UBdO4Ee2O0cjNcmYJpQ" name="exitFlowName" method="_5SsyY9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5Q-UBtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q-UA9O4Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5Q-7EdO4Ee2O0cjNcmYJpQ" name="exitCmd" method="_5SsyZdO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5Q-7EtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q-UCtO4Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5Q_iINO4Ee2O0cjNcmYJpQ" name="exitSrcNode" method="_5SsyZ9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5Q_iIdO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q-7FtO4Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5Q_iJ9O4Ee2O0cjNcmYJpQ" name="exitSnkNode" method="_5SsyadO4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5Q_iKNO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Q_iJdO4Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_5RAJNNO4Ee2O0cjNcmYJpQ" name="exitChannel" method="_5Ssya9O4Ee2O0cjNcmYJpQ">
                  <ownedParameter xmi:id="_5RAJNdO4Ee2O0cjNcmYJpQ" name="ctx" type="_5RAJMtO4Ee2O0cjNcmYJpQ"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_5Lv1wNO4Ee2O0cjNcmYJpQ" name="WarpInterface">
              <ownedComment xmi:id="_C40VtNejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_5RAwQNO4Ee2O0cjNcmYJpQ" general="_5Lf-JdO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5Lv1wdO4Ee2O0cjNcmYJpQ" name="toWorkload">
                <ownedParameter xmi:id="_5RBXUNO4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lv1wtO4Ee2O0cjNcmYJpQ" name="toProgram">
                <ownedParameter xmi:id="_5RBXUdO4Ee2O0cjNcmYJpQ" type="_5MMhsNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lv1w9O4Ee2O0cjNcmYJpQ" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_5RBXUtO4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lv1xNO4Ee2O0cjNcmYJpQ" name="toSimulator">
                <ownedParameter xmi:id="_5RBXU9O4Ee2O0cjNcmYJpQ" type="_5LfXEdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lv1xdO4Ee2O0cjNcmYJpQ" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_5RBXVNO4Ee2O0cjNcmYJpQ" type="_5LCEHtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lv1xtO4Ee2O0cjNcmYJpQ" name="toChannelAnalysis">
                <ownedParameter xmi:id="_5RBXVdO4Ee2O0cjNcmYJpQ" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lwc0NO4Ee2O0cjNcmYJpQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_5Lwc0dO4Ee2O0cjNcmYJpQ" name="reliabilitiesMet">
                <ownedParameter xmi:id="_5Lwc0tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lwc09O4Ee2O0cjNcmYJpQ" name="deadlinesMet">
                <ownedParameter xmi:id="_5Lwc1NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5Lwc1dO4Ee2O0cjNcmYJpQ" name="WarpPoset">
              <ownedComment xmi:id="_C4zupdejEe2IjMkQsyA0cQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_5RBXW9O4Ee2O0cjNcmYJpQ" general="_5LIxwNO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZYNO4Ee2O0cjNcmYJpQ" name="WarpPoset" specification="_5RBXVtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZYdO4Ee2O0cjNcmYJpQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5StZYtO4Ee2O0cjNcmYJpQ" type="_5Lwc1dO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZY9O4Ee2O0cjNcmYJpQ" name="findCoordinator" specification="_5RzacNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZZNO4Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5StZZdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5RBXVtO4Ee2O0cjNcmYJpQ" name="WarpPoset" visibility="package" method="_5StZYNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RBXWNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RBXWdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5RBXV9O4Ee2O0cjNcmYJpQ" name="workload" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RBXWtO4Ee2O0cjNcmYJpQ" type="_5Lwc1dO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RzacNO4Ee2O0cjNcmYJpQ" name="findCoordinator" visibility="protected" method="_5StZY9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RzacdO4Ee2O0cjNcmYJpQ" name="nodesInFlow" type="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RzactO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5LxD4NO4Ee2O0cjNcmYJpQ" name="WarpSystem">
              <ownedComment xmi:id="_C42yA9ejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SVl8NO4Ee2O0cjNcmYJpQ" name="program" visibility="private" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TO91NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SVl8tO4Ee2O0cjNcmYJpQ" name="workLoad" visibility="private" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5TO919O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SVl9NO4Ee2O0cjNcmYJpQ" name="ra" visibility="private" type="_5LRUodO4Ee2O0cjNcmYJpQ" association="_5TO92tO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SVl9tO4Ee2O0cjNcmYJpQ" name="la" visibility="private" type="_5LCEHtO4Ee2O0cjNcmYJpQ" association="_5TPk4dO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SWNAdO4Ee2O0cjNcmYJpQ" name="ca" visibility="private" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" association="_5TPk5NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SWNA9O4Ee2O0cjNcmYJpQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SWNCdO4Ee2O0cjNcmYJpQ" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SWNCtO4Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SWNDNO4Ee2O0cjNcmYJpQ" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SWNDdO4Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_5RB-YNO4Ee2O0cjNcmYJpQ" client="_5LxD4NO4Ee2O0cjNcmYJpQ" supplier="_5Lv1wNO4Ee2O0cjNcmYJpQ" contract="_5Lv1wNO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZaNO4Ee2O0cjNcmYJpQ" name="WarpSystem" specification="_5R0BhNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZadO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5StZatO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5StZa9O4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5StZbNO4Ee2O0cjNcmYJpQ" type="_5LxD4NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
		this.numChannels = numChannels;&#xD;
		createProgram(workLoad, numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZbdO4Ee2O0cjNcmYJpQ" name="toWorkload" specification="_5Lxq8NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZbtO4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZb9O4Ee2O0cjNcmYJpQ" name="toProgram" specification="_5Lxq9NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZcNO4Ee2O0cjNcmYJpQ" type="_5MMhsNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZcdO4Ee2O0cjNcmYJpQ" name="toReliabilityAnalysis" specification="_5Lxq-NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZctO4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
		return ra;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZc9O4Ee2O0cjNcmYJpQ" name="toSimulator" specification="_5LySANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZdNO4Ee2O0cjNcmYJpQ" type="_5LfXEdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZddO4Ee2O0cjNcmYJpQ" name="toLatencyAnalysis" specification="_5LySBNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZdtO4Ee2O0cjNcmYJpQ" type="_5LCEHtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
		return la;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZd9O4Ee2O0cjNcmYJpQ" name="toChannelAnalysis" specification="_5LySCNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZeNO4Ee2O0cjNcmYJpQ" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
		return ca;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZedO4Ee2O0cjNcmYJpQ" name="reliabilitiesMet" specification="_5LySDNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZetO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
			ra = new ReliabilityAnalysis(program);&#xD;
		}&#xD;
		return ra.verifyReliabilities();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZe9O4Ee2O0cjNcmYJpQ" name="deadlinesMet" specification="_5Ly5FNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZfNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
		if (program.deadlineMisses().size() > 0) {&#xD;
			result = false;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZfdO4Ee2O0cjNcmYJpQ" name="createProgram" specification="_5R0okNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZftO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5StZf9O4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5StZgNO4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZgdO4Ee2O0cjNcmYJpQ" name="getNumFaults" specification="_5Ly5GdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZgtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZg9O4Ee2O0cjNcmYJpQ" name="getMinPacketReceptionRate" specification="_5Ly5HtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZhNO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5StZhdO4Ee2O0cjNcmYJpQ" name="getE2e" specification="_5LzgI9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5StZhtO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAcNO4Ee2O0cjNcmYJpQ" name="getName" specification="_5LzgJ9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAcdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuActO4Ee2O0cjNcmYJpQ" name="getSchedulerName" specification="_5LzgLNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAc9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAdNO4Ee2O0cjNcmYJpQ" name="getNumTransmissions" specification="_5L0HM9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAddO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAdtO4Ee2O0cjNcmYJpQ" name="getOptimizationFlag" specification="_5L0HONO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAd9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5Lxq8NO4Ee2O0cjNcmYJpQ" name="toWorkload" method="_5StZbdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RB-YdO4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lxq9NO4Ee2O0cjNcmYJpQ" name="toProgram" method="_5StZb9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RB-YtO4Ee2O0cjNcmYJpQ" type="_5MMhsNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Lxq-NO4Ee2O0cjNcmYJpQ" name="toReliabilityAnalysis" method="_5StZcdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RB-Y9O4Ee2O0cjNcmYJpQ" type="_5LRUodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LySANO4Ee2O0cjNcmYJpQ" name="toSimulator" method="_5StZc9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RB-ZNO4Ee2O0cjNcmYJpQ" type="_5LfXEdO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LySBNO4Ee2O0cjNcmYJpQ" name="toLatencyAnalysis" method="_5StZddO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RB-ZdO4Ee2O0cjNcmYJpQ" type="_5LCEHtO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LySCNO4Ee2O0cjNcmYJpQ" name="toChannelAnalysis" method="_5StZd9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RB-ZtO4Ee2O0cjNcmYJpQ" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LySDNO4Ee2O0cjNcmYJpQ" name="reliabilitiesMet" method="_5StZedO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Ly5ENO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ly5FNO4Ee2O0cjNcmYJpQ" name="deadlinesMet" method="_5StZe9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Ly5FdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ly5GdO4Ee2O0cjNcmYJpQ" name="getNumFaults" method="_5StZgdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Ly5GtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5Ly5HtO4Ee2O0cjNcmYJpQ" name="getMinPacketReceptionRate" method="_5StZg9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5R0olNO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LzgI9O4Ee2O0cjNcmYJpQ" name="getE2e" method="_5StZhdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5R0oldO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5LzgJ9O4Ee2O0cjNcmYJpQ" name="getName" method="_5SuAcNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LzgKNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5LzgLNO4Ee2O0cjNcmYJpQ" name="getSchedulerName" method="_5SuActO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5LzgLdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L0HM9O4Ee2O0cjNcmYJpQ" name="getNumTransmissions" method="_5SuAdNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L0HNNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L0HONO4Ee2O0cjNcmYJpQ" name="getOptimizationFlag" method="_5SuAdtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L0HOdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L0HPdO4Ee2O0cjNcmYJpQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_5R0BhNO4Ee2O0cjNcmYJpQ" name="WarpSystem" method="_5StZaNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5R0BiNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5R0BidO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5R0BhdO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R0BhtO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R0Bh9O4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R0BitO4Ee2O0cjNcmYJpQ" type="_5LxD4NO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R0okNO4Ee2O0cjNcmYJpQ" name="createProgram" visibility="private" method="_5StZfdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5R0okdO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R0oktO4Ee2O0cjNcmYJpQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R0ok9O4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5L1VUNO4Ee2O0cjNcmYJpQ" name="WorkLoad">
              <ownedComment xmi:id="_C43ZANejEe2IjMkQsyA0cQ">
                <body>Build the nodes and flows for the workload described in the workload&#xD;
description file, whose name is passed into the Constructor via the parameter&#xD;
inputFileName. Good default values for the constructors are m = 0.9, e2e =&#xD;
0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5REapNO4Ee2O0cjNcmYJpQ" general="_5LYCUNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SW0EdO4Ee2O0cjNcmYJpQ" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SW0EtO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SW0E9O4Ee2O0cjNcmYJpQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SW0FNO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SW0FdO4Ee2O0cjNcmYJpQ" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SW0FtO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SW0F9O4Ee2O0cjNcmYJpQ" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SW0GNO4Ee2O0cjNcmYJpQ" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SW0GdO4Ee2O0cjNcmYJpQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SXbINO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SXbIdO4Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_5RreodO4Ee2O0cjNcmYJpQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SXbItO4Ee2O0cjNcmYJpQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SXbI9O4Ee2O0cjNcmYJpQ" name="e2e" visibility="private" type="_5RreodO4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SXbJNO4Ee2O0cjNcmYJpQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SXbJtO4Ee2O0cjNcmYJpQ" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SXbJ9O4Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SXbKNO4Ee2O0cjNcmYJpQ" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SXbKdO4Ee2O0cjNcmYJpQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SXbK9O4Ee2O0cjNcmYJpQ" name="flows" type="_5K79cNO4Ee2O0cjNcmYJpQ" association="_5S5mptO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SXbLNO4Ee2O0cjNcmYJpQ" name="nodes" type="_5LG8kNO4Ee2O0cjNcmYJpQ" association="_5S5mqNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SXbLdO4Ee2O0cjNcmYJpQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SYCMdO4Ee2O0cjNcmYJpQ" name="flowNamesInOriginalOrder" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5TPk59O4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SYCM9O4Ee2O0cjNcmYJpQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SYCNNO4Ee2O0cjNcmYJpQ" name="flowNamesInPriorityOrder" type="_5QQiUNO4Ee2O0cjNcmYJpQ" association="_5TQL8dO4Ee2O0cjNcmYJpQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SYCNtO4Ee2O0cjNcmYJpQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_5RDzkdO4Ee2O0cjNcmYJpQ" client="_5L1VUNO4Ee2O0cjNcmYJpQ" supplier="_5LTJ0NO4Ee2O0cjNcmYJpQ" contract="_5LTJ0NO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAeNO4Ee2O0cjNcmYJpQ" name="WorkLoad" specification="_5R1PoNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAedO4Ee2O0cjNcmYJpQ" name="m" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SuAetO4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SuAe9O4Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SuAfNO4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
		setDefaultParameters();&#xD;
		minPacketReceptionRate = m; // use file manager passed to this object&#xD;
		this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
		/*&#xD;
		 * Read input file, build the AST of graph and the listener will build the node&#xD;
		 * and flow data objects&#xD;
		 */&#xD;
		WorkLoadListener.buildNodesAndFlows(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAfdO4Ee2O0cjNcmYJpQ" name="WorkLoad" specification="_5R12sNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAftO4Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SuAf9O4Ee2O0cjNcmYJpQ" name="m" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SuAgNO4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SuAgdO4Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SuAgtO4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
		setDefaultParameters();&#xD;
		this.numFaults = numFaults;&#xD;
		minPacketReceptionRate = m; // use file manager passed to this object&#xD;
		this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
		/*&#xD;
		 * Read input file, build the AST of graph and the listener will build the node&#xD;
		 * and flow data objects&#xD;
		 */&#xD;
		WorkLoadListener.buildNodesAndFlows(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAg9O4Ee2O0cjNcmYJpQ" name="setDefaultParameters" specification="_5L2jcNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
		intForFlowNames = true; // default is that node names are all alpha names&#xD;
		flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
		nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
		flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
														// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		numFaults = DEFAULT_TX_NUM;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAhNO4Ee2O0cjNcmYJpQ" name="getE2e" specification="_5L2jcdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAhdO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAhtO4Ee2O0cjNcmYJpQ" name="getIntForFlowNames" specification="_5L2jctO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAh9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAiNO4Ee2O0cjNcmYJpQ" name="getName" specification="_5L2jdNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAidO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAitO4Ee2O0cjNcmYJpQ" name="setMinPacketReceptionRate" specification="_5R12udO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAi9O4Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAjNO4Ee2O0cjNcmYJpQ" name="getMaxPhase" specification="_5L2jdtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAjdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
		return queue.poll().getPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAjtO4Ee2O0cjNcmYJpQ" name="getMinPeriod" specification="_5L2jeNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAj9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
		return queue.poll().getPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAkNO4Ee2O0cjNcmYJpQ" name="setE2e" specification="_5R12u9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAkdO4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuAktO4Ee2O0cjNcmYJpQ" name="setIntForFlowNames" specification="_5L3KgNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SuAk9O4Ee2O0cjNcmYJpQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SungNO4Ee2O0cjNcmYJpQ" name="setName" specification="_5L3KgtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SungdO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SungtO4Ee2O0cjNcmYJpQ" name="setNodeChannel" specification="_5L3KhNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sung9O4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunhNO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
		node.setChannel(channel);&#xD;
		nodes.put(name, node); // update the nodes map with the updated object&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunhdO4Ee2O0cjNcmYJpQ" name="getNodeChannel" specification="_5L3Kh9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunhtO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sunh9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
		return node.getChannel();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SuniNO4Ee2O0cjNcmYJpQ" name="addFlow" specification="_5L3KitO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunidO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
		 * add a new flow node to the Flows dictionary. Only name, priority, and index&#xD;
		 * are changed from default values priority is set to the number of flows&#xD;
		 * already added (index), 0 for first flow This will create a default priority&#xD;
		 * equal to the order listed in the input graph file. We also set index to the&#xD;
		 * same value so we can preserve that order as a secondary sort key. The&#xD;
		 * initalPriority field is probably not needed, but it might be useful in the&#xD;
		 * future?? If the optional flow parameters (priority, period, ...) is set, then&#xD;
		 * this default priority will be over written&#xD;
		 */&#xD;
		if (flows.containsKey(flowName)) {&#xD;
			System.out.printf(&#xD;
					&quot;\n\tWarning! A flow with name %s already exists. &quot; + &quot;It has been replaced with a new flow\n.&quot;, flowName);&#xD;
		}&#xD;
		var index = flows.size();&#xD;
		var flowNode = new Flow(flowName, index, index);&#xD;
		flows.put(flowName, flowNode);&#xD;
		if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
			intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
										// only set it once&#xD;
		}&#xD;
		flowNamesInOriginalOrder.add(flowName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunitO4Ee2O0cjNcmYJpQ" name="isIntForNodeNames" specification="_5L3KjNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Suni9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
		return intForNodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunjNO4Ee2O0cjNcmYJpQ" name="isIntForFlowNames" specification="_5L3xkNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunjdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
		return intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunjtO4Ee2O0cjNcmYJpQ" name="addNodeToFlow" specification="_5L3xktO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sunj9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunkNO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
			/*&#xD;
			 * set false because name not is a number; &amp;&amp; above makes sure we only set it&#xD;
			 * once&#xD;
			 */&#xD;
			intForNodeNames = false;&#xD;
		}&#xD;
		if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
											// this node already.&#xD;
			/* If the node already exists, just need to add to the flow */&#xD;
			var index = nodes.size(); // nodeIndex will be the order added&#xD;
			var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
			nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
		}&#xD;
		/*&#xD;
		 * Node is now created and in the nodes map Next we need to get the current flow&#xD;
		 * and add this node to that flow by appending it to the node array for that&#xD;
		 * flow&#xD;
		 */&#xD;
		var flowNode = getFlow(flowName);&#xD;
		var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
		/*&#xD;
		 * the priority is the node's index in the flow, which is the current array size&#xD;
		 */&#xD;
		flowNode.addNode(graphNode);&#xD;
		flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunkdO4Ee2O0cjNcmYJpQ" name="getFlowPriority" specification="_5L3xldO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunktO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sunk9O4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunlNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
		var flow = getFlow(flowName);&#xD;
		Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
		while (nodes.hasNext()) {&#xD;
			var node = nodes.next();&#xD;
			if (node.getName() == nodeName) {&#xD;
				priority = node.getPriority(); // found the src node, set its index&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return priority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunldO4Ee2O0cjNcmYJpQ" name="setFlowPriority" specification="_5L3xmdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunltO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sunl9O4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPriority(priority);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunmNO4Ee2O0cjNcmYJpQ" name="setFlowPeriod" specification="_5L3xnNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunmdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunmtO4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPeriod(period);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sunm9O4Ee2O0cjNcmYJpQ" name="setFlowDeadline" specification="_5L3xn9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunnNO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunndO4Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setDeadline(deadline);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunntO4Ee2O0cjNcmYJpQ" name="setFlowPhase" specification="_5L4YotO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sunn9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunoNO4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPhase(phase);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunodO4Ee2O0cjNcmYJpQ" name="getFlowIndex" specification="_5L4YpdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunotO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Suno9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunpNO4Ee2O0cjNcmYJpQ" name="getFlowPriority" specification="_5L4YqNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunpdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunptO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPriority();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sunp9O4Ee2O0cjNcmYJpQ" name="getFlowPeriod" specification="_5L4Yq9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunqNO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunqdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunqtO4Ee2O0cjNcmYJpQ" name="getFlowDeadline" specification="_5L4YrtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sunq9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunrNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getDeadline();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunrdO4Ee2O0cjNcmYJpQ" name="getFlowPhase" specification="_5L4_sNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunrtO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sunr9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SunsNO4Ee2O0cjNcmYJpQ" name="getFlowTxAttemptsPerLink" specification="_5L4_s9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SunsdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SunstO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOkNO4Ee2O0cjNcmYJpQ" name="setFlowsInPriorityOrder" specification="_5L4_ttO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		// Now sort by a secondary key, which is index in this case&#xD;
		List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
				.collect(Collectors.toList());&#xD;
		// Now sort by primary key, which is priority in this case&#xD;
		List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		// Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		// in the requested&#xD;
		// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOkdO4Ee2O0cjNcmYJpQ" name="setFlowsInDMorder" specification="_5L4_t9O4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		/* Now sort by a secondary key, which is priority in this case */&#xD;
		List&lt;Flow> sortedByPriority = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		/* Now sort by primary key, which is deadline in this case */&#xD;
		List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getDeadline))&#xD;
				.collect(Collectors.toList());&#xD;
		/*&#xD;
		 * Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		 * in the requested order&#xD;
		 */&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOktO4Ee2O0cjNcmYJpQ" name="setFlowsInRMorder" specification="_5L4_uNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		// Now sort by a secondary key, which is priority in this case&#xD;
		List&lt;Flow> sortedByPriority = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		// Now sort by primary key, which is period in this case&#xD;
		List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
				.collect(Collectors.toList());&#xD;
		// Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		// in the requested&#xD;
		// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOk9O4Ee2O0cjNcmYJpQ" name="setFlowsInRealTimeHARTorder" specification="_5L4_udO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOlNO4Ee2O0cjNcmYJpQ" name="finalizeCurrentFlow" specification="_5L4_utO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOldO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
			finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
		} else {&#xD;
			finalizeFlowWithE2eParameters(flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOltO4Ee2O0cjNcmYJpQ" name="nextReleaseTime" specification="_5L4_vNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOl9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOmNO4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOmdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		flow.setLastUpdateTime(currentTime);&#xD;
		flow.setNextReleaseTime(currentTime);&#xD;
		return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOmtO4Ee2O0cjNcmYJpQ" name="nextAbsoluteDeadline" specification="_5L5mwNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOm9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOnNO4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOndO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		flow.setLastUpdateTime(currentTime);&#xD;
		flow.setNextReleaseTime(currentTime);&#xD;
		return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOntO4Ee2O0cjNcmYJpQ" name="finalizeFlowWithE2eParameters" specification="_5L5mxNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOn9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
		var m = minPacketReceptionRate; // shorten the name :-)&#xD;
		if (flowNode != null) {&#xD;
			var nodes = flowNode.nodes;&#xD;
			int nHops = nodes.size();&#xD;
			if (nHops &lt; 1) {&#xD;
				/*&#xD;
				 * number of hops in flow, but make sure it will be at least 1, else it isn't a&#xD;
				 * flow! || was -1 at end&#xD;
				 */&#xD;
				nHops = 2;&#xD;
			}&#xD;
			Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
								// and when m == 1.0&#xD;
			if (m &lt; 1.0) {&#xD;
				/*&#xD;
				 * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) /&#xD;
				 * log(1 - M) = # txs per hop&#xD;
				 */&#xD;
				nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
			}&#xD;
			/* set numTxPerLink based on M, E2E, and flow length */&#xD;
			flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
			/* Now compute nTx per link to reach E2E requirement. */&#xD;
			// use constructor that doesn't set numFaults so fixed = false &#xD;
			// numTxPerLinkAndTotalTxCost will calculate numTxAttemptsPerLinkAndTotalTxAttempts&#xD;
			ReliabilityAnalysis reliabilityAnalysisObj = new ReliabilityAnalysis(e2e, minPacketReceptionRate);&#xD;
			ArrayList&lt;Integer> linkTxAndTotalCost = reliabilityAnalysisObj.numTxPerLinkAndTotalTxCost(flowNode);            &#xD;
			flowNode.linkTxAndTotalCost = linkTxAndTotalCost;                                                               &#xD;
			flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
		} else { // should never happen...&#xD;
			System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
					+ &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOoNO4Ee2O0cjNcmYJpQ" name="finalizeFlowWithFixedFaultTolerance" specification="_5L5mxtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOodO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
		if (flowNode != null) {&#xD;
			/* set numTxPerLink based on numFaults */&#xD;
			flowNode.numTxPerLink = numFaults + 1;&#xD;
			/* Now compute nTx per link to reach E2E requirement. */&#xD;
			// use numFaults constructor so fixed = true&#xD;
			// numTxPerLinkAndTotalTxCost will return getFixedTxPerLinkAndTotalTxCost&#xD;
			ReliabilityAnalysis reliabilityAnalysisObj = new ReliabilityAnalysis(numFaults);&#xD;
			ArrayList&lt;Integer> linkTxAndTotalCost = reliabilityAnalysisObj.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
			flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
			flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
		} else { // should never happen...&#xD;
			System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
					+ &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOotO4Ee2O0cjNcmYJpQ" name="getNodeNamesOrderedAlphabetically" specification="_5L5myNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOo9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SvOpNO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
		Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
		String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
		Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
		// However, if names are actually strings of integers, then the sort doesn't&#xD;
		// come out&#xD;
		// the way we would like. So, handle that case&#xD;
		var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
		var allIntNames = true; // flag to see if all names are Ints or not&#xD;
		for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
			var nodeName = nodeNames[i];&#xD;
			if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
				// nodeName is an alpha representation of an integer&#xD;
				nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
			} else {&#xD;
				// nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
				allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
										// set it once&#xD;
				break; // can stop the loop once we know not all of the names are ints&#xD;
			}&#xD;
		}&#xD;
		if (allIntNames) {&#xD;
			// If all names are ints, then we need to sort them accordingly&#xD;
			// Otherwise, we get names in what appears to not be in order because&#xD;
			Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
			for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
				nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
			}&#xD;
		}&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOpdO4Ee2O0cjNcmYJpQ" name="getFlow" specification="_5L5mzNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOptO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOp9O4Ee2O0cjNcmYJpQ" type="_5K46INO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
		if (flow == null) {// return empty node if not found&#xD;
			flow = new Flow();&#xD;
			System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
		}&#xD;
		return flow;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOqNO4Ee2O0cjNcmYJpQ" name="getFlowNames" specification="_5L6N0NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOqdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SvOqtO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
		// could use new String[list.size()], but due to JVM optimizations new (new&#xD;
		// String[0] is better&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOq9O4Ee2O0cjNcmYJpQ" name="getNodeIndex" specification="_5L6N1NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOrNO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOrdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
		var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
		if (node != null) {&#xD;
			index = node.getIndex();&#xD;
		}&#xD;
		return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOrtO4Ee2O0cjNcmYJpQ" name="getNodesInFlow" specification="_5L6N19O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOr9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOsNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SvOsdO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
		// nodes in the flow to create an array of the node names in&#xD;
		// the same order as they exist in the flow specification (i.e., Graph file)&#xD;
		var flow = flows.get(flowName);&#xD;
		String[] nodes;&#xD;
		if (flow != null) {&#xD;
			nodes = new String[flow.nodes.size()];&#xD;
			for (int i = 0; i &lt; nodes.length; i++) {&#xD;
				var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
				nodes[i] = node.getName(); // get the name and store it in the array&#xD;
			}&#xD;
&#xD;
		} else {&#xD;
			nodes = new String[0]; // return empty array&#xD;
			System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
		}&#xD;
		return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOstO4Ee2O0cjNcmYJpQ" name="getHyperPeriod" specification="_5L6N3NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOs9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
		for (String flowName : getFlowNames()) {&#xD;
			// var dm = new Utlitities();&#xD;
			hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
																				// so far and the current&#xD;
																				// period, then update the&#xD;
																				// hyperPeriod with that&#xD;
																				// value&#xD;
		}&#xD;
		return hyperPeriod;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOtNO4Ee2O0cjNcmYJpQ" name="getTotalTxAttemptsInFlow" specification="_5L6N3tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOtdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOttO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
		var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
		var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
		return totalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOt9O4Ee2O0cjNcmYJpQ" name="getNumTxAttemptsPerLink" specification="_5L604dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOuNO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOudO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SvOutO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
		var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
		linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of others&#xD;
		return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOu9O4Ee2O0cjNcmYJpQ" name="addEdge" specification="_5REaodO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOvNO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SvOvdO4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
		node.addEdge(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SvOvtO4Ee2O0cjNcmYJpQ" name="maxFlowLength" specification="_5L605tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SvOv9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
		for (Flow flow : flows.values()) {&#xD;
			maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
		}&#xD;
		return maxLength;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5L2jcNO4Ee2O0cjNcmYJpQ" name="setDefaultParameters" visibility="private" method="_5SuAg9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5L2jcdO4Ee2O0cjNcmYJpQ" name="getE2e" method="_5SuAhNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZA9ejEe2IjMkQsyA0cQ">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_5R12uNO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5L2jctO4Ee2O0cjNcmYJpQ" name="getIntForFlowNames" method="_5SuAhtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZBNejEe2IjMkQsyA0cQ">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L2jc9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L2jdNO4Ee2O0cjNcmYJpQ" name="getName" method="_5SuAiNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZBdejEe2IjMkQsyA0cQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L2jddO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L2jdtO4Ee2O0cjNcmYJpQ" name="getMaxPhase" method="_5SuAjNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZB9ejEe2IjMkQsyA0cQ">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L2jd9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L2jeNO4Ee2O0cjNcmYJpQ" name="getMinPeriod" method="_5SuAjtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZCNejEe2IjMkQsyA0cQ">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L2jedO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3KgNO4Ee2O0cjNcmYJpQ" name="setIntForFlowNames" method="_5SuAktO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZCtejEe2IjMkQsyA0cQ">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3KgdO4Ee2O0cjNcmYJpQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3KgtO4Ee2O0cjNcmYJpQ" name="setName" method="_5SungNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZC9ejEe2IjMkQsyA0cQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3Kg9O4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3KhNO4Ee2O0cjNcmYJpQ" name="setNodeChannel" method="_5SungtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZDNejEe2IjMkQsyA0cQ">
                  <body>@param name    the node whose channel is to be set&#xD;
	 * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3KhdO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L3KhtO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3Kh9O4Ee2O0cjNcmYJpQ" name="getNodeChannel" method="_5SunhdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZDdejEe2IjMkQsyA0cQ">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3KiNO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L3KidO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3KitO4Ee2O0cjNcmYJpQ" name="addFlow" method="_5SuniNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZDtejEe2IjMkQsyA0cQ">
                  <body>This method will add a new flow to the Flows dictionary. If the flow being&#xD;
	 * added is already in the dictionary it will overwrite the current entry but&#xD;
	 * also produce a warning so the user knows if a flow has already been added&#xD;
	 * &#xD;
	 * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3Ki9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3KjNO4Ee2O0cjNcmYJpQ" name="isIntForNodeNames" method="_5SunitO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZD9ejEe2IjMkQsyA0cQ">
                  <body>@return intForNodeNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3KjdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3xkNO4Ee2O0cjNcmYJpQ" name="isIntForFlowNames" method="_5SunjNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZENejEe2IjMkQsyA0cQ">
                  <body>@return intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3xkdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3xktO4Ee2O0cjNcmYJpQ" name="addNodeToFlow" method="_5SunjtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZEdejEe2IjMkQsyA0cQ">
                  <body>This method takes a node name and adds that node to a flow corresponding to&#xD;
	 * the flow name. The node is appended to the node array for the given flow&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param flowName name of which flow nodeName will be added to&#xD;
	 * @param nodeName name of the node to be added to flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3xk9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L3xlNO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3xldO4Ee2O0cjNcmYJpQ" name="getFlowPriority" method="_5SunkdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZEtejEe2IjMkQsyA0cQ">
                  <body>This method returns the index priority of a node in a flow. It gets the nodes&#xD;
	 * from a given flow name and then iterates through that set flows nodes in&#xD;
	 * order to find the priority of a of the nodeName.&#xD;
	 * &#xD;
	 * @param flowName name of the flow that will contain the desired nodes&#xD;
	 * @param nodeName name of the node in which the priority is desired&#xD;
	 * @return the priority of a node in a specific flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L3xltO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L3xl9O4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L3xmNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3xmdO4Ee2O0cjNcmYJpQ" name="setFlowPriority" method="_5SunldO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L3xmtO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L3xm9O4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3xnNO4Ee2O0cjNcmYJpQ" name="setFlowPeriod" method="_5SunmNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L3xndO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L3xntO4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L3xn9O4Ee2O0cjNcmYJpQ" name="setFlowDeadline" method="_5Sunm9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L4YoNO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4YodO4Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4YotO4Ee2O0cjNcmYJpQ" name="setFlowPhase" method="_5SunntO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L4Yo9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4YpNO4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4YpdO4Ee2O0cjNcmYJpQ" name="getFlowIndex" method="_5SunodO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L4YptO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4Yp9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4YqNO4Ee2O0cjNcmYJpQ" name="getFlowPriority" method="_5SunpNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZE9ejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the priority of the&#xD;
	 * flow node&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer that represents the priority of the flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L4YqdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4YqtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4Yq9O4Ee2O0cjNcmYJpQ" name="getFlowPeriod" method="_5Sunp9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZFNejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the period from the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that is the period of a flow node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L4YrNO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4YrdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4YrtO4Ee2O0cjNcmYJpQ" name="getFlowDeadline" method="_5SunqtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZFdejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the deadline from the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that is the deadline of a flowNode.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L4Yr9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4YsNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4_sNO4Ee2O0cjNcmYJpQ" name="getFlowPhase" method="_5SunrdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZFtejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the phase number of the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that represents the phase of the flow node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L4_sdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4_stO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4_s9O4Ee2O0cjNcmYJpQ" name="getFlowTxAttemptsPerLink" method="_5SunsNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZF9ejEe2IjMkQsyA0cQ">
                  <body>This method takes in the name of a flow and retrieves the number of tx per&#xD;
	 * link in a flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return and Integer to represent the number of tx per link.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L4_tNO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4_tdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4_ttO4Ee2O0cjNcmYJpQ" name="setFlowsInPriorityOrder" method="_5SvOkNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AENejEe2IjMkQsyA0cQ">
                  <body>When called this method sorts flows into priority order. First sort the flows&#xD;
	 * by index and then sort them by priority. Creates a new ArrayList and adds the&#xD;
	 * flows in the new priority order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4_t9O4Ee2O0cjNcmYJpQ" name="setFlowsInDMorder" method="_5SvOkdO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AEdejEe2IjMkQsyA0cQ">
                  <body>When called this method sorts flows into deadline order. First sort the flows&#xD;
	 * by priority and then sort them by deadline. Creates a new ArrayList and adds&#xD;
	 * the flows in the new deadline order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4_uNO4Ee2O0cjNcmYJpQ" name="setFlowsInRMorder" method="_5SvOktO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AEtejEe2IjMkQsyA0cQ">
                  <body>When called this method sorts flows into priority order. First sort the flows&#xD;
	 * by priority and then sort them by period. Creates a new ArrayList and adds&#xD;
	 * the flows in the new period order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4_udO4Ee2O0cjNcmYJpQ" name="setFlowsInRealTimeHARTorder" method="_5SvOk9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5L4_utO4Ee2O0cjNcmYJpQ" name="finalizeCurrentFlow" method="_5SvOlNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L4_u9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L4_vNO4Ee2O0cjNcmYJpQ" name="nextReleaseTime" method="_5SvOltO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L4_vdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4_vtO4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L4_v9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L5mwNO4Ee2O0cjNcmYJpQ" name="nextAbsoluteDeadline" method="_5SvOmtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L5mwdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L5mwtO4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L5mw9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L5mxNO4Ee2O0cjNcmYJpQ" name="finalizeFlowWithE2eParameters" visibility="private" method="_5SvOntO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AE9ejEe2IjMkQsyA0cQ">
                  <body>This method calculates and sets the flow's linkTxAndTotalCost as the numTxAttemptsPerLinkAndTotalTxAttempts&#xD;
	 * based on the E2E (end-to-end) reliability requirement&#xD;
	 * &#xD;
	 * @param flowName is a specified flow object</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L5mxdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L5mxtO4Ee2O0cjNcmYJpQ" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_5SvOoNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AFNejEe2IjMkQsyA0cQ">
                  <body>This method calculates and sets the flow's linkTxAndTotalCost as the fixedTxPerLinkAndTotalTxCost&#xD;
	 * with fixed fault tolerance based on the flow's number of faults (numFaults)&#xD;
	 * &#xD;
	 * @param flowName is a specified flow object</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L5mx9O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L5myNO4Ee2O0cjNcmYJpQ" name="getNodeNamesOrderedAlphabetically" method="_5SvOotO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AFdejEe2IjMkQsyA0cQ">
                  <body>This method shall sort the nodes alphabetically. Three different sorting&#xD;
	 * processes are needed based on whether the nodes are integers or letters.&#xD;
	 * &#xD;
	 * @return a String Array of the node names in an alphabetically sorted order</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L5mydO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5L5mytO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L5mzNO4Ee2O0cjNcmYJpQ" name="getFlow" visibility="private" method="_5SvOpdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L5mzdO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5REaoNO4Ee2O0cjNcmYJpQ" type="_5K46INO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5L6N0NO4Ee2O0cjNcmYJpQ" name="getFlowNames" method="_5SvOqNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AFtejEe2IjMkQsyA0cQ">
                  <body>This method returns the flow names in their original order.&#xD;
	 * &#xD;
	 * @return a String Array containing the flow names in their original order.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L6N0dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5L6N0tO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L6N1NO4Ee2O0cjNcmYJpQ" name="getNodeIndex" method="_5SvOq9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L6N1dO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L6N1tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L6N19O4Ee2O0cjNcmYJpQ" name="getNodesInFlow" method="_5SvOrtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AF9ejEe2IjMkQsyA0cQ">
                  <body>This method takes in a flow name and retrieves the nodes in the given flow.&#xD;
	 * If no nodes are present the method will return an empty array.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return a String Array of the nodes in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L6N2NO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L6N2dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5L6N2tO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L6N3NO4Ee2O0cjNcmYJpQ" name="getHyperPeriod" method="_5SvOstO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AGNejEe2IjMkQsyA0cQ">
                  <body>This method computes the LCM of all periods and then updates the current&#xD;
	 * hyperPeriod to new number.&#xD;
	 * &#xD;
	 * @return an Integer that represents the hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L6N3dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L6N3tO4Ee2O0cjNcmYJpQ" name="getTotalTxAttemptsInFlow" method="_5SvOtNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AGdejEe2IjMkQsyA0cQ">
                  <body>This method takes in a flow name and calculates the total cost of the&#xD;
	 * specified flow.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer representing the total cost of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L6N39O4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L604NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L604dO4Ee2O0cjNcmYJpQ" name="getNumTxAttemptsPerLink" method="_5SvOt9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AGtejEe2IjMkQsyA0cQ">
                  <body>This method takes in a flow name, gets the flow object and sets a new Array&#xD;
	 * List to the link tx and total cost of the flow. Removes last element because&#xD;
	 * it is just a sum of the others.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer Array containing the link tx and total cost of a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L604tO4Ee2O0cjNcmYJpQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L6049O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5L605NO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L605tO4Ee2O0cjNcmYJpQ" name="maxFlowLength" method="_5SvOvtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AHNejEe2IjMkQsyA0cQ">
                  <body>This method records the max flow length by looping through all flows and&#xD;
	 * keeping track of the max value.&#xD;
	 * &#xD;
	 * @return an Integer that represents the max length of the flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L6059O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5REaodO4Ee2O0cjNcmYJpQ" name="addEdge" method="_5SvOu9O4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C44AG9ejEe2IjMkQsyA0cQ">
                  <body>This method adds an edge to a node by getting the node object a and adding an&#xD;
	 * edge.&#xD;
	 * &#xD;
	 * @param nodeName name of the node.&#xD;
	 * @param edge     name of the edge that will be added.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5REaotO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5REao9O4Ee2O0cjNcmYJpQ" name="edge" type="_5K0ot9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R1PoNO4Ee2O0cjNcmYJpQ" name="WorkLoad" visibility="package" method="_5SuAeNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5R1PpNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5R1PpdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C43ZAdejEe2IjMkQsyA0cQ">
                  <body>This method takes the below parameters and constructs nodes and flows using&#xD;
	 * the WorkloadListener build nodes and flows function.&#xD;
	 * &#xD;
	 * @param m             is a double that represents the minimum packet reception&#xD;
	 *                      rate&#xD;
	 * @param e2e           is a double that populates this flow object as the input&#xD;
	 *                      is read&#xD;
	 * @param inputFileName is a String that represents the name of the file used to&#xD;
	 *                      create a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5R1PodO4Ee2O0cjNcmYJpQ" name="m" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R1PotO4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R1Po9O4Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R1PptO4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R12sNO4Ee2O0cjNcmYJpQ" name="WorkLoad" visibility="package" method="_5SuAfdO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5R12tdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5R12ttO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C43ZAtejEe2IjMkQsyA0cQ">
                  <body>This method takes the below parameters and constructs nodes and flows using&#xD;
	 * the WorkloadListener build nodes and flows function.&#xD;
	 * &#xD;
	 * @param numFaults     is an Integer that represents the number of faults in a&#xD;
	 *                      flow.&#xD;
	 * @param m             is a double that represents the minimum packet reception&#xD;
	 *                      rate&#xD;
	 * @param e2e           is a double that populates this flow object as the input&#xD;
	 *                      is read&#xD;
	 * @param inputFileName is a String that represents the name of the file used to&#xD;
	 *                      create a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5R12sdO4Ee2O0cjNcmYJpQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R12stO4Ee2O0cjNcmYJpQ" name="m" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R12s9O4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R12tNO4Ee2O0cjNcmYJpQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R12t9O4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R12udO4Ee2O0cjNcmYJpQ" name="setMinPacketReceptionRate" method="_5SuAitO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZBtejEe2IjMkQsyA0cQ">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5R12utO4Ee2O0cjNcmYJpQ" name="minPacketReceptionRate" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R12u9O4Ee2O0cjNcmYJpQ" name="setE2e" method="_5SuAkNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C43ZCdejEe2IjMkQsyA0cQ">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5R12vNO4Ee2O0cjNcmYJpQ" name="e2e" type="_5RreodO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5L8qENO4Ee2O0cjNcmYJpQ" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_5SYpQNO4Ee2O0cjNcmYJpQ" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SYpQdO4Ee2O0cjNcmYJpQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SYpQtO4Ee2O0cjNcmYJpQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SYpQ9O4Ee2O0cjNcmYJpQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SYpRNO4Ee2O0cjNcmYJpQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SYpRdO4Ee2O0cjNcmYJpQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SYpRtO4Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SYpR9O4Ee2O0cjNcmYJpQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQUNO4Ee2O0cjNcmYJpQ" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SZQUdO4Ee2O0cjNcmYJpQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQUtO4Ee2O0cjNcmYJpQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQVNO4Ee2O0cjNcmYJpQ" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQVdO4Ee2O0cjNcmYJpQ" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQVtO4Ee2O0cjNcmYJpQ" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQV9O4Ee2O0cjNcmYJpQ" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQWdO4Ee2O0cjNcmYJpQ" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQW9O4Ee2O0cjNcmYJpQ" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZQXdO4Ee2O0cjNcmYJpQ" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZ3YNO4Ee2O0cjNcmYJpQ" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SZ3YdO4Ee2O0cjNcmYJpQ" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SZ3YtO4Ee2O0cjNcmYJpQ" name="predecessor" type="_5L8qENO4Ee2O0cjNcmYJpQ" association="_5S6NxNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SZ3Y9O4Ee2O0cjNcmYJpQ" name="endTimes" visibility="private" type="_5LQtldO4Ee2O0cjNcmYJpQ" association="_5TQL9NO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SaecNO4Ee2O0cjNcmYJpQ" name="subObjects" type="_5RGP0dO4Ee2O0cjNcmYJpQ" isReadOnly="true" association="_5TQL99O4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1oNO4Ee2O0cjNcmYJpQ" name="SchedulableObject" specification="_5L9RINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sv1odO4Ee2O0cjNcmYJpQ" type="_5L8qENO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1otO4Ee2O0cjNcmYJpQ" name="SchedulableObject" specification="_5RG24NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sv1o9O4Ee2O0cjNcmYJpQ" name="obj" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sv1pNO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1pdO4Ee2O0cjNcmYJpQ" type="_5L8qENO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1ptO4Ee2O0cjNcmYJpQ" name="SchedulableObject" specification="_5L94M9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sv1p9O4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1qNO4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1qdO4Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1qtO4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1q9O4Ee2O0cjNcmYJpQ" type="_5L8qENO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1rNO4Ee2O0cjNcmYJpQ" name="SchedulableObject" specification="_5L94O9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sv1rdO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1rtO4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1r9O4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1sNO4Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1sdO4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sv1stO4Ee2O0cjNcmYJpQ" type="_5L8qENO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1s9O4Ee2O0cjNcmYJpQ" name="setDefaultParameters" specification="_5L94RNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1tNO4Ee2O0cjNcmYJpQ" name="getAllEndTimes" specification="_5L-fQNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sv1tdO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1ttO4Ee2O0cjNcmYJpQ" name="addToEndTimes" specification="_5L-fQtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sv1t9O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1uNO4Ee2O0cjNcmYJpQ" name="peekEndTimes" specification="_5L-fRNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sv1udO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1utO4Ee2O0cjNcmYJpQ" name="pollEndTimes" specification="_5L-fRtO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sv1u9O4Ee2O0cjNcmYJpQ" name="addSubObject" specification="_5RG259O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sv1vNO4Ee2O0cjNcmYJpQ" name="obj" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcsNO4Ee2O0cjNcmYJpQ" name="getName" specification="_5L-fR9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SwcsdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcstO4Ee2O0cjNcmYJpQ" name="setName" specification="_5L_GUNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swcs9O4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwctNO4Ee2O0cjNcmYJpQ" name="getReleaseTime" specification="_5L_GUtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SwctdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcttO4Ee2O0cjNcmYJpQ" name="getPhase" specification="_5L_GVNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swct9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcuNO4Ee2O0cjNcmYJpQ" name="getStartTime" specification="_5L_GVtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SwcudO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcutO4Ee2O0cjNcmYJpQ" name="setEndTime" specification="_5L_GWNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swcu9O4Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcvNO4Ee2O0cjNcmYJpQ" name="setStartTime" specification="_5L_GWtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SwcvdO4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcvtO4Ee2O0cjNcmYJpQ" name="setReleaseTime" specification="_5L_GXNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swcv9O4Ee2O0cjNcmYJpQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcwNO4Ee2O0cjNcmYJpQ" name="setPeriod" specification="_5L_GXtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SwcwdO4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcwtO4Ee2O0cjNcmYJpQ" name="setPhase" specification="_5L_tYNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swcw9O4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcxNO4Ee2O0cjNcmYJpQ" name="setNextReleaseTime" specification="_5L_tYtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SwcxdO4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcxtO4Ee2O0cjNcmYJpQ" name="maxPhaseComparison" specification="_5RG26dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swcx9O4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SwcyNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwcydO4Ee2O0cjNcmYJpQ" name="maxPhaseComparison" specification="_5RG27NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SwcytO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Swcy9O4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SwczNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SwczdO4Ee2O0cjNcmYJpQ" name="deadlineComparison" specification="_5RHd8NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SwcztO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Swcz9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Swc0NO4Ee2O0cjNcmYJpQ" name="deadlineComparison" specification="_5RHd89O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swc0dO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Swc0tO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Swc09O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Swc1NO4Ee2O0cjNcmYJpQ" name="periodComparison" specification="_5RHd99O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swc1dO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Swc1tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Swc19O4Ee2O0cjNcmYJpQ" name="periodComparison" specification="_5RHd-tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swc2NO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Swc2dO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Swc2tO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Swc29O4Ee2O0cjNcmYJpQ" name="priorityComparison" specification="_5RHd_tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Swc3NO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Swc3dO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxDwNO4Ee2O0cjNcmYJpQ" name="priorityComparison" specification="_5RIFANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxDwdO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxDwtO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxDw9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxDxNO4Ee2O0cjNcmYJpQ" name="releaseTimeComparison" specification="_5RIFBNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxDxdO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxDxtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxDx9O4Ee2O0cjNcmYJpQ" name="releaseTimeComparison" specification="_5RIFB9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxDyNO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxDydO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxDytO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxDy9O4Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparison" specification="_5RIFC9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxDzNO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxDzdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxDztO4Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparison" specification="_5RIFDtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxDz9O4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxD0NO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxD0dO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD0tO4Ee2O0cjNcmYJpQ" name="compareAscendingOrder" specification="_5MAUcNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxD09O4Ee2O0cjNcmYJpQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SxD1NO4Ee2O0cjNcmYJpQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SxD1dO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD1tO4Ee2O0cjNcmYJpQ" name="compareDescendingOrder" specification="_5MAUdNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxD19O4Ee2O0cjNcmYJpQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SxD2NO4Ee2O0cjNcmYJpQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SxD2dO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD2tO4Ee2O0cjNcmYJpQ" name="print" specification="_5MAUeNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxD29O4Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD3NO4Ee2O0cjNcmYJpQ" name="print" specification="_5MAUetO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5L9RINO4Ee2O0cjNcmYJpQ" name="SchedulableObject" visibility="package" method="_5Sv1oNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5L94MNO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5L94MdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5L94MtO4Ee2O0cjNcmYJpQ" type="_5L8qENO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5L94M9O4Ee2O0cjNcmYJpQ" name="SchedulableObject" visibility="package" method="_5Sv1ptO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5L94ONO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5L94OdO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5L94NNO4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94NdO4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94NtO4Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94N9O4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94OtO4Ee2O0cjNcmYJpQ" type="_5L8qENO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5L94O9O4Ee2O0cjNcmYJpQ" name="SchedulableObject" visibility="package" method="_5Sv1rNO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5L94QdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5L94QtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5L94PNO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94PdO4Ee2O0cjNcmYJpQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94PtO4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94P9O4Ee2O0cjNcmYJpQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94QNO4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5L94Q9O4Ee2O0cjNcmYJpQ" type="_5L8qENO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5L94RNO4Ee2O0cjNcmYJpQ" name="setDefaultParameters" visibility="private" method="_5Sv1s9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5L-fQNO4Ee2O0cjNcmYJpQ" name="getAllEndTimes" method="_5Sv1tNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j0dejEe2IjMkQsyA0cQ">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RG25tO4Ee2O0cjNcmYJpQ" type="_5LQtldO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5L-fQtO4Ee2O0cjNcmYJpQ" name="addToEndTimes" method="_5Sv1ttO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L-fQ9O4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L-fRNO4Ee2O0cjNcmYJpQ" name="peekEndTimes" method="_5Sv1uNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5L-fRdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L-fRtO4Ee2O0cjNcmYJpQ" name="pollEndTimes" method="_5Sv1utO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5L-fR9O4Ee2O0cjNcmYJpQ" name="getName" method="_5SwcsNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j0tejEe2IjMkQsyA0cQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L-fSNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_GUNO4Ee2O0cjNcmYJpQ" name="setName" method="_5SwcstO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j09ejEe2IjMkQsyA0cQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_GUdO4Ee2O0cjNcmYJpQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_GUtO4Ee2O0cjNcmYJpQ" name="getReleaseTime" method="_5SwctNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j1NejEe2IjMkQsyA0cQ">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_GU9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_GVNO4Ee2O0cjNcmYJpQ" name="getPhase" method="_5SwcttO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j1dejEe2IjMkQsyA0cQ">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_GVdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_GVtO4Ee2O0cjNcmYJpQ" name="getStartTime" method="_5SwcuNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j1tejEe2IjMkQsyA0cQ">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_GV9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_GWNO4Ee2O0cjNcmYJpQ" name="setEndTime" method="_5SwcutO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j19ejEe2IjMkQsyA0cQ">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_GWdO4Ee2O0cjNcmYJpQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_GWtO4Ee2O0cjNcmYJpQ" name="setStartTime" method="_5SwcvNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j2NejEe2IjMkQsyA0cQ">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_GW9O4Ee2O0cjNcmYJpQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_GXNO4Ee2O0cjNcmYJpQ" name="setReleaseTime" method="_5SwcvtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j2dejEe2IjMkQsyA0cQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_GXdO4Ee2O0cjNcmYJpQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_GXtO4Ee2O0cjNcmYJpQ" name="setPeriod" method="_5SwcwNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j2tejEe2IjMkQsyA0cQ">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_GX9O4Ee2O0cjNcmYJpQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_tYNO4Ee2O0cjNcmYJpQ" name="setPhase" method="_5SwcwtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j29ejEe2IjMkQsyA0cQ">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_tYdO4Ee2O0cjNcmYJpQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5L_tYtO4Ee2O0cjNcmYJpQ" name="setNextReleaseTime" method="_5SwcxNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j3NejEe2IjMkQsyA0cQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_5L_tY9O4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MAUcNO4Ee2O0cjNcmYJpQ" name="compareAscendingOrder" method="_5SxD0tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MAUcdO4Ee2O0cjNcmYJpQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MAUctO4Ee2O0cjNcmYJpQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MAUc9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MAUdNO4Ee2O0cjNcmYJpQ" name="compareDescendingOrder" method="_5SxD1tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MAUddO4Ee2O0cjNcmYJpQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MAUdtO4Ee2O0cjNcmYJpQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MAUd9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MAUeNO4Ee2O0cjNcmYJpQ" name="print" method="_5SxD2tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MAUedO4Ee2O0cjNcmYJpQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MAUetO4Ee2O0cjNcmYJpQ" name="print" method="_5SxD3NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5RG24NO4Ee2O0cjNcmYJpQ" name="SchedulableObject" visibility="package" method="_5Sv1otO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RG249O4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RG25NO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_C41j0NejEe2IjMkQsyA0cQ">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RG24dO4Ee2O0cjNcmYJpQ" name="obj" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RG24tO4Ee2O0cjNcmYJpQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RG25dO4Ee2O0cjNcmYJpQ" type="_5L8qENO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RG259O4Ee2O0cjNcmYJpQ" name="addSubObject" method="_5Sv1u9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RG26NO4Ee2O0cjNcmYJpQ" name="obj" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RG26dO4Ee2O0cjNcmYJpQ" name="maxPhaseComparison" method="_5SwcxtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RG26tO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RG269O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RG27NO4Ee2O0cjNcmYJpQ" name="maxPhaseComparison" method="_5SwcydO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RG27dO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RG27tO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RG279O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RHd8NO4Ee2O0cjNcmYJpQ" name="deadlineComparison" method="_5SwczdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RHd8dO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RHd8tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RHd89O4Ee2O0cjNcmYJpQ" name="deadlineComparison" method="_5Swc0NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RHd9NO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RHd9dO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RHd9tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RHd99O4Ee2O0cjNcmYJpQ" name="periodComparison" method="_5Swc1NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RHd-NO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RHd-dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RHd-tO4Ee2O0cjNcmYJpQ" name="periodComparison" method="_5Swc19O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RHd-9O4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RHd_NO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RHd_dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RHd_tO4Ee2O0cjNcmYJpQ" name="priorityComparison" method="_5Swc29O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RHd_9O4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RHeANO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RIFANO4Ee2O0cjNcmYJpQ" name="priorityComparison" method="_5SxDwNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RIFAdO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RIFAtO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RIFA9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RIFBNO4Ee2O0cjNcmYJpQ" name="releaseTimeComparison" method="_5SxDxNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RIFBdO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RIFBtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RIFB9O4Ee2O0cjNcmYJpQ" name="releaseTimeComparison" method="_5SxDx9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RIFCNO4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RIFCdO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RIFCtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RIFC9O4Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparison" method="_5SxDy9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RIFDNO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RIFDdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RIFDtO4Ee2O0cjNcmYJpQ" name="LatestReleaseTimeComparison" method="_5SxDztO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RIFD9O4Ee2O0cjNcmYJpQ" name="obj1" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RIFENO4Ee2O0cjNcmYJpQ" name="obj2" type="_5L8qENO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RIsENO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5MCwsNO4Ee2O0cjNcmYJpQ" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_C44AHtejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_5R3r4NO4Ee2O0cjNcmYJpQ" general="_5QfL0dO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SaectO4Ee2O0cjNcmYJpQ" name="workLoad" visibility="package" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5TQzAdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SbFgdO4Ee2O0cjNcmYJpQ" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD3dO4Ee2O0cjNcmYJpQ" name="WorkLoadListener" specification="_5RJ6MNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxD3tO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SxD39O4Ee2O0cjNcmYJpQ" type="_5MCwsNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD4NO4Ee2O0cjNcmYJpQ" name="buildNodesAndFlows" specification="_5RJ6NdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxD4dO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD4tO4Ee2O0cjNcmYJpQ" name="testPrintStdOut" specification="_5MDXwNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxD49O4Ee2O0cjNcmYJpQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD5NO4Ee2O0cjNcmYJpQ" name="enterWarpName" specification="_5RJ6N9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxD5dO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Qfy49O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SxD5tO4Ee2O0cjNcmYJpQ" name="enterFlowName" specification="_5RKhQtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SxD59O4Ee2O0cjNcmYJpQ" name="ctx" type="_5QgZ9tO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq0NO4Ee2O0cjNcmYJpQ" name="exitPriority" specification="_5RKhSdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sxq0dO4Ee2O0cjNcmYJpQ" name="ctx" type="_5RKhR9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq0tO4Ee2O0cjNcmYJpQ" name="exitPeriod" specification="_5RLIVdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sxq09O4Ee2O0cjNcmYJpQ" name="ctx" type="_5RLIU9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq1NO4Ee2O0cjNcmYJpQ" name="exitDeadline" specification="_5RLvYtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sxq1dO4Ee2O0cjNcmYJpQ" name="ctx" type="_5RLvYNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq1tO4Ee2O0cjNcmYJpQ" name="exitPhase" specification="_5RMWcNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sxq19O4Ee2O0cjNcmYJpQ" name="ctx" type="_5RLvZ9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq2NO4Ee2O0cjNcmYJpQ" name="exitSrcNode" specification="_5RMWddO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sxq2dO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhBANO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq2tO4Ee2O0cjNcmYJpQ" name="exitSnkNode" specification="_5RMWetO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sxq29O4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhBB9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq3NO4Ee2O0cjNcmYJpQ" name="exitFlow" specification="_5RM9gtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sxq3dO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhoE9O4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5MDXwNO4Ee2O0cjNcmYJpQ" name="testPrintStdOut" method="_5SxD4tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MDXwdO4Ee2O0cjNcmYJpQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RJ6MNO4Ee2O0cjNcmYJpQ" name="WorkLoadListener" visibility="private" method="_5SxD3dO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5RJ6MtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5RJ6M9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5RJ6MdO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RJ6NNO4Ee2O0cjNcmYJpQ" type="_5MCwsNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RJ6NdO4Ee2O0cjNcmYJpQ" name="buildNodesAndFlows" isStatic="true" method="_5SxD4NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RJ6NtO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RJ6N9O4Ee2O0cjNcmYJpQ" name="enterWarpName" method="_5SxD5NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RJ6ONO4Ee2O0cjNcmYJpQ" name="ctx" type="_5Qfy49O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RKhQtO4Ee2O0cjNcmYJpQ" name="enterFlowName" method="_5SxD5tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RKhQ9O4Ee2O0cjNcmYJpQ" name="ctx" type="_5QgZ9tO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RKhSdO4Ee2O0cjNcmYJpQ" name="exitPriority" method="_5Sxq0NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RKhStO4Ee2O0cjNcmYJpQ" name="ctx" type="_5RKhR9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RLIVdO4Ee2O0cjNcmYJpQ" name="exitPeriod" method="_5Sxq0tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RLIVtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5RLIU9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RLvYtO4Ee2O0cjNcmYJpQ" name="exitDeadline" method="_5Sxq1NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RLvY9O4Ee2O0cjNcmYJpQ" name="ctx" type="_5RLvYNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RMWcNO4Ee2O0cjNcmYJpQ" name="exitPhase" method="_5Sxq1tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RMWcdO4Ee2O0cjNcmYJpQ" name="ctx" type="_5RLvZ9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RMWddO4Ee2O0cjNcmYJpQ" name="exitSrcNode" method="_5Sxq2NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RMWdtO4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhBANO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RMWetO4Ee2O0cjNcmYJpQ" name="exitSnkNode" method="_5Sxq2tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RMWe9O4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhBB9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RM9gtO4Ee2O0cjNcmYJpQ" name="exitFlow" method="_5Sxq3NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RM9g9O4Ee2O0cjNcmYJpQ" name="ctx" type="_5QhoE9O4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5MD-0NO4Ee2O0cjNcmYJpQ" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq3tO4Ee2O0cjNcmYJpQ" name="testAddFlow" specification="_5MD-0dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F2&quot;;&#xD;
		//Add flow to workload&#xD;
		wld.addFlow(flowName);&#xD;
		&#xD;
		//check flows in the created workload, and return true if flowName&#xD;
		//is in it&#xD;
		assertTrue(wld.getFlows().containsKey(flowName), String.format(&quot;Expected true but got false&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq39O4Ee2O0cjNcmYJpQ" name="testAddFlowOverwritten" specification="_5MEl5tO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		&#xD;
		wld.addFlow(flowName);&#xD;
		&#xD;
		assertTrue(wld.getFlows().containsKey(flowName), String.format(&quot;Expected true but got false&quot;));&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq4NO4Ee2O0cjNcmYJpQ" name="testAddNodeToFlow" specification="_5MEl7dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		String nodeName = &quot;A&quot;;&#xD;
				&#xD;
		//Adds a node to the flow in workload&#xD;
		wld.addNodeToFlow(flowName, nodeName);&#xD;
		&#xD;
		//Checking to see if the added node is present in workload.&#xD;
		assertTrue(wld.getNodes().containsKey(nodeName),String.format(&quot;Expected true but got false&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq4dO4Ee2O0cjNcmYJpQ" name="testAddNodeToFlowEmpty" specification="_5MEl9NO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;EmptyWorkload.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		String nodeName = &quot;A&quot;;&#xD;
		&#xD;
		wld.addFlow(flowName);&#xD;
		wld.addNodeToFlow(flowName, nodeName);&#xD;
		&#xD;
		assertTrue(wld.getNodes().containsKey(nodeName), String.format(&quot;Expected true but got false&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq4tO4Ee2O0cjNcmYJpQ" name="testSetFlowPriority" specification="_5MFM9tO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		Integer priority = 0;&#xD;
		//sets priority to given flow&#xD;
		wld.setFlowPriority(flowName, priority);&#xD;
	    int actual = wld.getFlowPriority(flowName);&#xD;
		//checks to see if the priority has been correctly set to flowName&#xD;
		assertEquals(priority, actual,String.format(&quot;Expected %d Flow Priority but got %d.&quot;, priority, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq49O4Ee2O0cjNcmYJpQ" name="testGetFlowTxAttemptsPerLink" specification="_5MFM_dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		&#xD;
		int numAttempts = wld.getFlowTxAttemptsPerLink(flowName);&#xD;
		int expected = 3;&#xD;
		&#xD;
		&#xD;
		assertEquals(expected,numAttempts, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, numAttempts));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq5NO4Ee2O0cjNcmYJpQ" name="testGetFlowNames" specification="_5MFNBNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99, &quot;Example1a.txt&quot;);&#xD;
		String[] flowNames = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(flowNames));&#xD;
		&#xD;
		List&lt;String> actual = wld.getFlowNamesInOriginalOrder();&#xD;
		&#xD;
		assertEquals(expected, actual, String.format(&quot;Expected Flow names %s, but got %s&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq5dO4Ee2O0cjNcmYJpQ" name="testGetFlowNamesEmpty" specification="_5MF0BtO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;EmptyWorkload.txt&quot;);&#xD;
		String[] flowNames = {};&#xD;
		&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(flowNames));&#xD;
		&#xD;
		List&lt;String> actual = wld.getFlowNamesInOriginalOrder();&#xD;
		&#xD;
		assertEquals(expected, actual, String.format(&quot;Expected Flow names %s, but got %s&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sxq5tO4Ee2O0cjNcmYJpQ" name="testGetNodeIndexExisting" specification="_5MF0DdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		&#xD;
		String nodeName = &quot;B&quot;;&#xD;
		&#xD;
		int actual = wld.getNodeIndex(nodeName);&#xD;
		int expected = 1;&#xD;
		&#xD;
		assertEquals(expected,actual,String.format(&quot;Expected Node index %d but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR4NO4Ee2O0cjNcmYJpQ" name="testGetNodeIndexNonExisting" specification="_5MF0FNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example1a.txt&quot;);&#xD;
		&#xD;
		String nodeName = &quot;null&quot;;&#xD;
		&#xD;
		int actual = wld.getNodeIndex(nodeName);&#xD;
		int expected = 0;&#xD;
		&#xD;
		assertEquals(expected,actual,String.format(&quot;Expected node index %d but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR4dO4Ee2O0cjNcmYJpQ" name="testGetNumTxAttemptsPerLink" specification="_5MGbFdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99, &quot;Example1a.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		&#xD;
		Integer[] expected = {2,2,0};&#xD;
		Integer[] actual = wld.getNumTxAttemptsPerLink(flowName);&#xD;
&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR4tO4Ee2O0cjNcmYJpQ" name="testMaxFlowLength" specification="_5MGbHNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;Example2.txt&quot;);&#xD;
		//6 is the highest length of a flow in Example2.txt&#xD;
		int expected = 6;&#xD;
		int actual = wld.maxFlowLength();&#xD;
		&#xD;
		assertEquals(expected,actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR49O4Ee2O0cjNcmYJpQ" name="testMaxFlowLengthEmpty" specification="_5MGbI9O4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9,0.99,&quot;EmptyWorkload.txt&quot;);&#xD;
		//6 is the highest length of a flow in Example2.txt&#xD;
		int expected = 0;&#xD;
		int actual = wld.maxFlowLength();&#xD;
		&#xD;
		assertEquals(expected,actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR5NO4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowNonExistentFlow" specification="_5MHCItO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;Nonexistent Flow&quot;;&#xD;
&#xD;
		// If the lambda does not throw an IndexOutOfBoundsException,&#xD;
		// then the test will fail&#xD;
		Exception thrown = assertThrows(IndexOutOfBoundsException.class, () -> wld.getTotalTxAttemptsInFlow(flowName),&#xD;
				&quot;An IndexOutOfBounds exception was expected but not thrown.&quot;);&#xD;
		&#xD;
		// expected and actual error messages&#xD;
		String expectedErrorMessage = &quot;Index -1 out of bounds for length 0&quot;;&#xD;
		String actualErrorMessage = thrown.getMessage();&#xD;
&#xD;
		// Checking to make sure the error message from the exception is what I expected&#xD;
		assertEquals(expectedErrorMessage, actualErrorMessage, String.format(&#xD;
				&quot;Error message is incorrect. Expected %s but got %s&quot;, expectedErrorMessage, actualErrorMessage));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR5dO4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlow1" specification="_5MHCKdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		System.out.println(String.format(&quot;Num: %d&quot;, wld.getTotalTxAttemptsInFlow(flowName)));&#xD;
		int expected = 2;&#xD;
		int actual = wld.getTotalTxAttemptsInFlow(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR5tO4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlow2" specification="_5MHCMNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String flowName = &quot;AF4&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		int expected = 2;&#xD;
		int actual = wld.getTotalTxAttemptsInFlow(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR59O4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlowNumFaults1" specification="_5MHCN9O4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(6, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		System.out.println(String.format(&quot;Num: %d&quot;, wld.getTotalTxAttemptsInFlow(flowName)));&#xD;
		int expected = 14;&#xD;
		int actual = wld.getTotalTxAttemptsInFlow(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR6NO4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlowNumFaults2" specification="_5MHpNtO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(5, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String flowName = &quot;AF4&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		int expected = 42;&#xD;
		int actual = wld.getTotalTxAttemptsInFlow(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d transmission attempts but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR6dO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityNonExistentFlow" specification="_5MHpPdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;Nonexistent Flow&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		// when a node does not exist a blank flow is created and&#xD;
		// the priority is set by default to 0&#xD;
		int expected = 0;&#xD;
		int actual = wld.getFlowPriority(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR6tO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityDefaultPriority" specification="_5MHpRNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		String flowName = &quot;F0&quot;;&#xD;
&#xD;
		// Create expected and actual values&#xD;
		// 0 is the default priority and the priority is not specified in Example.txt&#xD;
		int expected = 0;&#xD;
		int actual = wld.getFlowPriority(flowName);&#xD;
&#xD;
		assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR69O4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityCustomPriority1" specification="_5MIQRtO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1A.txt&quot;);&#xD;
		&#xD;
		// Create expected and actual values&#xD;
		{&#xD;
			String flowName = &quot;F0&quot;;&#xD;
			// 0 is the priority set for F0 in Example1A.txt&#xD;
			int expected = 0;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		{&#xD;
			String flowName = &quot;F1&quot;;&#xD;
			// 1 is the priority set for F1 in Example1A.txt&#xD;
			int expected = 1;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
			&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR7NO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityCustomPriority2" specification="_5MIQTdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// Create expected and actual values&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow1&quot;;&#xD;
			// 70 is the priority set for RandomFlow1 in CustomWorkloadByZach.txt&#xD;
			int expected = 70;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow2&quot;;&#xD;
			// 48 is the priority set for RandomFlow2 in CustomWOrkloadByZach.txt&#xD;
			int expected = 48;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
			&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow3&quot;;&#xD;
			// 23 is the priority set for RandomFlow3 in CustomWOrkloadByZach.txt&#xD;
			int expected = 23;&#xD;
			int actual = wld.getFlowPriority(flowName);&#xD;
			&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR7dO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityWithNodes" specification="_5MIQVNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1a.txt&quot;);&#xD;
		&#xD;
		String nodeName = &quot;B&quot;;&#xD;
		{&#xD;
			// Set up values&#xD;
			String flowName = &quot;F0&quot;;&#xD;
			int expected = 0;&#xD;
			int actual = wld.getFlowPriority(flowName, nodeName);&#xD;
		&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		{&#xD;
			// Set up values&#xD;
			String flowName = &quot;F1&quot;;&#xD;
			int expected = 0;&#xD;
			int actual = wld.getFlowPriority(flowName, nodeName);&#xD;
		&#xD;
			assertSame(expected, actual, String.format(&quot;Expected %d priority but got %d.&quot;, expected, actual));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR7tO4Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrder1" specification="_5MI3VtO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example1a.txt&quot;);&#xD;
		&#xD;
		// We are testing that flows are sorted in order of period then priority as the second key&#xD;
		wld.setFlowsInRMorder();&#xD;
		&#xD;
		String[] expectedArray = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		// convert and array to arraylist&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(expectedArray));&#xD;
		// The actual contains a list of the names of the flows&#xD;
		List&lt;String> actual = wld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		// first check the sizes are equals so the loop won't crash&#xD;
		int expectedLength = expected.size();&#xD;
		int actualLength = actual.size();&#xD;
		assertSame(expectedLength, actualLength, String.format(&quot;Length of expected array is %d but we got %d&quot;, expectedLength, actualLength));&#xD;
		&#xD;
		// check to make sure the content of each array is equal&#xD;
		for(int i = 0; i &lt; expectedLength; i++) {&#xD;
			String expectedString = expected.get(i);&#xD;
			String actualString = actual.get(i);&#xD;
			assertEquals(expectedString, actualString, String.format(&quot;Expected %s but got %s.&quot;, expectedString, actualString));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR79O4Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrder2" specification="_5MI3XdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// We are testing that flows are sorted in order of period then priority as the second key&#xD;
		wld.setFlowsInRMorder();&#xD;
		String[] expectedArray = {&quot;RandomFlow1&quot;, &quot;RandomFlow3&quot;, &quot;RandomFlow2&quot;};&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(expectedArray));&#xD;
		// The actual contains a list of the names of the flows&#xD;
		List&lt;String> actual = wld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		// ensuring the lengths are the same so the loop won't crash&#xD;
		int expectedLength = expected.size();&#xD;
		int actualLength = actual.size();&#xD;
		assertSame(expectedLength, actualLength, String.format(&quot;Length of expected array is %d but we got %d&quot;, expectedLength, actualLength));&#xD;
		&#xD;
		// making sure the arrays are actually equal&#xD;
		for(int i = 0; i &lt; expectedLength; i++) {&#xD;
			String expectedString = expected.get(i);&#xD;
			String actualString = actual.get(i);&#xD;
			assertEquals(expectedString, actualString, String.format(&quot;Expected %s but got %s.&quot;, expectedString, actualString));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR8NO4Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrderSamePeriod" specification="_5MI3ZNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;SamePeriod.txt&quot;);&#xD;
		&#xD;
		// We are testing that flows are sorted in order of period then priority as the second key&#xD;
		// Since the period for this file is the same we must check the priority&#xD;
		wld.setFlowsInRMorder();&#xD;
		String[] expectedArray = {&quot;SamePeriod3&quot;, &quot;SamePeriod2&quot;, &quot;SamePeriod1&quot;};&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(expectedArray));&#xD;
		// The actual contains a list of the names of the flows&#xD;
		List&lt;String> actual = wld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		// make sure the sizes are the same so it won't crash&#xD;
		int expectedLength = expected.size();&#xD;
		int actualLength = actual.size();&#xD;
		assertSame(expectedLength, actualLength, String.format(&quot;Length of expected array is %d but we got %d&quot;, expectedLength, actualLength));&#xD;
		&#xD;
		// ensure the arrays are equal&#xD;
		for(int i = 0; i &lt; expectedLength; i++) {&#xD;
			String expectedString = expected.get(i);&#xD;
			String actualString = actual.get(i);&#xD;
			assertEquals(expectedString, actualString, String.format(&quot;Expected %s but got %s.&quot;, expectedString, actualString));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR8dO4Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrderSamePeriodSamePriority" specification="_5MJeZdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		// We are testing that flows are sorted in order of period then priority as the second key&#xD;
		// Since the period for this file is the same we must check the priority&#xD;
		// Since priority same flows come in default order&#xD;
		wld.setFlowsInRMorder();&#xD;
		String[] expectedArray = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		List&lt;String> expected = new ArrayList&lt;String>(Arrays.asList(expectedArray));&#xD;
		// The actual contains a list of the names of the flows&#xD;
		List&lt;String> actual = wld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		// test if the arrays have the same lengths&#xD;
		int expectedLength = expected.size();&#xD;
		int actualLength = actual.size();&#xD;
		assertSame(expectedLength, actualLength, String.format(&quot;Length of expected array is %d but we got %d&quot;, expectedLength, actualLength));&#xD;
		&#xD;
		// test that the arrays are equal&#xD;
		for(int i = 0; i &lt; expectedLength; i++) {&#xD;
			String expectedString = expected.get(i);&#xD;
			String actualString = actual.get(i);&#xD;
			assertEquals(expectedString, actualString, String.format(&quot;Expected %s but got %s.&quot;, expectedString, actualString));&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR8tO4Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabetically" specification="_5MJebNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		// abc is alphabetical order&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		String[] actual = wld.getNodeNamesOrderedAlphabetically();&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR89O4Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabeticallyNumberedNodes" specification="_5MJec9O4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;NumberedNodes.txt&quot;);&#xD;
		&#xD;
		// creating expected and actual values&#xD;
		String[] expected = {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;};&#xD;
		String[] actual = wld.getNodeNamesOrderedAlphabetically();&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR9NO4Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabeticallyMixedNodes" specification="_5MKFcNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;MixedNodes.txt&quot;);&#xD;
		&#xD;
		// creating expected and actual values&#xD;
		String[] expected = {&quot;1A&quot;, &quot;1B&quot;, &quot;A1&quot;, &quot;B1&quot;};&#xD;
		String[] actual = wld.getNodeNamesOrderedAlphabetically();&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR9dO4Ee2O0cjNcmYJpQ" name="testGetNodesInFlowNonExistentFlow" specification="_5MKFd9O4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		// creating flowname, expected and actual values&#xD;
		String flowName = &quot;NonExistentFlow&quot;;&#xD;
		String[] expected = new String[0];&#xD;
		String[] actual = wld.getNodesInFlow(flowName);&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR9tO4Ee2O0cjNcmYJpQ" name="testGetNodesInFlow1" specification="_5MKFftO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		// creates flowname and expected and actual values&#xD;
		String flowName = &quot;F0&quot;;&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		String[] actual = wld.getNodesInFlow(flowName);&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SyR99O4Ee2O0cjNcmYJpQ" name="testGetNodesInFlow2" specification="_5MKFhdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// creates flowname and expected and actual values&#xD;
		String flowName = &quot;RandomFlow3&quot;;&#xD;
		String[] expected = {&quot;D&quot;, &quot;C&quot;, &quot;A&quot;};&#xD;
		String[] actual = wld.getNodesInFlow(flowName);&#xD;
		&#xD;
		assertArrayEquals(expected, actual, String.format(&quot;Expected %s but got %s&quot;, printArrayHelper(expected), printArrayHelper(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy48NO4Ee2O0cjNcmYJpQ" name="testGetHyperPeriodNoFlows" specification="_5MKshtO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;EmptyWorkload.txt&quot;);&#xD;
		&#xD;
		// creating expected and actual values&#xD;
		Integer expected = 1;&#xD;
		Integer actual = wld.getHyperPeriod();&#xD;
&#xD;
		assertEquals(expected, actual, String.format(&quot;Expected %d but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy48dO4Ee2O0cjNcmYJpQ" name="testGetHyperPeriod" specification="_5MKsjdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// expected and actual values&#xD;
		Integer expected = 180;&#xD;
		Integer actual = wld.getHyperPeriod();&#xD;
&#xD;
		assertEquals(expected, actual, String.format(&quot;Expected %d but got %d.&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy48tO4Ee2O0cjNcmYJpQ" name="testGetFlowDeadlineNonExistentFlow" specification="_5MKslNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		&#xD;
		String flowName = &quot;NonExistentFlow&quot;;&#xD;
		// default flow deadline is 100&#xD;
		Integer expected = 100;&#xD;
		// if a flow doesn't exist it will create a default flow with default parameters&#xD;
		Integer actual = wld.getFlowDeadline(flowName);&#xD;
		&#xD;
		assertEquals(expected, actual, String.format(&quot;expected %d but got %d&quot;, expected, actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy489O4Ee2O0cjNcmYJpQ" name="testGetFlowDeadline" specification="_5MLTldO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// testing flow 1&#xD;
		{&#xD;
			//creating flowname and expected and actual values&#xD;
			String flowName = &quot;RandomFlow1&quot;;&#xD;
			Integer expected = 10;&#xD;
			Integer actual = wld.getFlowDeadline(flowName);&#xD;
			&#xD;
			// assertion&#xD;
			assertEquals(expected, actual, String.format(&quot;expected %d but got %d&quot;, expected, actual));			&#xD;
		}&#xD;
		&#xD;
		// testing flow 2&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow2&quot;;&#xD;
			Integer expected = 0;&#xD;
			Integer actual = wld.getFlowDeadline(flowName);&#xD;
			&#xD;
			assertEquals(expected, actual, String.format(&quot;expected %d but got %d&quot;, expected, actual));&#xD;
		}&#xD;
		&#xD;
		// testing flow 3&#xD;
		{&#xD;
			String flowName = &quot;RandomFlow3&quot;;&#xD;
			Integer expected = 16;&#xD;
			Integer actual = wld.getFlowDeadline(flowName);&#xD;
			&#xD;
			assertEquals(expected, actual, String.format(&quot;expected %d but got %d&quot;, expected, actual));&#xD;
		}&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy49NO4Ee2O0cjNcmYJpQ" name="testSetFlowDeadline" specification="_5MLTnNO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>WorkLoad wld = new WorkLoad(0.9, 0.99, &quot;CustomWorkloadByZach.txt&quot;);&#xD;
		&#xD;
		// flow name to use&#xD;
		String flowName = &quot;RandomFlow3&quot;;&#xD;
		&#xD;
		// making sure that the initial values are what we expect them to be&#xD;
		Integer initialExpectedDeadline = 16;&#xD;
		Integer initialActualDeadline = wld.getFlowDeadline(flowName);&#xD;
		&#xD;
		assertEquals(initialExpectedDeadline, initialActualDeadline, String.format(&quot;Expected %d but got %d&quot;, initialExpectedDeadline, initialActualDeadline));&#xD;
		&#xD;
		// setting the deadline to 1234&#xD;
		Integer expectedDeadline = 1234;&#xD;
		wld.setFlowDeadline(flowName, expectedDeadline);&#xD;
		&#xD;
		// getting the new deadline which should have changed&#xD;
		Integer actualDeadline = wld.getFlowDeadline(flowName);&#xD;
		&#xD;
		assertEquals(expectedDeadline, actualDeadline, String.format(&quot;Expected %d but got %d&quot;, expectedDeadline, actualDeadline));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy49dO4Ee2O0cjNcmYJpQ" name="printArrayHelper" specification="_5R4S8tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sy49tO4Ee2O0cjNcmYJpQ" name="arr" type="_5R4S8NO4Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5Sy499O4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sy4-NO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder str = new StringBuilder().append(&quot;[&quot;);&#xD;
		for(int i = 0; i &lt; arr.length; i++) {&#xD;
			str.append((arr[i].toString() + &quot;, &quot;));&#xD;
		}&#xD;
		str.append(&quot;]&quot;);&#xD;
		return str.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5MD-0dO4Ee2O0cjNcmYJpQ" name="testAddFlow" visibility="package" method="_5Sxq3tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MEl5tO4Ee2O0cjNcmYJpQ" name="testAddFlowOverwritten" visibility="package" method="_5Sxq39O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MEl7dO4Ee2O0cjNcmYJpQ" name="testAddNodeToFlow" visibility="package" method="_5Sxq4NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MEl9NO4Ee2O0cjNcmYJpQ" name="testAddNodeToFlowEmpty" visibility="package" method="_5Sxq4dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MFM9tO4Ee2O0cjNcmYJpQ" name="testSetFlowPriority" visibility="package" method="_5Sxq4tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MFM_dO4Ee2O0cjNcmYJpQ" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_5Sxq49O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MFNBNO4Ee2O0cjNcmYJpQ" name="testGetFlowNames" visibility="package" method="_5Sxq5NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MF0BtO4Ee2O0cjNcmYJpQ" name="testGetFlowNamesEmpty" visibility="package" method="_5Sxq5dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MF0DdO4Ee2O0cjNcmYJpQ" name="testGetNodeIndexExisting" visibility="package" method="_5Sxq5tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MF0FNO4Ee2O0cjNcmYJpQ" name="testGetNodeIndexNonExisting" visibility="package" method="_5SyR4NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MGbFdO4Ee2O0cjNcmYJpQ" name="testGetNumTxAttemptsPerLink" visibility="package" method="_5SyR4dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MGbHNO4Ee2O0cjNcmYJpQ" name="testMaxFlowLength" visibility="package" method="_5SyR4tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MGbI9O4Ee2O0cjNcmYJpQ" name="testMaxFlowLengthEmpty" visibility="package" method="_5SyR49O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MHCItO4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowNonExistentFlow" visibility="package" method="_5SyR5NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MHCKdO4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlow1" visibility="package" method="_5SyR5dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MHCMNO4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlow2" visibility="package" method="_5SyR5tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MHCN9O4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlowNumFaults1" visibility="package" method="_5SyR59O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MHpNtO4Ee2O0cjNcmYJpQ" name="testGetTotalTxAttemptsInFlowExistentFlowNumFaults2" visibility="package" method="_5SyR6NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MHpPdO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityNonExistentFlow" visibility="package" method="_5SyR6dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MHpRNO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityDefaultPriority" visibility="package" method="_5SyR6tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MIQRtO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityCustomPriority1" visibility="package" method="_5SyR69O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MIQTdO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityCustomPriority2" visibility="package" method="_5SyR7NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MIQVNO4Ee2O0cjNcmYJpQ" name="testGetFlowPriorityWithNodes" visibility="package" method="_5SyR7dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MI3VtO4Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrder1" visibility="package" method="_5SyR7tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MI3XdO4Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrder2" visibility="package" method="_5SyR79O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MI3ZNO4Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrderSamePeriod" visibility="package" method="_5SyR8NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MJeZdO4Ee2O0cjNcmYJpQ" name="testSetFlowsInRMOrderSamePeriodSamePriority" visibility="package" method="_5SyR8dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MJebNO4Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabetically" visibility="package" method="_5SyR8tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MJec9O4Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabeticallyNumberedNodes" visibility="package" method="_5SyR89O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MKFcNO4Ee2O0cjNcmYJpQ" name="testGetNodeNamesOrderedAlphabeticallyMixedNodes" visibility="package" method="_5SyR9NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MKFd9O4Ee2O0cjNcmYJpQ" name="testGetNodesInFlowNonExistentFlow" visibility="package" method="_5SyR9dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MKFftO4Ee2O0cjNcmYJpQ" name="testGetNodesInFlow1" visibility="package" method="_5SyR9tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MKFhdO4Ee2O0cjNcmYJpQ" name="testGetNodesInFlow2" visibility="package" method="_5SyR99O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MKshtO4Ee2O0cjNcmYJpQ" name="testGetHyperPeriodNoFlows" visibility="package" method="_5Sy48NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MKsjdO4Ee2O0cjNcmYJpQ" name="testGetHyperPeriod" visibility="package" method="_5Sy48dO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MKslNO4Ee2O0cjNcmYJpQ" name="testGetFlowDeadlineNonExistentFlow" visibility="package" method="_5Sy48tO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MLTldO4Ee2O0cjNcmYJpQ" name="testGetFlowDeadline" visibility="package" method="_5Sy489O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MLTnNO4Ee2O0cjNcmYJpQ" name="testSetFlowDeadline" visibility="package" method="_5Sy49NO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5R4S8tO4Ee2O0cjNcmYJpQ" name="printArrayHelper" visibility="package" method="_5Sy49dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5R4S89O4Ee2O0cjNcmYJpQ" name="arr" type="_5R4S8NO4Ee2O0cjNcmYJpQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5R4S9dO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R4S9NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5MMhsNO4Ee2O0cjNcmYJpQ" name="Program">
              <ownedComment xmi:id="_C41j3dejEe2IjMkQsyA0cQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5SbFg9O4Ee2O0cjNcmYJpQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SbFhNO4Ee2O0cjNcmYJpQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SbskNO4Ee2O0cjNcmYJpQ" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SbskdO4Ee2O0cjNcmYJpQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SbsktO4Ee2O0cjNcmYJpQ" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5Sbsk9O4Ee2O0cjNcmYJpQ" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SbslNO4Ee2O0cjNcmYJpQ" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5SbsldO4Ee2O0cjNcmYJpQ" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SbsltO4Ee2O0cjNcmYJpQ" name="workLoad" visibility="package" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5TQzBNO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SbsmNO4Ee2O0cjNcmYJpQ" name="scheduleBuilt" visibility="package" type="_5LNqQNO4Ee2O0cjNcmYJpQ" association="_5TQzB9O4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SbsmtO4Ee2O0cjNcmYJpQ" name="SchedulerSelected" visibility="package" type="_5R0BgtO4Ee2O0cjNcmYJpQ" association="_5TQzCtO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5SbsnNO4Ee2O0cjNcmYJpQ" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5SbsntO4Ee2O0cjNcmYJpQ" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5ScTodO4Ee2O0cjNcmYJpQ" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5ScTo9O4Ee2O0cjNcmYJpQ" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5ScTpdO4Ee2O0cjNcmYJpQ" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5ScTp9O4Ee2O0cjNcmYJpQ" name="channelsAvailable" visibility="package" type="_5KsF0NO4Ee2O0cjNcmYJpQ" association="_5TRaEdO4Ee2O0cjNcmYJpQ"/>
              <ownedAttribute xmi:id="_5ScTqdO4Ee2O0cjNcmYJpQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5ScTq9O4Ee2O0cjNcmYJpQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5Sc6sNO4Ee2O0cjNcmYJpQ" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5Sc6stO4Ee2O0cjNcmYJpQ" name="deadlineMisses" visibility="private" type="_5K0BoNO4Ee2O0cjNcmYJpQ" association="_5TRaFNO4Ee2O0cjNcmYJpQ"/>
              <interfaceRealization xmi:id="_5RPZwNO4Ee2O0cjNcmYJpQ" client="_5MMhsNO4Ee2O0cjNcmYJpQ" supplier="_5Lf-JdO4Ee2O0cjNcmYJpQ" contract="_5Lf-JdO4Ee2O0cjNcmYJpQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy4-dO4Ee2O0cjNcmYJpQ" name="Program" specification="_5R5hENO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sy4-tO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sy4-9O4Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sy4_NO4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sy4_dO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sy4_tO4Ee2O0cjNcmYJpQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sy4_9O4Ee2O0cjNcmYJpQ" type="_5MMhsNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
		buildProgram(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy5ANO4Ee2O0cjNcmYJpQ" name="Program" specification="_5R5hGdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sy5AdO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sy5AtO4Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sy5A9O4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sy5BNO4Ee2O0cjNcmYJpQ" type="_5MMhsNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
		buildProgram(choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy5BdO4Ee2O0cjNcmYJpQ" name="setDefaultParameters" specification="_5RQA0NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sy5BtO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5Sy5B9O4Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sy5CNO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Sy5CdO4Ee2O0cjNcmYJpQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
		this.scheduleBuilt = new ProgramSchedule();&#xD;
		this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
		workLoad.setFlowsInPriorityOrder();&#xD;
		this.schedulerName = &quot;Priority&quot;;&#xD;
		this.schChoice = &quot;Priority&quot;;&#xD;
		this.nTransmissions = 0;&#xD;
		this.realTimeHARTflag = false;&#xD;
		this.optimizationRequested = true;&#xD;
		this.nChannels = nChannels;&#xD;
		this.verbose = verbose;&#xD;
		this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
		this.reportLatency = reportLatency;&#xD;
		this.deadlineMisses = new Description();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Sy5CtO4Ee2O0cjNcmYJpQ" name="toWorkLoad" specification="_5MNIwNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5Sy5C9O4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgANO4Ee2O0cjNcmYJpQ" name="buildProgram" specification="_5R5hINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgAdO4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>/*&#xD;
		 * Switch on the scheduler choice. If it is POSET-based scheduler, create the&#xD;
		 * POSET that matches the name and then use the newer schedule object to convert&#xD;
		 * the POSET to a program. If it is an original scheduler choice, build set the&#xD;
		 * scheduler type and build the schedule and WARP program by calling&#xD;
		 * buildOriginalProgram();&#xD;
		 */&#xD;
		switch (choice) { // select the requested scheduler&#xD;
		case WARP_POSET_PRIORITY: // fall through&#xD;
		case WARP_POSET_RM: // fall through&#xD;
		case WARP_POSET_DM: // fall through&#xD;
			setScheduleSelected(choice);&#xD;
			var poset1 = new WarpPoset(workLoad);&#xD;
			var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
			var newProgram = schedule1.toProgram();&#xD;
			setSchedule(newProgram); // store the schedule built&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
		case CONNECTIVITY_POSET_RM: // fall through&#xD;
		case CONNECTIVITY_POSET_DM: // fall through&#xD;
		case POSET_PRIORITY: // fall through&#xD;
		case POSET_RM: // fall through&#xD;
		case POSET_DM:&#xD;
			setScheduleSelected(choice);&#xD;
			// var poset = new BasicPoset(workLoad);&#xD;
			var poset2 = new ConnectivityPoset(workLoad);&#xD;
			var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
			newProgram = schedule2.toProgram();&#xD;
			setSchedule(newProgram); // store the schedule built&#xD;
			break;&#xD;
		//// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
		//// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
		//// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
		// var poset3 = new ConnectivityPoset(workLoad);&#xD;
		// var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
		// newProgram = schedule3.toProgram();&#xD;
		// setSchedule(newProgram); // store the schedule built&#xD;
		// break;&#xD;
		case PRIORITY:&#xD;
			selectPriority();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break;&#xD;
		case RM:&#xD;
			selectRM();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break;&#xD;
		case DM:&#xD;
			selectDM();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break;&#xD;
		case RTHART:&#xD;
			selectRtHART();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break;&#xD;
		default:&#xD;
			selectPriority();&#xD;
			buildOriginalProgram(); // build the requested schedule&#xD;
			break; // break from switch&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgAtO4Ee2O0cjNcmYJpQ" name="buildOriginalProgram" specification="_5MNIwdO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
		if (verbose) {&#xD;
			var scheduleDetails = String.format(&#xD;
					&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;, workLoad.getName());&#xD;
			scheduleDetails = String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
			scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
					String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
			scheduleDetails = String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
			scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
			// The following parameters are only output when special schedules are requested&#xD;
			if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
				scheduleDetails = String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
			}&#xD;
			if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
				scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
			}&#xD;
			System.out.println(scheduleDetails);&#xD;
		}&#xD;
		var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
					// nTransmissions == n 0 else flow.nTXperLink&#xD;
		var nTransmissions = getNumTransmissions();&#xD;
		Boolean realtimeHART = getRealTimeHartFlag();&#xD;
		var optimizationRequested = getOptimizationFlag();&#xD;
		var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
		var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
		var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
		// var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an&#xD;
		// array of node&#xD;
		// names&#xD;
		// sorted alphabetically&#xD;
		var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
		var nNodes = nodeIndex.size();&#xD;
		/*&#xD;
		 * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index&#xD;
		 * mapping var name = orderedNodes[index]; nodeIndex.put(name, index); // add&#xD;
		 * name, index mapping to NodeIndex map }&#xD;
		 */&#xD;
		var hyperPeriod = workLoad.getHyperPeriod();&#xD;
		for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
												// period and the channels entries are all initialized&#xD;
			var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
																								// time slot&#xD;
																								// for&#xD;
																								// nNodes,&#xD;
																								// each&#xD;
																								// initialized&#xD;
																								// with a&#xD;
																								// SLEEP_INSTRUCTION&#xD;
			schedule.add(newInstructionTimeSlot);&#xD;
			channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
													// slot&#xD;
		}&#xD;
		// create an instance of the Warp DSL class for parsing instructions&#xD;
		var dsl = new WarpDSL();&#xD;
&#xD;
		for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
			var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
			var nNodesInFlow = nodesInFlow.length;&#xD;
			var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
			if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
										// array otherwise&#xD;
				e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
				if (realtimeHART) {&#xD;
					nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
				} // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
			} else {&#xD;
				nTx = nTransmissions;&#xD;
			}&#xD;
			var snk = &quot;&quot;;&#xD;
			var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
			if (verbose) {&#xD;
				var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
				var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
												// i.e., min nTx to go E2E with no errors&#xD;
				System.out.printf(&#xD;
						&quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
						flowName, minCost, totalCost);&#xD;
			}&#xD;
			if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
							// is dependent on reliability target&#xD;
				nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
			}&#xD;
			var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
															// previous slots to 0&#xD;
			Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
			var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
																// scheduling this flow&#xD;
			var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
													// flow&#xD;
			var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
																	// this flow&#xD;
			var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
			var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
														// node can first transmit&#xD;
			for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
				for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
																									// push for&#xD;
																									// last&#xD;
																									// node, so&#xD;
																									// stop at&#xD;
																									// node&#xD;
																									// n-1,&#xD;
																									// which is&#xD;
																									// 2 less&#xD;
																									// than&#xD;
																									// count&#xD;
					var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
																		// (aka source of data)&#xD;
					if (e2eFlag) {&#xD;
						nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
					}&#xD;
					var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
																	// for previous node&#xD;
					Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
					for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
																// flow meets desired reliability&#xD;
						var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
																	// instruction in its program&#xD;
						var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
															// priorSrcInstruction during optimization&#xD;
						var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
														// not&#xD;
						snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
																// UNKNOWN if we don't&#xD;
						// when not optimizing instructionNodeName is current node, but we might update&#xD;
						// a&#xD;
						// different node's instruction to optimize&#xD;
						var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
																		// flow release, which happens once every&#xD;
																		// period in the hyperPeriod&#xD;
						var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
																								// precedence&#xD;
																								// constraints on&#xD;
																								// flow are&#xD;
																								// preserved&#xD;
						Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule, firstPossibleSlot,&#xD;
								flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
								SLEEP_INSTRUCTION, realtimeHART, optimizationRequested, nodeIndex.get(currentNodeName),&#xD;
								nodeIndex.get(snk));&#xD;
						if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
																	// schedule length. Increase schedule and&#xD;
																	// channelsAvailable tables&#xD;
							for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
								var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
																													// a&#xD;
																													// time&#xD;
																													// slot&#xD;
																													// for&#xD;
																													// nNodes,&#xD;
																													// each&#xD;
																													// initialized&#xD;
																													// with&#xD;
																													// a&#xD;
																													// SLEEP_INSTRUCTION&#xD;
								schedule.add(newInstructionTimeSlot);&#xD;
								channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
																		// for all slots. instructionIndex may be >&#xD;
																		// initialized size of array because of&#xD;
																		// phases...&#xD;
							}&#xD;
						}&#xD;
						String channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
								nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
						// Now check if we have a valid channel. If not we need to find a new time slot&#xD;
						// further&#xD;
						// down the schedule.&#xD;
						// So, initialize the search to start at the current slot and then increase by&#xD;
						// one each&#xD;
						// time we loop if the current slot&#xD;
						// Now check if we have a valid channel. If not we need to find a new time slot&#xD;
						// further&#xD;
						// down the schedule.&#xD;
						// So, initialize the search to start at the current slot and then increase by&#xD;
						// one each&#xD;
						// time we loop if the current slot&#xD;
						while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
															// channel was available. In that case, we need to&#xD;
															// find a new slot for this instruction after the last&#xD;
															// index found&#xD;
							var startSearchIndex = instructionIndex + 1;&#xD;
							instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
									flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
									SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
									nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
							if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
																		// schedule lenght. Increase schedule and&#xD;
																		// channelsAvailable tables&#xD;
								for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
									var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
																														// a&#xD;
																														// time&#xD;
																														// slot&#xD;
																														// for&#xD;
																														// nNodes,&#xD;
																														// each&#xD;
																														// initialized&#xD;
																														// with&#xD;
																														// a&#xD;
																														// SLEEP_INSTRUCTION&#xD;
									schedule.add(newInstructionTimeSlot);&#xD;
									channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
																			// for all slots. instructionIndex may be >&#xD;
																			// initialized size of array because of&#xD;
																			// phases...&#xD;
								}&#xD;
							}&#xD;
							channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
									nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
						}&#xD;
						workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
						if (realtimeHART) {&#xD;
							newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
						} else {&#xD;
							newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
						}&#xD;
&#xD;
						// if optimization flag is set, look to see if any optimizations are possible&#xD;
						if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
							var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
							var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
									.toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
							var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
																									// instruction&#xD;
																									// scheduled for&#xD;
																									// snk to execute&#xD;
																									// in the prior&#xD;
																									// time slot&#xD;
							if (index == (nTx - 1)) {&#xD;
								String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
								String elseSubString = &quot;else pull(&quot;;&#xD;
								if (priorInstruction.contains(hasSubstring) &amp;&amp; !priorInstruction.contains(elseSubString)&#xD;
										&amp;&amp; !realtimeHART) {&#xD;
									// The sink node is not waiting, so add this instruction as an else to it&#xD;
									// Also need to make sure we haven't already combined a prior instruction by&#xD;
									// moving it to the else clause. May need a smater way to do this later...&#xD;
									// The combined instructions both use channels for their respective time slots!&#xD;
									// The else is being added to the prior time slot, so we need to&#xD;
									// get a new channel for that time slot and put back the channel we extraced&#xD;
									// from&#xD;
									// this time slot. And of course, clean up if any errors occur&#xD;
									// in the process&#xD;
									var instructionParametersArrayList = dsl.getInstructionParameters(priorInstruction);&#xD;
									var priorInstructionChannel = UNKNOWN;&#xD;
									if (instructionParametersArrayList.size() == 1) {&#xD;
										var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
																											// of the&#xD;
																											// parameters&#xD;
										priorInstructionChannel = instructionParameters.getChannel();&#xD;
									} else { // we just checked above that the prior instruction did not have an else&#xD;
												// pull, wait, or sleep. So, there should be only one instruction here&#xD;
										String msg = String.format(&#xD;
												&quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
												priorInstruction);&#xD;
										System.err.println(msg);&#xD;
									}&#xD;
									workLoad.setNodeChannel(instructionNodeName,&#xD;
											Integer.valueOf(priorInstructionChannel));&#xD;
									channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
																								// this slot&#xD;
									channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
																		// uses this channel&#xD;
									newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
											flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
									instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
															// replace that slot with the new, optimized instruction&#xD;
									instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
																// node name of the prior instruction&#xD;
								}&#xD;
							} else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
									&amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
											|| priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
								// We hit this case when combining the last push of one flow with the first push&#xD;
								// of&#xD;
								// a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
								// print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
								// \(newInstruction)\n&quot;)&#xD;
								// May want to add code here to combine when e2eFlag is true but need to compute&#xD;
								// new&#xD;
								// reliability values given less than 1 probablity that&#xD;
								// this first push/now pull will happen&#xD;
								// System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
								// newInstruction, priorInstruction);&#xD;
							} else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
										// with a new instruction&#xD;
								// Anywhere else? :-) Probably better figure it out!!&#xD;
								if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
										&amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
										&amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
																												// node&#xD;
																												// is&#xD;
																												// not&#xD;
																												// waiting,&#xD;
																												// so&#xD;
																												// add&#xD;
																												// this&#xD;
																												// instruction&#xD;
																												// as an&#xD;
																												// else&#xD;
																												// to&#xD;
																												// it&#xD;
									// Also need to make sure we haven't already combined a prior instruction by&#xD;
									// moving it to the else clause. May need a smarter way to do this later...&#xD;
									var instructionParametersArrayList = dsl.getInstructionParameters(priorInstruction);&#xD;
									var priorInstructionChannel = UNKNOWN;&#xD;
									var priorInstructionSnk = UNKNOWN;&#xD;
									if (instructionParametersArrayList.size() == 1) {&#xD;
										var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
																											// of the&#xD;
																											// parameters&#xD;
										priorInstructionSnk = instructionParameters.getSnk();&#xD;
										priorInstructionChannel = instructionParameters.getChannel();&#xD;
									} else { // we just checked above that the prior instruction did not have an else&#xD;
												// pull, wait, or sleep. So, there should be only one instruction here&#xD;
										String msg = String.format(&#xD;
												&quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
												priorInstruction);&#xD;
										System.err.println(msg);&#xD;
									}&#xD;
									priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
																													// instruction&#xD;
																													// scheduled&#xD;
																													// for&#xD;
																													// snk/curentNodeName)&#xD;
																													// to&#xD;
																													// execute&#xD;
																													// in&#xD;
																													// the&#xD;
																													// prior&#xD;
																													// time&#xD;
									if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
																						// to/from the same node, so&#xD;
																						// use the prior instruction&#xD;
																						// channel&#xD;
										newInstruction = priorInstruction + elsePullClause(flowName, currentNodeName,&#xD;
												snk, priorInstructionChannel);&#xD;
										instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
																// we replace that slot with the new, optimized&#xD;
																// instruction&#xD;
										instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
																	// the node name of the prior instruction&#xD;
									} else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
																									// !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
																									// I think it needs&#xD;
																									// to be a sleep and&#xD;
																									// then we can add a&#xD;
																									// wait there&#xD;
										// Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
										// then we combine instructions with new as an else push and add wait at&#xD;
										// currentNodeName&#xD;
										workLoad.setNodeChannel(instructionNodeName,&#xD;
												Integer.valueOf(priorInstructionChannel));&#xD;
										newInstruction = priorInstruction + elsePullClause(flowName, currentNodeName,&#xD;
												snk, priorInstructionChannel); // was&#xD;
																				// channel&#xD;
										// need to change priorSrcInstruction from sleep to wait on channel&#xD;
										priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
										priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
																// insert currenInstruction into the&#xD;
																// currentInstructionTimeSlot&#xD;
										instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
																// we replace that slot with the new, optimized&#xD;
																// instruction&#xD;
										instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
																	// the node name of the prior instruction&#xD;
									}&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
						ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
																				// schedule.get(instructionIndex);&#xD;
						String[] currentInstructionTimeSlot; // =&#xD;
																// currentInstructionTimeSlotArrayList.toArray(new&#xD;
																// String[currentInstructionTimeSlotArrayList.size()]);&#xD;
						currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
																			// instruction&#xD;
						if (instructionIndex &lt; schedule.size()) {&#xD;
							currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
																									// instruction,&#xD;
																									// in case&#xD;
																									// another&#xD;
																									// instruction&#xD;
																									// is in this&#xD;
																									// time slot for&#xD;
																									// another node&#xD;
																									// that doesn't&#xD;
																									// conflict&#xD;
																									// channels&#xD;
							currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
									.toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
						} else {&#xD;
							currentInstructionTimeSlotArrayList = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
							currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
									.toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
						}&#xD;
						currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
																											// error&#xD;
																											// finding&#xD;
																											// the&#xD;
																											// right&#xD;
																											// location&#xD;
																											// will&#xD;
																											// result&#xD;
																											// in&#xD;
																											// location&#xD;
																											// of&#xD;
																											// snk&#xD;
																											// or 0&#xD;
						if (priorSrcUpdated) {&#xD;
							currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
																												// error&#xD;
																												// finding&#xD;
																												// the&#xD;
																												// right&#xD;
																												// location&#xD;
																												// will&#xD;
																												// result&#xD;
																												// in&#xD;
																												// location&#xD;
																												// of&#xD;
																												// snk&#xD;
																												// or&#xD;
																												// 0&#xD;
						}&#xD;
						// If this is a basic push() then the snk node will have the initial wait&#xD;
						// instruction in&#xD;
						// its time slot. Thus, need to add the channel # to that wait&#xD;
						var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
																								// scheduled for&#xD;
																								// snk to execute&#xD;
																								// in the current&#xD;
																								// time slot&#xD;
						if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
							currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
						}&#xD;
						if (flowNodeIndex > 0) {&#xD;
							var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
																				// flow (aka predecessor)&#xD;
							var possibleCombineInstruction = String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;,&#xD;
									flowName, priorNodeName, currentNodeName);&#xD;
							if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
																						// possible: combine two&#xD;
																						// conditional pushes at the&#xD;
																						// same slot involving a&#xD;
																						// common node&#xD;
								var upstreamNodeInstruction = currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
								var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
								if (newInstruction.equals(instr)&#xD;
										&amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
										&amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
									var instructionParametersArrayList = dsl&#xD;
											.getInstructionParameters(upstreamNodeInstruction);&#xD;
									var upstreamNodeChannel = UNKNOWN;&#xD;
									if (instructionParametersArrayList.size() == 1) {&#xD;
										var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
																											// of the&#xD;
																											// paramaters&#xD;
										upstreamNodeChannel = instructionParameters.getChannel();&#xD;
										// return upstreamNodeChannel to the available channels for this time slot&#xD;
										channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
									} else { // we just checked above that the prior instruction did not have an else&#xD;
												// pull, wait, or sleep. So, there should be only one instruction here&#xD;
										String msg = String.format(&#xD;
												&quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
												upstreamNodeInstruction);&#xD;
										System.err.println(msg);&#xD;
									}&#xD;
									// use the newInstruction channel in upstream instruction that is being combined&#xD;
									// and return the upstream channel to the available channel set&#xD;
									newInstruction = newInstruction&#xD;
											+ elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
																													// upstreamNodeChannel&#xD;
									currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
																														// error&#xD;
																														// finding&#xD;
																														// the&#xD;
																														// right&#xD;
																														// location&#xD;
																														// will&#xD;
																														// result&#xD;
																														// in&#xD;
																														// location&#xD;
																														// of&#xD;
																														// snk&#xD;
																														// or&#xD;
																														// 0&#xD;
									currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] = waitInstruction(channel);&#xD;
									; // an error finding the right location will result&#xD;
										// in location of snk or 0 // was&#xD;
										// upstreamNodeChannel&#xD;
								} else if (newInstruction&#xD;
										.contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
										&amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
												.contains(possibleCombineInstruction)) {&#xD;
									currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] = waitInstruction(channel); // Replace&#xD;
																															// combined&#xD;
																															// instruction&#xD;
																															// in&#xD;
																															// prior&#xD;
																															// node&#xD;
																															// program&#xD;
																															// with&#xD;
																															// wait()&#xD;
								}&#xD;
							}&#xD;
							if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
															// so add 'else wait()' for down upstream node when&#xD;
															// needed&#xD;
								var upstreamNodeInstruction = currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
								if (newInstruction.equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
										&amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
									String upstreamNodeChannel = getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
									newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
																												// node&#xD;
																												// needs&#xD;
																												// to&#xD;
																												// wait&#xD;
																												// for&#xD;
																												// upstream&#xD;
																												// node&#xD;
																												// if&#xD;
																												// message&#xD;
																												// hasn't&#xD;
																												// arrived&#xD;
									currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
																														// error&#xD;
																														// finding&#xD;
																														// the&#xD;
																														// right&#xD;
																														// location&#xD;
																														// will&#xD;
																														// result&#xD;
																														// in&#xD;
																														// location&#xD;
																														// of&#xD;
																														// snk&#xD;
																														// or&#xD;
																														// 0&#xD;
									// Don't replace the push instruction in the upstream node in this case, because&#xD;
									// we added the else in this nodes time slot instead&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
						var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
						if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
																	// anyway&#xD;
							schedule.set(instructionIndex, timeSlot);&#xD;
						} else {&#xD;
							schedule.add(timeSlot);&#xD;
							String msg = String.format(&#xD;
									&quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
									instructionIndex, schedule.size());&#xD;
							System.err.println(msg);&#xD;
							System.err.println(&#xD;
									&quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
						}&#xD;
						flowLastInstruction = instructionIndex;&#xD;
						if (index == 0) {&#xD;
							FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
																			// flow's src node first transmits&#xD;
						}&#xD;
					}&#xD;
					previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
																		// worry about clearing&#xD;
																		// currentNodeInstrucitons; will be set&#xD;
																		// in loop&#xD;
				}&#xD;
				Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
				String latencyMsg = String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
				if (verbose) {&#xD;
					System.out.printf(latencyMsg);&#xD;
				}&#xD;
				if (latency > flowDeadline) {&#xD;
					String deadlineMsg = String.format(&#xD;
							&quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
							flowName, instance, latency, flowDeadline);&#xD;
					deadlineMisses.add(deadlineMsg);&#xD;
					// System.out.printf(deadlineMsg);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		setSchedule(schedule); // store the schedule built&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgA9O4Ee2O0cjNcmYJpQ" name="waitInstruction" specification="_5MNv0NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgBNO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgBdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
		if (!Utilities.isInteger(channel)) {&#xD;
			System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
			System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
		}&#xD;
		return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgBtO4Ee2O0cjNcmYJpQ" name="elseWaitInstruction" specification="_5MNv09O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgB9O4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgCNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
		if (!Utilities.isInteger(channel)) {&#xD;
			System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
			System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
		}&#xD;
		return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgCdO4Ee2O0cjNcmYJpQ" name="elsePullClause" specification="_5MNv1tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgCtO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgC9O4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgDNO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgDdO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgDtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgD9O4Ee2O0cjNcmYJpQ" name="hasPushInstruction" specification="_5MNv3NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgENO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgEdO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgEtO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgE9O4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgFNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgFdO4Ee2O0cjNcmYJpQ" name="pushInstruction" specification="_5MOW4NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgFtO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgF9O4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgGNO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgGdO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgGtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgG9O4Ee2O0cjNcmYJpQ" name="getFirstChannelInInstruction" specification="_5MOW5tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgHNO4Ee2O0cjNcmYJpQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgHdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
		var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
																// channel #&#xD;
		var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgHtO4Ee2O0cjNcmYJpQ" name="findNextAvailableInstructionTimeSlot" specification="_5RQA1tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgH9O4Ee2O0cjNcmYJpQ" name="schedule" type="_5LNqQNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SzgINO4Ee2O0cjNcmYJpQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgIdO4Ee2O0cjNcmYJpQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgItO4Ee2O0cjNcmYJpQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgI9O4Ee2O0cjNcmYJpQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgJNO4Ee2O0cjNcmYJpQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SzgJdO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgJtO4Ee2O0cjNcmYJpQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5SzgJ9O4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgKNO4Ee2O0cjNcmYJpQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgKdO4Ee2O0cjNcmYJpQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgKtO4Ee2O0cjNcmYJpQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgK9O4Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgLNO4Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgLdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
											// location&#xD;
		if (transIndex > 0) {&#xD;
			currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
																							// don't start&#xD;
																							// looking&#xD;
																							// before the&#xD;
																							// startLocation&#xD;
																							// AND the&#xD;
																							// previous&#xD;
																							// instruction&#xD;
																							// we inserted&#xD;
		}&#xD;
		var done = false; // Flag indicating time slot search is done&#xD;
		if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
			// do the same thing for all nodes when nTx == 1 as for first node of flow when&#xD;
			// nTx == 1 and&#xD;
			// for kth retry&#xD;
			while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
				var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
				if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
					done = true;&#xD;
				} else {&#xD;
					currentTime += 1;&#xD;
				}&#xD;
			}&#xD;
		} else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
			Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
			if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
				slotOffsetFromLastPreviousInstructionEntry = transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
				var possibleInstructionTimeSlotIndex = previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
						+ slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
																		// entry&#xD;
				// or continuous past it if more attempts for this instruction&#xD;
				if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
																		// than the starting location&#xD;
					// (which can also mean the start time for searching available slots due to&#xD;
					// channel&#xD;
					// unavailability)&#xD;
					currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
				}&#xD;
				done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
								// searching until we find one. This happens with preemptions&#xD;
				if (!optimizationRequested) {&#xD;
					while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
						var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
						if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
																										// the&#xD;
																										// proposed&#xD;
																										// currentInstructionTimeSlot.&#xD;
																										// If&#xD;
																										// available,&#xD;
																										// done&#xD;
																										// is&#xD;
																										// true,&#xD;
																										// else&#xD;
																										// keep&#xD;
																										// checking&#xD;
																										// for a&#xD;
																										// time&#xD;
							done = true;&#xD;
						} else {&#xD;
							currentTime += 1;&#xD;
						}&#xD;
					}&#xD;
				} else {&#xD;
					// do something to support the optimization&#xD;
					while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
						var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
						if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
																										// the&#xD;
																										// proposed&#xD;
																										// currentInstructionTimeSlot.&#xD;
																										// If&#xD;
																										// available,&#xD;
																										// done&#xD;
																										// is&#xD;
																										// true,&#xD;
																										// else&#xD;
																										// keep&#xD;
																										// checking&#xD;
																										// for a&#xD;
																										// time&#xD;
							done = true;&#xD;
						} else {&#xD;
							currentTime += 1;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			} else {&#xD;
				var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
																								// previous&#xD;
																								// node's&#xD;
																								// next&#xD;
																								// retry&#xD;
																								// entry&#xD;
				if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
																			// earlier than the starting&#xD;
																			// location&#xD;
					// (which can also mean the start time for searching available slots due to&#xD;
					// channel&#xD;
					// unavailability)&#xD;
					currentTime = possibleInstructionTimeSlotIndex; //&#xD;
				}&#xD;
				done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
								// searching until we find one. This happens with preemptions&#xD;
				if (!optimizationRequested) {&#xD;
					while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
						var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
						if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
																										// the&#xD;
																										// proposed&#xD;
																										// currentInstructionTimeSlot.&#xD;
																										// If&#xD;
																										// available,&#xD;
																										// done&#xD;
																										// is&#xD;
																										// true,&#xD;
																										// else&#xD;
																										// keep&#xD;
																										// checking&#xD;
																										// for a&#xD;
																										// time&#xD;
							done = true;&#xD;
						} else {&#xD;
							currentTime += 1;&#xD;
						}&#xD;
					}&#xD;
				} else {&#xD;
					// do something to support the optimization&#xD;
					if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
															// schedule table. If so, no need to optimize.&#xD;
						// Just return current time and let caller figure out what to do.&#xD;
						var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
						var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
						var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
						if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
																										// should&#xD;
																										// contain&#xD;
																										// a wait,&#xD;
																										// so we&#xD;
																										// can use&#xD;
																										// it&#xD;
																										// during&#xD;
																										// optimization.&#xD;
																										// Only a&#xD;
																										// wait&#xD;
																										// for&#xD;
																										// this&#xD;
																										// time&#xD;
																										// slot is&#xD;
																										// expected&#xD;
																										// at this&#xD;
																										// point&#xD;
							// we also need to be sure the snk is sleeping&#xD;
							// If either condition is not true, then we need to find another time slot&#xD;
							while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
								var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
								if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
																												// the&#xD;
																												// proposed&#xD;
																												// currentInstructionTimeSlot.&#xD;
																												// If&#xD;
																												// available,&#xD;
																												// done&#xD;
																												// is&#xD;
																												// true,&#xD;
																												// else&#xD;
																												// keep&#xD;
																												// checking&#xD;
																												// for&#xD;
																												// a&#xD;
																												// time&#xD;
									done = true;&#xD;
								} else {&#xD;
									currentTime += 1;&#xD;
								}&#xD;
							}&#xD;
						} else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
																		// sure if it is bad...print an error&#xD;
																		// indicating the issue&#xD;
							var errorString = String.format(&#xD;
									&quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;, currentTime);&#xD;
							errorString += &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
							errorString += srcInstruction;&#xD;
							System.err.println(errorString);&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return currentTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgLtO4Ee2O0cjNcmYJpQ" name="slotIsAvailable" specification="_5RQn4tO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgL9O4Ee2O0cjNcmYJpQ" name="currentInstructionTimeSlot" type="_5LBdANO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SzgMNO4Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgMdO4Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgMtO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
								// done&#xD;
		if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
				&amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
																								// are both&#xD;
																								// sleeping, so&#xD;
																								// slot is&#xD;
																								// available&#xD;
			vacantSlot = true;&#xD;
		}&#xD;
		return vacantSlot;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgM9O4Ee2O0cjNcmYJpQ" name="findNextAvailableChannel" specification="_5RQn59O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgNNO4Ee2O0cjNcmYJpQ" name="schedule" type="_5LNqQNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5SzgNdO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgNtO4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgN9O4Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgONO4Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5SzgOdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
									// this result&#xD;
&#xD;
		// create an instance of the Warp DSL class for parsing instructions&#xD;
		var dsl = new WarpDSL();&#xD;
		InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
		var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
		if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
								// that slot, which have to be avoided here&#xD;
			Integer priorTime = currentTime - 1;&#xD;
			priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
			var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
			var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
			// extract the channels used by the src and snk nodes in the prior time slot and&#xD;
			// store them in&#xD;
			// an array&#xD;
			var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
																									// the&#xD;
																									// parameters&#xD;
																									// from&#xD;
																									// the&#xD;
																									// instruction&#xD;
																									// in&#xD;
																									// the&#xD;
																									// src&#xD;
																									// node's&#xD;
																									// prior&#xD;
																									// time&#xD;
																									// slot&#xD;
			for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
				var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
																					// paramaters&#xD;
				channels.remove(instructionParameters.getChannel());&#xD;
			}&#xD;
			instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
																								// parameters&#xD;
																								// from&#xD;
																								// the&#xD;
																								// instruction&#xD;
																								// in the&#xD;
																								// snk&#xD;
																								// node's&#xD;
																								// prior&#xD;
																								// time&#xD;
																								// slot&#xD;
			for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
				var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
																					// paramaters&#xD;
				channels.remove(instructionParameters.getChannel());&#xD;
			}&#xD;
		}&#xD;
		Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
		channel++; // increment the channel because we don't use the same channel in consecutive&#xD;
					// time&#xD;
					// slots for the same node&#xD;
		if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
											// max&#xD;
			channel = 0;&#xD;
		}&#xD;
		var channelFound = false;&#xD;
		while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
														// channels to assign&#xD;
			var channelString = String.valueOf(channel);&#xD;
			var channelRemoved = channels.remove(channelString);&#xD;
			if (channelRemoved) {&#xD;
				// newChannel has the channel&#xD;
				newChannel = channelString;&#xD;
				channelFound = true;&#xD;
			} else {&#xD;
				// try another channel&#xD;
				channel += 1;&#xD;
				if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
													// hits max&#xD;
					channel = 0;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgOtO4Ee2O0cjNcmYJpQ" name="selectPriority" specification="_5MOW6dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgO9O4Ee2O0cjNcmYJpQ" name="selectRM" specification="_5MO98NO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgPNO4Ee2O0cjNcmYJpQ" name="selectDM" specification="_5MO98dO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgPdO4Ee2O0cjNcmYJpQ" name="selectRtHART" specification="_5MO98tO4Ee2O0cjNcmYJpQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5SzgPtO4Ee2O0cjNcmYJpQ" name="setScheduleSelected" specification="_5R6IINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5SzgP9O4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
		case PRIORITY:&#xD;
			schedulerName = &quot;Priority&quot;;&#xD;
			schChoice = &quot;-Priority&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case RM:&#xD;
			schedulerName = &quot;RateMonotonic&quot;;&#xD;
			schChoice = &quot;-RM&quot;;&#xD;
			workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		case DM:&#xD;
			schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
			schChoice = &quot;-DM&quot;;&#xD;
			workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case RTHART:&#xD;
			schedulerName = &quot;RealtimeHART&quot;;&#xD;
			schChoice = &quot;-RealTimeHART&quot;;&#xD;
			workLoad.setFlowsInRealTimeHARTorder();&#xD;
			setRealTimeHartFlag(true);&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_DM:&#xD;
			schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
			schChoice = &quot;-CPdm&quot;;&#xD;
			workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_PRIORITY:&#xD;
			schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
			schChoice = &quot;-CPoset&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case CONNECTIVITY_POSET_RM:&#xD;
			schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
			schChoice = &quot;-CPrm&quot;;&#xD;
			workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		case POSET_DM:&#xD;
			schedulerName = &quot;PosetDM&quot;;&#xD;
			schChoice = &quot;-PosetDM&quot;;&#xD;
			workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case POSET_PRIORITY:&#xD;
			schedulerName = &quot;Poset&quot;;&#xD;
			schChoice = &quot;-Poset&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case POSET_RM:&#xD;
			schedulerName = &quot;PosetRM&quot;;&#xD;
			schChoice = &quot;-PosetDM&quot;;&#xD;
			workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		case WARP_POSET_DM:&#xD;
			schedulerName = &quot;WarpPosetDM&quot;;&#xD;
			schChoice = &quot;-WPdm&quot;;&#xD;
			workLoad.setFlowsInDMorder();&#xD;
			break;&#xD;
		case WARP_POSET_PRIORITY:&#xD;
			schedulerName = &quot;WarpPoset&quot;;&#xD;
			schChoice = &quot;-WarpPoset&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		case WARP_POSET_RM:&#xD;
			schedulerName = &quot;WarpPosetRM&quot;;&#xD;
			schChoice = &quot;-WPrm&quot;;&#xD;
			workLoad.setFlowsInRMorder();&#xD;
			break;&#xD;
		default:&#xD;
			schedulerName = &quot;Priority&quot;;&#xD;
			schChoice = &quot;-Priority&quot;;&#xD;
			workLoad.setFlowsInPriorityOrder();&#xD;
			break;&#xD;
		}&#xD;
		SchedulerSelected = choice;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HENO4Ee2O0cjNcmYJpQ" name="setSchedule" specification="_5RRO8NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HEdO4Ee2O0cjNcmYJpQ" name="schedule" type="_5LNqQNO4Ee2O0cjNcmYJpQ"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HEtO4Ee2O0cjNcmYJpQ" name="getSchedule" specification="_5MO989O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HE9O4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HFNO4Ee2O0cjNcmYJpQ" name="getSchedulerName" specification="_5MO99NO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HFdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HFtO4Ee2O0cjNcmYJpQ" name="getSchChoice" specification="_5MO9-dO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HF9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HGNO4Ee2O0cjNcmYJpQ" name="getNumChannels" specification="_5MO9-9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HGdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HGtO4Ee2O0cjNcmYJpQ" name="getNumTransmissions" specification="_5MPlA9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HG9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HHNO4Ee2O0cjNcmYJpQ" name="getRealTimeHartFlag" specification="_5MPlCNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HHdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HHtO4Ee2O0cjNcmYJpQ" name="setRealTimeHartFlag" specification="_5MPlCtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HH9O4Ee2O0cjNcmYJpQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HINO4Ee2O0cjNcmYJpQ" name="getMinPacketReceptionRate" specification="_5MPlDNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HIdO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HItO4Ee2O0cjNcmYJpQ" name="getE2e" specification="_5MQMEdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HI9O4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HJNO4Ee2O0cjNcmYJpQ" name="getName" specification="_5MQMFdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HJdO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HJtO4Ee2O0cjNcmYJpQ" name="getOptimizationFlag" specification="_5MQMGtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HJ9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HKNO4Ee2O0cjNcmYJpQ" name="deadlineMisses" specification="_5MQMH9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HKdO4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HKtO4Ee2O0cjNcmYJpQ" name="getNumFaults" specification="_5MQzINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HK9O4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5S0HLNO4Ee2O0cjNcmYJpQ" name="getNodeMapIndex" specification="_5MQzJdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5S0HLdO4Ee2O0cjNcmYJpQ" type="_5QP7QNO4Ee2O0cjNcmYJpQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
																			// names&#xD;
		// sorted alphabetically&#xD;
		var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
															// index in schedule&#xD;
		// table&#xD;
		var nNodes = orderedNodes.length;&#xD;
		for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
			var name = orderedNodes[index];&#xD;
			nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
		}&#xD;
		return nodeIndexMap;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5MNIwNO4Ee2O0cjNcmYJpQ" name="toWorkLoad" method="_5Sy5CtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j3tejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the workload of the program object.&lt;/h1>&#xD;
	 * &lt;p>A workload contains all of the flows.&lt;/p>&#xD;
	 * &#xD;
	 * @return workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RQA1dO4Ee2O0cjNcmYJpQ" type="_5L1VUNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5MNIwdO4Ee2O0cjNcmYJpQ" name="buildOriginalProgram" method="_5SzgAtO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MNv0NO4Ee2O0cjNcmYJpQ" name="waitInstruction" visibility="private" method="_5SzgA9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MNv0dO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv0tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MNv09O4Ee2O0cjNcmYJpQ" name="elseWaitInstruction" visibility="private" method="_5SzgBtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MNv1NO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv1dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MNv1tO4Ee2O0cjNcmYJpQ" name="elsePullClause" visibility="private" method="_5SzgCdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MNv19O4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv2NO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv2dO4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv2tO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv29O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MNv3NO4Ee2O0cjNcmYJpQ" name="hasPushInstruction" visibility="private" method="_5SzgD9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MNv3dO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv3tO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv39O4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv4NO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MNv4dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MOW4NO4Ee2O0cjNcmYJpQ" name="pushInstruction" visibility="private" method="_5SzgFdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MOW4dO4Ee2O0cjNcmYJpQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MOW4tO4Ee2O0cjNcmYJpQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MOW49O4Ee2O0cjNcmYJpQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MOW5NO4Ee2O0cjNcmYJpQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MOW5dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MOW5tO4Ee2O0cjNcmYJpQ" name="getFirstChannelInInstruction" visibility="private" method="_5SzgG9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MOW59O4Ee2O0cjNcmYJpQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5MOW6NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MOW6dO4Ee2O0cjNcmYJpQ" name="selectPriority" method="_5SzgOtO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MO98NO4Ee2O0cjNcmYJpQ" name="selectRM" method="_5SzgO9O4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MO98dO4Ee2O0cjNcmYJpQ" name="selectDM" method="_5SzgPNO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MO98tO4Ee2O0cjNcmYJpQ" name="selectRtHART" method="_5SzgPdO4Ee2O0cjNcmYJpQ"/>
              <ownedOperation xmi:id="_5MO989O4Ee2O0cjNcmYJpQ" name="getSchedule" method="_5S0HEtO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C41j39ejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns the schedule for the networks messages.&lt;/h1>&#xD;
	 * &#xD;
	 * @return scheduleBuilt A ProgramSchedule object</body>
                </ownedComment>
                <ownedParameter xmi:id="_5RRO8tO4Ee2O0cjNcmYJpQ" type="_5LNqQNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5MO99NO4Ee2O0cjNcmYJpQ" name="getSchedulerName" method="_5S0HFNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MO99dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MO9-dO4Ee2O0cjNcmYJpQ" name="getSchChoice" method="_5S0HFtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MO9-tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MO9-9O4Ee2O0cjNcmYJpQ" name="getNumChannels" method="_5S0HGNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MO9_NO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MPlA9O4Ee2O0cjNcmYJpQ" name="getNumTransmissions" method="_5S0HGtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MPlBNO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MPlCNO4Ee2O0cjNcmYJpQ" name="getRealTimeHartFlag" visibility="private" method="_5S0HHNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MPlCdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MPlCtO4Ee2O0cjNcmYJpQ" name="setRealTimeHartFlag" visibility="private" method="_5S0HHtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MPlC9O4Ee2O0cjNcmYJpQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MPlDNO4Ee2O0cjNcmYJpQ" name="getMinPacketReceptionRate" method="_5S0HINO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5R6IItO4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5MQMEdO4Ee2O0cjNcmYJpQ" name="getE2e" method="_5S0HItO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5R6II9O4Ee2O0cjNcmYJpQ" type="_5RreodO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5MQMFdO4Ee2O0cjNcmYJpQ" name="getName" method="_5S0HJNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MQMFtO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MQMGtO4Ee2O0cjNcmYJpQ" name="getOptimizationFlag" method="_5S0HJtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MQMG9O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MQMH9O4Ee2O0cjNcmYJpQ" name="deadlineMisses" method="_5S0HKNO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RRO89O4Ee2O0cjNcmYJpQ" type="_5K0BoNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5MQzINO4Ee2O0cjNcmYJpQ" name="getNumFaults" method="_5S0HKtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5MQzIdO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5MQzJdO4Ee2O0cjNcmYJpQ" name="getNodeMapIndex" method="_5S0HLNO4Ee2O0cjNcmYJpQ">
                <ownedComment xmi:id="_C42K4NejEe2IjMkQsyA0cQ">
                  <body>&lt;h1>Returns a mapping of the program's workload's nodes to an index.&lt;/h1>&#xD;
	 * &lt;p>A Hashmap is returned that maps a Node to an index number. The lower the number,&#xD;
	 * the further to the front of the alphabet the node is.&lt;/p>&#xD;
	 * &#xD;
	 * @return nodeIndexMap from Strings representing node names to Integers for their alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_5R6IJNO4Ee2O0cjNcmYJpQ" type="_5QP7QNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5RQA0NO4Ee2O0cjNcmYJpQ" name="setDefaultParameters" visibility="private" method="_5Sy5BdO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RQA0dO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RQA0tO4Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA09O4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA1NO4Ee2O0cjNcmYJpQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RQA1tO4Ee2O0cjNcmYJpQ" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_5SzgHtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RQA19O4Ee2O0cjNcmYJpQ" name="schedule" type="_5LNqQNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RQA2NO4Ee2O0cjNcmYJpQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA2dO4Ee2O0cjNcmYJpQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA2tO4Ee2O0cjNcmYJpQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA29O4Ee2O0cjNcmYJpQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA3NO4Ee2O0cjNcmYJpQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5RQn4NO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA3dO4Ee2O0cjNcmYJpQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5RQn4dO4Ee2O0cjNcmYJpQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA3tO4Ee2O0cjNcmYJpQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA39O4Ee2O0cjNcmYJpQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA4NO4Ee2O0cjNcmYJpQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA4dO4Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA4tO4Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQA49O4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RQn4tO4Ee2O0cjNcmYJpQ" name="slotIsAvailable" visibility="private" method="_5SzgLtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RQn49O4Ee2O0cjNcmYJpQ" name="currentInstructionTimeSlot" type="_5LBdANO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RQn5NO4Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQn5dO4Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQn5tO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RQn59O4Ee2O0cjNcmYJpQ" name="findNextAvailableChannel" visibility="private" method="_5SzgM9O4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RQn6NO4Ee2O0cjNcmYJpQ" name="schedule" type="_5LNqQNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5RQn6dO4Ee2O0cjNcmYJpQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQn6tO4Ee2O0cjNcmYJpQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQn69O4Ee2O0cjNcmYJpQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQn7NO4Ee2O0cjNcmYJpQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5RQn7dO4Ee2O0cjNcmYJpQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_5RRO8NO4Ee2O0cjNcmYJpQ" name="setSchedule" visibility="private" method="_5S0HENO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5RRO8dO4Ee2O0cjNcmYJpQ" name="schedule" type="_5LNqQNO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R5hENO4Ee2O0cjNcmYJpQ" name="Program" visibility="package" method="_5Sy4-dO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5R5hFtO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5R5hF9O4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5R5hEdO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R5hEtO4Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R5hE9O4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R5hFNO4Ee2O0cjNcmYJpQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R5hFdO4Ee2O0cjNcmYJpQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R5hGNO4Ee2O0cjNcmYJpQ" type="_5MMhsNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R5hGdO4Ee2O0cjNcmYJpQ" name="Program" visibility="package" method="_5Sy5ANO4Ee2O0cjNcmYJpQ">
                <eAnnotations xmi:id="_5R5hHdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5R5hHtO4Ee2O0cjNcmYJpQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_5R5hGtO4Ee2O0cjNcmYJpQ" name="workLoad" type="_5L1VUNO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R5hG9O4Ee2O0cjNcmYJpQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5R5hHNO4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
                <ownedParameter xmi:id="_5R5hH9O4Ee2O0cjNcmYJpQ" type="_5MMhsNO4Ee2O0cjNcmYJpQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R5hINO4Ee2O0cjNcmYJpQ" name="buildProgram" method="_5SzgANO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5R5hIdO4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5R6IINO4Ee2O0cjNcmYJpQ" name="setScheduleSelected" visibility="private" method="_5SzgPtO4Ee2O0cjNcmYJpQ">
                <ownedParameter xmi:id="_5R6IIdO4Ee2O0cjNcmYJpQ" name="choice" type="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5RgfgNO4Ee2O0cjNcmYJpQ" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5RppcNO4Ee2O0cjNcmYJpQ" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5RwXINO4Ee2O0cjNcmYJpQ" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5RwXKdO4Ee2O0cjNcmYJpQ" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5R0BgtO4Ee2O0cjNcmYJpQ" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_5S3KZ9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5SDSF9O4Ee2O0cjNcmYJpQ _5S3KaNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5S3KaNO4Ee2O0cjNcmYJpQ" name="" type="_5K0ot9O4Ee2O0cjNcmYJpQ" association="_5S3KZ9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5S5mptO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5SXbK9O4Ee2O0cjNcmYJpQ _5S5mp9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5S5mp9O4Ee2O0cjNcmYJpQ" name="" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5S5mptO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5S5mqNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5SXbLNO4Ee2O0cjNcmYJpQ _5S5mqdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5S5mqdO4Ee2O0cjNcmYJpQ" name="" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5S5mqNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5S6NxNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5SZ3YtO4Ee2O0cjNcmYJpQ _5S6NxdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5S6NxdO4Ee2O0cjNcmYJpQ" name="" type="_5L8qENO4Ee2O0cjNcmYJpQ" association="_5S6NxNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TFM0NO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TFM0dO4Ee2O0cjNcmYJpQ _5R_AotO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TFM0dO4Ee2O0cjNcmYJpQ" name="" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" association="_5TFM0NO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TFM09O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TFM1NO4Ee2O0cjNcmYJpQ _5R_nsNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TFM1NO4Ee2O0cjNcmYJpQ" name="" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" association="_5TFM09O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TFM1tO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TFM19O4Ee2O0cjNcmYJpQ _5R_nstO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TFM19O4Ee2O0cjNcmYJpQ" name="" type="_5Kl_NdO4Ee2O0cjNcmYJpQ" association="_5TFM1tO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TFz4dO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TFz4tO4Ee2O0cjNcmYJpQ _5SAOwtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TFz4tO4Ee2O0cjNcmYJpQ" name="" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" association="_5TFz4dO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TFz5NO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TFz5dO4Ee2O0cjNcmYJpQ _5SAOxNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TFz5dO4Ee2O0cjNcmYJpQ" name="" type="_5Kq3sNO4Ee2O0cjNcmYJpQ" association="_5TFz5NO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TFz59O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TFz6NO4Ee2O0cjNcmYJpQ _5SA10tO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TFz6NO4Ee2O0cjNcmYJpQ" name="" type="_5KrewNO4Ee2O0cjNcmYJpQ" association="_5TFz59O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TFz6tO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TFz69O4Ee2O0cjNcmYJpQ _5SA11NO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TFz69O4Ee2O0cjNcmYJpQ" name="" type="_5KrewNO4Ee2O0cjNcmYJpQ" association="_5TFz6tO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TGa8dO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TGa8tO4Ee2O0cjNcmYJpQ _5SA13NO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TGa8tO4Ee2O0cjNcmYJpQ" name="" type="_5KsF0NO4Ee2O0cjNcmYJpQ" association="_5TGa8dO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TGa9NO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TGa9dO4Ee2O0cjNcmYJpQ _5SBc5NO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TGa9dO4Ee2O0cjNcmYJpQ" name="" type="_5Kt7ANO4Ee2O0cjNcmYJpQ" association="_5TGa9NO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TGa99O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TGa-NO4Ee2O0cjNcmYJpQ _5SCD8dO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TGa-NO4Ee2O0cjNcmYJpQ" name="" type="_5Kt7ANO4Ee2O0cjNcmYJpQ" association="_5TGa99O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TGa-tO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TGa-9O4Ee2O0cjNcmYJpQ _5SCrANO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TGa-9O4Ee2O0cjNcmYJpQ" name="" type="_5KxlYNO4Ee2O0cjNcmYJpQ" association="_5TGa-tO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5THCAdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5THCAtO4Ee2O0cjNcmYJpQ _5SCrBtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5THCAtO4Ee2O0cjNcmYJpQ" name="" type="_5KxlYNO4Ee2O0cjNcmYJpQ" association="_5THCAdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5THCBNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5THCBdO4Ee2O0cjNcmYJpQ _5SEgM9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5THCBdO4Ee2O0cjNcmYJpQ" name="" type="_5K46INO4Ee2O0cjNcmYJpQ" association="_5THCBNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5THCB9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5THCCNO4Ee2O0cjNcmYJpQ _5SEgNtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5THCCNO4Ee2O0cjNcmYJpQ" name="" type="_5K46INO4Ee2O0cjNcmYJpQ" association="_5THCB9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5THCCtO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5THCC9O4Ee2O0cjNcmYJpQ _5SEgOdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5THCC9O4Ee2O0cjNcmYJpQ" name="" type="_5K46INO4Ee2O0cjNcmYJpQ" association="_5THCCtO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5THpEdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5THpEtO4Ee2O0cjNcmYJpQ _5SFHQtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5THpEtO4Ee2O0cjNcmYJpQ" name="" type="_5K46INO4Ee2O0cjNcmYJpQ" association="_5THpEdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5THpFNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5THpFdO4Ee2O0cjNcmYJpQ _5SFHRNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5THpFdO4Ee2O0cjNcmYJpQ" name="" type="_5K46INO4Ee2O0cjNcmYJpQ" association="_5THpFNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5THpF9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5THpGNO4Ee2O0cjNcmYJpQ _5SFuWtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5THpGNO4Ee2O0cjNcmYJpQ" name="" type="_5K8kgdO4Ee2O0cjNcmYJpQ" association="_5THpF9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TIQIdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TIQItO4Ee2O0cjNcmYJpQ _5SGVYdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TIQItO4Ee2O0cjNcmYJpQ" name="" type="_5K8kgdO4Ee2O0cjNcmYJpQ" association="_5TIQIdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TIQJNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TIQJdO4Ee2O0cjNcmYJpQ _5SGVY9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TIQJdO4Ee2O0cjNcmYJpQ" name="" type="_5K-ZsNO4Ee2O0cjNcmYJpQ" association="_5TIQJNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TIQJ9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TIQKNO4Ee2O0cjNcmYJpQ _5SGVZdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TIQKNO4Ee2O0cjNcmYJpQ" name="" type="_5K_n0NO4Ee2O0cjNcmYJpQ" association="_5TIQJ9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TIQKtO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TIQK9O4Ee2O0cjNcmYJpQ _5SG8cNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TIQK9O4Ee2O0cjNcmYJpQ" name="" type="_5K_n0NO4Ee2O0cjNcmYJpQ" association="_5TIQKtO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TI3MdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TI3MtO4Ee2O0cjNcmYJpQ _5SG8dNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TI3MtO4Ee2O0cjNcmYJpQ" name="" type="_5LAO4NO4Ee2O0cjNcmYJpQ" association="_5TI3MdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TI3NNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TI3NdO4Ee2O0cjNcmYJpQ _5SHjiNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TI3NdO4Ee2O0cjNcmYJpQ" name="" type="_5LCEHtO4Ee2O0cjNcmYJpQ" association="_5TI3NNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TI3N9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TI3ONO4Ee2O0cjNcmYJpQ _5SHjitO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TI3ONO4Ee2O0cjNcmYJpQ" name="" type="_5LCEHtO4Ee2O0cjNcmYJpQ" association="_5TI3N9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TI3OtO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TI3O9O4Ee2O0cjNcmYJpQ _5SHjjNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TI3O9O4Ee2O0cjNcmYJpQ" name="" type="_5LCEHtO4Ee2O0cjNcmYJpQ" association="_5TI3OtO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TJeQdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TJeQtO4Ee2O0cjNcmYJpQ _5SIKkdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TJeQtO4Ee2O0cjNcmYJpQ" name="" type="_5LCEHtO4Ee2O0cjNcmYJpQ" association="_5TJeQdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TJeRNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TJeRdO4Ee2O0cjNcmYJpQ _5SIKk9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TJeRdO4Ee2O0cjNcmYJpQ" name="" type="_5LCEHtO4Ee2O0cjNcmYJpQ" association="_5TJeRNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TJeR9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TJeSNO4Ee2O0cjNcmYJpQ _5SIKmtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TJeSNO4Ee2O0cjNcmYJpQ" name="" type="_5LDSMNO4Ee2O0cjNcmYJpQ" association="_5TJeR9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TKFUdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TKFUtO4Ee2O0cjNcmYJpQ _5SIxodO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TKFUtO4Ee2O0cjNcmYJpQ" name="" type="_5LDSMNO4Ee2O0cjNcmYJpQ" association="_5TKFUdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TKFVNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TKFVdO4Ee2O0cjNcmYJpQ _5SIxp9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TKFVdO4Ee2O0cjNcmYJpQ" name="" type="_5LFHYNO4Ee2O0cjNcmYJpQ" association="_5TKFVNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TKFV9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TKFWNO4Ee2O0cjNcmYJpQ _5SJYutO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TKFWNO4Ee2O0cjNcmYJpQ" name="" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TKFV9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TKFWtO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TKFW9O4Ee2O0cjNcmYJpQ _5SJ_wNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TKFW9O4Ee2O0cjNcmYJpQ" name="" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TKFWtO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TKsYdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TKsYtO4Ee2O0cjNcmYJpQ _5SJ_wtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TKsYtO4Ee2O0cjNcmYJpQ" name="" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TKsYdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TKsZNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TKsZdO4Ee2O0cjNcmYJpQ _5SJ_x9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TKsZdO4Ee2O0cjNcmYJpQ" name="" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TKsZNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TKsZ9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TKsaNO4Ee2O0cjNcmYJpQ _5SJ_zNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TKsaNO4Ee2O0cjNcmYJpQ" name="" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TKsZ9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TLTcNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TLTcdO4Ee2O0cjNcmYJpQ _5SJ_ztO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TLTcdO4Ee2O0cjNcmYJpQ" name="" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TLTcNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TLTc9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TLTdNO4Ee2O0cjNcmYJpQ _5SKm0tO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TLTdNO4Ee2O0cjNcmYJpQ" name="" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TLTc9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TLTdtO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TLTd9O4Ee2O0cjNcmYJpQ _5SKm1dO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TLTd9O4Ee2O0cjNcmYJpQ" name="" type="_5LIxwNO4Ee2O0cjNcmYJpQ" association="_5TLTdtO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TLTedO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TLTetO4Ee2O0cjNcmYJpQ _5SLN5NO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TLTetO4Ee2O0cjNcmYJpQ" name="" type="_5LORUNO4Ee2O0cjNcmYJpQ" association="_5TLTedO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TL6gdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TL6gtO4Ee2O0cjNcmYJpQ _5SLN5tO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TL6gtO4Ee2O0cjNcmYJpQ" name="" type="_5LORUNO4Ee2O0cjNcmYJpQ" association="_5TL6gdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TL6hNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TL6hdO4Ee2O0cjNcmYJpQ _5SL09tO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TL6hdO4Ee2O0cjNcmYJpQ" name="" type="_5LRUodO4Ee2O0cjNcmYJpQ" association="_5TL6hNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TL6h9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TL6iNO4Ee2O0cjNcmYJpQ _5SNDENO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TL6iNO4Ee2O0cjNcmYJpQ" name="" type="_5LU_ANO4Ee2O0cjNcmYJpQ" association="_5TL6h9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TL6itO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TL6i9O4Ee2O0cjNcmYJpQ _5SNDEtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TL6i9O4Ee2O0cjNcmYJpQ" name="" type="_5LU_ANO4Ee2O0cjNcmYJpQ" association="_5TL6itO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TMhkdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TMhktO4Ee2O0cjNcmYJpQ _5SNDFtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TMhktO4Ee2O0cjNcmYJpQ" name="" type="_5LWNINO4Ee2O0cjNcmYJpQ" association="_5TMhkdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TMhlNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TMhldO4Ee2O0cjNcmYJpQ _5SNqJtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TMhldO4Ee2O0cjNcmYJpQ" name="" type="_5LYCUNO4Ee2O0cjNcmYJpQ" association="_5TMhlNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TMhl9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TMhmNO4Ee2O0cjNcmYJpQ _5SNqKtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TMhmNO4Ee2O0cjNcmYJpQ" name="" type="_5LYCUNO4Ee2O0cjNcmYJpQ" association="_5TMhl9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TNIoNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TNIodO4Ee2O0cjNcmYJpQ _5SO4QNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TNIodO4Ee2O0cjNcmYJpQ" name="" type="_5LaekdO4Ee2O0cjNcmYJpQ" association="_5TNIoNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TNIo9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TNIpNO4Ee2O0cjNcmYJpQ _5SO4QtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TNIpNO4Ee2O0cjNcmYJpQ" name="" type="_5LaekdO4Ee2O0cjNcmYJpQ" association="_5TNIo9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TNIptO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TNIp9O4Ee2O0cjNcmYJpQ _5SPfWNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TNIp9O4Ee2O0cjNcmYJpQ" name="" type="_5LkPkNO4Ee2O0cjNcmYJpQ" association="_5TNIptO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TNIqdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TNIqtO4Ee2O0cjNcmYJpQ _5SQGYdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TNIqtO4Ee2O0cjNcmYJpQ" name="" type="_5LkPkNO4Ee2O0cjNcmYJpQ" association="_5TNIqdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TNvsdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TNvstO4Ee2O0cjNcmYJpQ _5SQGY9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TNvstO4Ee2O0cjNcmYJpQ" name="" type="_5LkPkNO4Ee2O0cjNcmYJpQ" association="_5TNvsdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TNvtNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TNvtdO4Ee2O0cjNcmYJpQ _5SQGa9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TNvtdO4Ee2O0cjNcmYJpQ" name="" type="_5LkPkNO4Ee2O0cjNcmYJpQ" association="_5TNvtNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TNvt9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TNvuNO4Ee2O0cjNcmYJpQ _5SQtcdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TNvuNO4Ee2O0cjNcmYJpQ" name="" type="_5LkPkNO4Ee2O0cjNcmYJpQ" association="_5TNvt9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TOWwNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TOWwdO4Ee2O0cjNcmYJpQ _5SQtdNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TOWwdO4Ee2O0cjNcmYJpQ" name="" type="_5LkPkNO4Ee2O0cjNcmYJpQ" association="_5TOWwNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TOWw9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TOWxNO4Ee2O0cjNcmYJpQ _5SQtd9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TOWxNO4Ee2O0cjNcmYJpQ" name="" type="_5LkPkNO4Ee2O0cjNcmYJpQ" association="_5TOWw9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TOWxtO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TOWx9O4Ee2O0cjNcmYJpQ _5SRUgNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TOWx9O4Ee2O0cjNcmYJpQ" name="" type="_5Lmr0NO4Ee2O0cjNcmYJpQ" association="_5TOWxtO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TOWydO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TOWytO4Ee2O0cjNcmYJpQ _5SU-49O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TOWytO4Ee2O0cjNcmYJpQ" name="" type="_5LuAkNO4Ee2O0cjNcmYJpQ" association="_5TOWydO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TO90dO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TO90tO4Ee2O0cjNcmYJpQ _5SU-5tO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TO90tO4Ee2O0cjNcmYJpQ" name="" type="_5LuAkNO4Ee2O0cjNcmYJpQ" association="_5TO90dO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TO91NO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TO91dO4Ee2O0cjNcmYJpQ _5SVl8NO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TO91dO4Ee2O0cjNcmYJpQ" name="" type="_5LxD4NO4Ee2O0cjNcmYJpQ" association="_5TO91NO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TO919O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TO92NO4Ee2O0cjNcmYJpQ _5SVl8tO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TO92NO4Ee2O0cjNcmYJpQ" name="" type="_5LxD4NO4Ee2O0cjNcmYJpQ" association="_5TO919O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TO92tO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TO929O4Ee2O0cjNcmYJpQ _5SVl9NO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TO929O4Ee2O0cjNcmYJpQ" name="" type="_5LxD4NO4Ee2O0cjNcmYJpQ" association="_5TO92tO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TPk4dO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TPk4tO4Ee2O0cjNcmYJpQ _5SVl9tO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TPk4tO4Ee2O0cjNcmYJpQ" name="" type="_5LxD4NO4Ee2O0cjNcmYJpQ" association="_5TPk4dO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TPk5NO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TPk5dO4Ee2O0cjNcmYJpQ _5SWNAdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TPk5dO4Ee2O0cjNcmYJpQ" name="" type="_5LxD4NO4Ee2O0cjNcmYJpQ" association="_5TPk5NO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TPk59O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TPk6NO4Ee2O0cjNcmYJpQ _5SYCMdO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TPk6NO4Ee2O0cjNcmYJpQ" name="" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5TPk59O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TQL8dO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TQL8tO4Ee2O0cjNcmYJpQ _5SYCNNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TQL8tO4Ee2O0cjNcmYJpQ" name="" type="_5L1VUNO4Ee2O0cjNcmYJpQ" association="_5TQL8dO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TQL9NO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TQL9dO4Ee2O0cjNcmYJpQ _5SZ3Y9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TQL9dO4Ee2O0cjNcmYJpQ" name="" type="_5L8qENO4Ee2O0cjNcmYJpQ" association="_5TQL9NO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TQL99O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TQL-NO4Ee2O0cjNcmYJpQ _5SaecNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TQL-NO4Ee2O0cjNcmYJpQ" name="" type="_5L8qENO4Ee2O0cjNcmYJpQ" association="_5TQL99O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TQzAdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TQzAtO4Ee2O0cjNcmYJpQ _5SaectO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TQzAtO4Ee2O0cjNcmYJpQ" name="" type="_5MCwsNO4Ee2O0cjNcmYJpQ" association="_5TQzAdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TQzBNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TQzBdO4Ee2O0cjNcmYJpQ _5SbsltO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TQzBdO4Ee2O0cjNcmYJpQ" name="" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TQzBNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TQzB9O4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TQzCNO4Ee2O0cjNcmYJpQ _5SbsmNO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TQzCNO4Ee2O0cjNcmYJpQ" name="" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TQzB9O4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TQzCtO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TQzC9O4Ee2O0cjNcmYJpQ _5SbsmtO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TQzC9O4Ee2O0cjNcmYJpQ" name="" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TQzCtO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TRaEdO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TRaEtO4Ee2O0cjNcmYJpQ _5ScTp9O4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TRaEtO4Ee2O0cjNcmYJpQ" name="" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TRaEdO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_5TRaFNO4Ee2O0cjNcmYJpQ" name="" memberEnd="_5TRaFdO4Ee2O0cjNcmYJpQ _5Sc6stO4Ee2O0cjNcmYJpQ">
              <ownedEnd xmi:id="_5TRaFdO4Ee2O0cjNcmYJpQ" name="" type="_5MMhsNO4Ee2O0cjNcmYJpQ" association="_5TRaFNO4Ee2O0cjNcmYJpQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DTxzYNejEe2IjMkQsyA0cQ" name="" memberEnd="_DTxzYdejEe2IjMkQsyA0cQ _DTuJANejEe2IjMkQsyA0cQ">
              <ownedEnd xmi:id="_DTxzYdejEe2IjMkQsyA0cQ" name="" type="_5LU_ANO4Ee2O0cjNcmYJpQ" association="_DTxzYNejEe2IjMkQsyA0cQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_5JRwldO4Ee2O0cjNcmYJpQ" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_5QfL0dO4Ee2O0cjNcmYJpQ" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5QfL09O4Ee2O0cjNcmYJpQ" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5QfL1dO4Ee2O0cjNcmYJpQ" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5RyzYNO4Ee2O0cjNcmYJpQ" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_5JtOYNO4Ee2O0cjNcmYJpQ" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_5RDMgNO4Ee2O0cjNcmYJpQ" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5I2SwtO4Ee2O0cjNcmYJpQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_5I2Sw9O4Ee2O0cjNcmYJpQ" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_5JImoNO4Ee2O0cjNcmYJpQ" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_5QWB4NO4Ee2O0cjNcmYJpQ" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_5JtOYdO4Ee2O0cjNcmYJpQ" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_5RDMhNO4Ee2O0cjNcmYJpQ" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_5J1xQNO4Ee2O0cjNcmYJpQ" name="concurrent">
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_5RNkkNO4Ee2O0cjNcmYJpQ" name="TimeUnit"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5LQtldO4Ee2O0cjNcmYJpQ" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QP7QNO4Ee2O0cjNcmYJpQ" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QQiUNO4Ee2O0cjNcmYJpQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QQiUtO4Ee2O0cjNcmYJpQ" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5QQiVNO4Ee2O0cjNcmYJpQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5QRJYdO4Ee2O0cjNcmYJpQ" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5QZFMdO4Ee2O0cjNcmYJpQ" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5QnusNO4Ee2O0cjNcmYJpQ" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QtOQNO4Ee2O0cjNcmYJpQ" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QtOQtO4Ee2O0cjNcmYJpQ" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QtORNO4Ee2O0cjNcmYJpQ" name="Vector"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5RDMgtO4Ee2O0cjNcmYJpQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5RFowNO4Ee2O0cjNcmYJpQ" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5RGP0dO4Ee2O0cjNcmYJpQ" name="Queue"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DTsT0NejEe2IjMkQsyA0cQ" name="Map"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5JNfI9O4Ee2O0cjNcmYJpQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_5QaTUtO4Ee2O0cjNcmYJpQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5Qa6YdO4Ee2O0cjNcmYJpQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QjdQNO4Ee2O0cjNcmYJpQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QjdQtO4Ee2O0cjNcmYJpQ" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5JNfJNO4Ee2O0cjNcmYJpQ" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_5JNfJdO4Ee2O0cjNcmYJpQ" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_5Qa6Y9O4Ee2O0cjNcmYJpQ" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_5Qa6ZdO4Ee2O0cjNcmYJpQ" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5Qa6Z9O4Ee2O0cjNcmYJpQ" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5JS-sNO4Ee2O0cjNcmYJpQ" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_5QiPINO4Ee2O0cjNcmYJpQ" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5Jd90NO4Ee2O0cjNcmYJpQ" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_5QxfsNO4Ee2O0cjNcmYJpQ" name="Collator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5RaY4NO4Ee2O0cjNcmYJpQ" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_5RaY4dO4Ee2O0cjNcmYJpQ" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5Rkw8NO4Ee2O0cjNcmYJpQ" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_5RreodO4Ee2O0cjNcmYJpQ" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5R4S8NO4Ee2O0cjNcmYJpQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5JNfINO4Ee2O0cjNcmYJpQ" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_5JNfIdO4Ee2O0cjNcmYJpQ" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_5JNfItO4Ee2O0cjNcmYJpQ" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_5QaTUNO4Ee2O0cjNcmYJpQ" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5JNfJtO4Ee2O0cjNcmYJpQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_5JOGMNO4Ee2O0cjNcmYJpQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_5JS-sdO4Ee2O0cjNcmYJpQ" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_5Qi2MdO4Ee2O0cjNcmYJpQ" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_5Qi2M9O4Ee2O0cjNcmYJpQ" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QbhcNO4Ee2O0cjNcmYJpQ" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QiPItO4Ee2O0cjNcmYJpQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QiPJNO4Ee2O0cjNcmYJpQ" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5QiPJtO4Ee2O0cjNcmYJpQ" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5JRwkNO4Ee2O0cjNcmYJpQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_5JRwkdO4Ee2O0cjNcmYJpQ" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_5JRwktO4Ee2O0cjNcmYJpQ" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_5JRwk9O4Ee2O0cjNcmYJpQ" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_5JRwlNO4Ee2O0cjNcmYJpQ" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_5QekxdO4Ee2O0cjNcmYJpQ" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5Qekx9O4Ee2O0cjNcmYJpQ" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_5Qd9udO4Ee2O0cjNcmYJpQ" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5QekwdO4Ee2O0cjNcmYJpQ" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5Qekw9O4Ee2O0cjNcmYJpQ" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5J1xQdO4Ee2O0cjNcmYJpQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_5J1xQtO4Ee2O0cjNcmYJpQ" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_5J1xQ9O4Ee2O0cjNcmYJpQ" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_5RNkktO4Ee2O0cjNcmYJpQ" name="Assertions"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_5RNklNO4Ee2O0cjNcmYJpQ" name="Assumptions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_5RNkltO4Ee2O0cjNcmYJpQ" name="Test"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_5ROLodO4Ee2O0cjNcmYJpQ" name="Timeout"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5JSXqNO4Ee2O0cjNcmYJpQ" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_5Qfy49O4Ee2O0cjNcmYJpQ" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Qfy6tO4Ee2O0cjNcmYJpQ" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5QgZ9tO4Ee2O0cjNcmYJpQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5QhBANO4Ee2O0cjNcmYJpQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5QhBB9O4Ee2O0cjNcmYJpQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5QhoE9O4Ee2O0cjNcmYJpQ" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5RKhR9O4Ee2O0cjNcmYJpQ" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5RLIU9O4Ee2O0cjNcmYJpQ" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5RLvYNO4Ee2O0cjNcmYJpQ" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5RLvZ9O4Ee2O0cjNcmYJpQ" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5Jl5oNO4Ee2O0cjNcmYJpQ" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q6CkdO4Ee2O0cjNcmYJpQ" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q6poNO4Ee2O0cjNcmYJpQ" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q6potO4Ee2O0cjNcmYJpQ" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q6ppNO4Ee2O0cjNcmYJpQ" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q6pptO4Ee2O0cjNcmYJpQ" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5Jo88NO4Ee2O0cjNcmYJpQ" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q9F4NO4Ee2O0cjNcmYJpQ" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q-UA9O4Ee2O0cjNcmYJpQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q-UCtO4Ee2O0cjNcmYJpQ" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q-7FtO4Ee2O0cjNcmYJpQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5Q_iJdO4Ee2O0cjNcmYJpQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_5RAJMtO4Ee2O0cjNcmYJpQ" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_4rwHENO4Ee2O0cjNcmYJpQ">
      <eAnnotations xmi:id="_4rwHEdO4Ee2O0cjNcmYJpQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_4rwHEtO4Ee2O0cjNcmYJpQ" base_Package="_4oBdoNO4Ee2O0cjNcmYJpQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_5Kl_MNO4Ee2O0cjNcmYJpQ" genericsValue="T,E" base_Element="_5KkxENO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5KmmRtO4Ee2O0cjNcmYJpQ" base_Element="_5KmmRdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5KmmR9O4Ee2O0cjNcmYJpQ" base_Element="_5KmmRdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5KmmSNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5KmmStO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5KmmSdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5KmmTNO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5KmmS9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5KmmTtO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5KmmTdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Kn0YNO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5KmmT9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Kn0YtO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5Kn0YdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Kss6NO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5Kss5tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5KuiE9O4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5KuiEtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5KxlYtO4Ee2O0cjNcmYJpQ" base_Element="_5KxlYdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5KxlY9O4Ee2O0cjNcmYJpQ" base_Element="_5KxlYdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5KyMcNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5KyMctO4Ee2O0cjNcmYJpQ" base_Element="_5KyMcdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5KyMc9O4Ee2O0cjNcmYJpQ" base_Element="_5KyMcdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5KyMdNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5KyMdtO4Ee2O0cjNcmYJpQ" base_Element="_5KyMddO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5KyMd9O4Ee2O0cjNcmYJpQ" base_Element="_5KyMddO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5KyMeNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5KzakdO4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5KzakNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5K0osNO4Ee2O0cjNcmYJpQ" base_Element="_5K0BqtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5K0osdO4Ee2O0cjNcmYJpQ" base_Element="_5K0BqtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5K0ostO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_5K0ottO4Ee2O0cjNcmYJpQ" base_Element="_5K0otNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5K1PwdO4Ee2O0cjNcmYJpQ" base_Element="_5K1PwNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5K123tO4Ee2O0cjNcmYJpQ" base_Element="_5K123NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5K1239O4Ee2O0cjNcmYJpQ" base_Element="_5K123NO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5K124NO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5K2d4tO4Ee2O0cjNcmYJpQ" base_Element="_5K2d4NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5K2d49O4Ee2O0cjNcmYJpQ" base_Element="_5K2d4NO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5K2d5NO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5K2d5tO4Ee2O0cjNcmYJpQ" base_Element="_5K2d5dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5K2d59O4Ee2O0cjNcmYJpQ" base_Element="_5K2d5dO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5K2d6NO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5K6IQNO4Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_5K5hP9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5K6IQtO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5K6IQdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5K6IRNO4Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_5K6IQ9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5K6vV9O4Ee2O0cjNcmYJpQ" base_Element="_5K6vVdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5K6vWNO4Ee2O0cjNcmYJpQ" base_Element="_5K6vVdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5K6vWdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5K9LkdO4Ee2O0cjNcmYJpQ" base_Element="_5K9LkNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5K9LktO4Ee2O0cjNcmYJpQ" base_Element="_5K9LkNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5K9Lk9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_5K_n2tO4Ee2O0cjNcmYJpQ" dimensions="2" base_Element="_5K_n1NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LD5QdO4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5LD5QNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LEgUdO4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5LEgUNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LFuctO4Ee2O0cjNcmYJpQ" base_Element="_5LFucNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LFuc9O4Ee2O0cjNcmYJpQ" base_Element="_5LFucNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LFudNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LFue9O4Ee2O0cjNcmYJpQ" base_Element="_5LFuedO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LFufNO4Ee2O0cjNcmYJpQ" base_Element="_5LFuedO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LFufdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LGVgdO4Ee2O0cjNcmYJpQ" base_Element="_5LGVgNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LGVgtO4Ee2O0cjNcmYJpQ" base_Element="_5LGVgNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LGVg9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LHjqtO4Ee2O0cjNcmYJpQ" base_Element="_5LHjqdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LHjq9O4Ee2O0cjNcmYJpQ" base_Element="_5LHjqdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LHjrNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5LIKsdO4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5LIKsNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LIxwtO4Ee2O0cjNcmYJpQ" genericsValue="String, Integer" base_Element="_5LIxwdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LJY0dO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5LJY0NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5LJY1dO4Ee2O0cjNcmYJpQ" base_Element="_5LJY0tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LL1EdO4Ee2O0cjNcmYJpQ" base_Element="_5LL1ENO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LL1EtO4Ee2O0cjNcmYJpQ" base_Element="_5LL1ENO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LL1E9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5LNDMdO4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5LNDMNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LORUtO4Ee2O0cjNcmYJpQ" base_Element="_5LORUdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LORU9O4Ee2O0cjNcmYJpQ" base_Element="_5LORUdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LORVNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LORVtO4Ee2O0cjNcmYJpQ" base_Element="_5LORVdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LORV9O4Ee2O0cjNcmYJpQ" base_Element="_5LORVdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LO4YNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LO4YtO4Ee2O0cjNcmYJpQ" base_Element="_5LO4YdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LO4Y9O4Ee2O0cjNcmYJpQ" base_Element="_5LO4YdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LO4ZNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_5LO4aNO4Ee2O0cjNcmYJpQ" base_Element="_5LO4ZdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LO4adO4Ee2O0cjNcmYJpQ" base_Element="_5LO4ZdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LO4atO4Ee2O0cjNcmYJpQ" base_Element="_5LO4ZdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LO4a9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_5LO4b9O4Ee2O0cjNcmYJpQ" dimensions="2" base_Element="_5LO4bNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LPfcNO4Ee2O0cjNcmYJpQ" base_Element="_5LO4bNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LPfcdO4Ee2O0cjNcmYJpQ" base_Element="_5LO4bNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LPfctO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5LQGgdO4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5LQGgNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LQtkNO4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5LQGgtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5LQtltO4Ee2O0cjNcmYJpQ" base_Element="_5LQtldO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LRUoNO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5LQtl9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LWNItO4Ee2O0cjNcmYJpQ" base_Element="_5LWNIdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LW0MNO4Ee2O0cjNcmYJpQ" base_Element="_5LWNIdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LW0MdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5LXbQNO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5LW0M9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LYpYdO4Ee2O0cjNcmYJpQ" base_Element="_5LYpYNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LYpYtO4Ee2O0cjNcmYJpQ" base_Element="_5LYpYNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LYpY9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LYpZdO4Ee2O0cjNcmYJpQ" base_Element="_5LYpZNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LYpZtO4Ee2O0cjNcmYJpQ" base_Element="_5LYpZNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LYpZ9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LYpatO4Ee2O0cjNcmYJpQ" base_Element="_5LYpaNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LYpa9O4Ee2O0cjNcmYJpQ" base_Element="_5LYpaNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LYpbNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5LZ3gdO4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5LZ3gNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LaekNO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5LZ3gtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LfXE9O4Ee2O0cjNcmYJpQ" genericsValue="T extends SchedulableObject" base_Element="_5LfXEtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Lf-JNO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5Lf-I9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LglMdO4Ee2O0cjNcmYJpQ" base_Element="_5LglMNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LhzUdO4Ee2O0cjNcmYJpQ" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_5LhzUNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LjBctO4Ee2O0cjNcmYJpQ" base_Element="_5LjBcdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LjogNO4Ee2O0cjNcmYJpQ" base_Element="_5LjBetO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Lk2odO4Ee2O0cjNcmYJpQ" base_Element="_5Lk2oNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Lk2otO4Ee2O0cjNcmYJpQ" base_Element="_5Lk2oNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Lk2o9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Lk2pdO4Ee2O0cjNcmYJpQ" base_Element="_5Lk2pNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Lk2ptO4Ee2O0cjNcmYJpQ" base_Element="_5Lk2pNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Lk2p9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LldsNO4Ee2O0cjNcmYJpQ" base_Element="_5Lk2qNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LldsdO4Ee2O0cjNcmYJpQ" base_Element="_5Lk2qNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LldstO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_5Ln59tO4Ee2O0cjNcmYJpQ" base_Element="_5Ln589O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5Ln5-tO4Ee2O0cjNcmYJpQ" dimensions="2" base_Element="_5Ln599O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5LpvI9O4Ee2O0cjNcmYJpQ" dimensions="1" base_Element="_5LpvIdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5LqWM9O4Ee2O0cjNcmYJpQ" dimensions="1" base_Element="_5LqWMdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LtZhNO4Ee2O0cjNcmYJpQ" genericsValue="InstructionParameters" base_Element="_5LtZgtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5LuAltO4Ee2O0cjNcmYJpQ" genericsValue="InstructionParameters" base_Element="_5LuAldO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Lxq8dO4Ee2O0cjNcmYJpQ" base_Element="_5Lxq8NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Lxq8tO4Ee2O0cjNcmYJpQ" base_Element="_5Lxq8NO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Lxq89O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Lxq9dO4Ee2O0cjNcmYJpQ" base_Element="_5Lxq9NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Lxq9tO4Ee2O0cjNcmYJpQ" base_Element="_5Lxq9NO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Lxq99O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Lxq-dO4Ee2O0cjNcmYJpQ" base_Element="_5Lxq-NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Lxq-tO4Ee2O0cjNcmYJpQ" base_Element="_5Lxq-NO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Lxq-9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LySAdO4Ee2O0cjNcmYJpQ" base_Element="_5LySANO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LySAtO4Ee2O0cjNcmYJpQ" base_Element="_5LySANO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LySA9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LySBdO4Ee2O0cjNcmYJpQ" base_Element="_5LySBNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LySBtO4Ee2O0cjNcmYJpQ" base_Element="_5LySBNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LySB9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LySCdO4Ee2O0cjNcmYJpQ" base_Element="_5LySCNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LySCtO4Ee2O0cjNcmYJpQ" base_Element="_5LySCNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LySC9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Ly5EdO4Ee2O0cjNcmYJpQ" base_Element="_5LySDNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Ly5EtO4Ee2O0cjNcmYJpQ" base_Element="_5LySDNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Ly5E9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Ly5FtO4Ee2O0cjNcmYJpQ" base_Element="_5Ly5FNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Ly5F9O4Ee2O0cjNcmYJpQ" base_Element="_5Ly5FNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Ly5GNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Ly5G9O4Ee2O0cjNcmYJpQ" base_Element="_5Ly5GdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Ly5HNO4Ee2O0cjNcmYJpQ" base_Element="_5Ly5GdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Ly5HdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LzgINO4Ee2O0cjNcmYJpQ" base_Element="_5Ly5HtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LzgIdO4Ee2O0cjNcmYJpQ" base_Element="_5Ly5HtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LzgItO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LzgJNO4Ee2O0cjNcmYJpQ" base_Element="_5LzgI9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LzgJdO4Ee2O0cjNcmYJpQ" base_Element="_5LzgI9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LzgJtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5LzgKdO4Ee2O0cjNcmYJpQ" base_Element="_5LzgJ9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5LzgKtO4Ee2O0cjNcmYJpQ" base_Element="_5LzgJ9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5LzgK9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5L0HMNO4Ee2O0cjNcmYJpQ" base_Element="_5LzgLNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5L0HMdO4Ee2O0cjNcmYJpQ" base_Element="_5LzgLNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5L0HMtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5L0HNdO4Ee2O0cjNcmYJpQ" base_Element="_5L0HM9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5L0HNtO4Ee2O0cjNcmYJpQ" base_Element="_5L0HM9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5L0HN9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5L0HOtO4Ee2O0cjNcmYJpQ" base_Element="_5L0HONO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5L0HO9O4Ee2O0cjNcmYJpQ" base_Element="_5L0HONO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5L0HPNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5L0HPtO4Ee2O0cjNcmYJpQ" base_Element="_5L0HPdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5L0HP9O4Ee2O0cjNcmYJpQ" base_Element="_5L0HPdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5L0HQNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_5L5my9O4Ee2O0cjNcmYJpQ" base_Element="_5L5myNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5L6N09O4Ee2O0cjNcmYJpQ" base_Element="_5L6N0NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5L6N29O4Ee2O0cjNcmYJpQ" base_Element="_5L6N19O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5L605dO4Ee2O0cjNcmYJpQ" dimensions="1" base_Element="_5L604dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5L-fQdO4Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_5L-fQNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MEl4NO4Ee2O0cjNcmYJpQ" base_Element="_5MD-0dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MEl4dO4Ee2O0cjNcmYJpQ" base_Element="_5MD-0dO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MEl4tO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MEl49O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MEl5NO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44AH9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MEl5dO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44AINejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MEl59O4Ee2O0cjNcmYJpQ" base_Element="_5MEl5tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MEl6NO4Ee2O0cjNcmYJpQ" base_Element="_5MEl5tO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MEl6dO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MEl6tO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MEl69O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44AIdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MEl7NO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44AItejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MEl7tO4Ee2O0cjNcmYJpQ" base_Element="_5MEl7dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MEl79O4Ee2O0cjNcmYJpQ" base_Element="_5MEl7dO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MEl8NO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MEl8dO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MEl8tO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44AI9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MEl89O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44AJNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MFM8NO4Ee2O0cjNcmYJpQ" base_Element="_5MEl9NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MFM8dO4Ee2O0cjNcmYJpQ" base_Element="_5MEl9NO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MFM8tO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MFM89O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MFM9NO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nINejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MFM9dO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nIdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MFM99O4Ee2O0cjNcmYJpQ" base_Element="_5MFM9tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MFM-NO4Ee2O0cjNcmYJpQ" base_Element="_5MFM9tO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MFM-dO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MFM-tO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MFM-9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nItejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MFM_NO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nI9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MFM_tO4Ee2O0cjNcmYJpQ" base_Element="_5MFM_dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MFM_9O4Ee2O0cjNcmYJpQ" base_Element="_5MFM_dO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MFNANO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MFNAdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MFNAtO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nJNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MFNA9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nJdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MF0ANO4Ee2O0cjNcmYJpQ" base_Element="_5MFNBNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MF0AdO4Ee2O0cjNcmYJpQ" base_Element="_5MFNBNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MF0AtO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MF0A9O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MF0BNO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nJtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MF0BdO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nJ9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MF0B9O4Ee2O0cjNcmYJpQ" base_Element="_5MF0BtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MF0CNO4Ee2O0cjNcmYJpQ" base_Element="_5MF0BtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MF0CdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MF0CtO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MF0C9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nKNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MF0DNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nKdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MF0DtO4Ee2O0cjNcmYJpQ" base_Element="_5MF0DdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MF0D9O4Ee2O0cjNcmYJpQ" base_Element="_5MF0DdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MF0ENO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MF0EdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MF0EtO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nKtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MF0E9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nK9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MF0FdO4Ee2O0cjNcmYJpQ" base_Element="_5MF0FNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MGbENO4Ee2O0cjNcmYJpQ" base_Element="_5MF0FNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MGbEdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MGbEtO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MGbE9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nLNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MGbFNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nLdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MGbFtO4Ee2O0cjNcmYJpQ" base_Element="_5MGbFdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MGbF9O4Ee2O0cjNcmYJpQ" base_Element="_5MGbFdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MGbGNO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MGbGdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MGbGtO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nLtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MGbG9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nL9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MGbHdO4Ee2O0cjNcmYJpQ" base_Element="_5MGbHNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MGbHtO4Ee2O0cjNcmYJpQ" base_Element="_5MGbHNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MGbH9O4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MGbINO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MGbIdO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nMNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MGbItO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nMdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MGbJNO4Ee2O0cjNcmYJpQ" base_Element="_5MGbI9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MGbJdO4Ee2O0cjNcmYJpQ" base_Element="_5MGbI9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MGbJtO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MGbJ9O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MHCINO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nMtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MHCIdO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nM9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MHCI9O4Ee2O0cjNcmYJpQ" base_Element="_5MHCItO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MHCJNO4Ee2O0cjNcmYJpQ" base_Element="_5MHCItO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MHCJdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MHCJtO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MHCJ9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nNNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MHCKNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nNdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MHCKtO4Ee2O0cjNcmYJpQ" base_Element="_5MHCKdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MHCK9O4Ee2O0cjNcmYJpQ" base_Element="_5MHCKdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MHCLNO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MHCLdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MHCLtO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nNtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MHCL9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nN9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MHCMdO4Ee2O0cjNcmYJpQ" base_Element="_5MHCMNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MHCMtO4Ee2O0cjNcmYJpQ" base_Element="_5MHCMNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MHCM9O4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MHCNNO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MHCNdO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nONejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MHCNtO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C44nOdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MHpMNO4Ee2O0cjNcmYJpQ" base_Element="_5MHCN9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MHpMdO4Ee2O0cjNcmYJpQ" base_Element="_5MHCN9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MHpMtO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MHpM9O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MHpNNO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OMNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MHpNdO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OMdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MHpN9O4Ee2O0cjNcmYJpQ" base_Element="_5MHpNtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MHpONO4Ee2O0cjNcmYJpQ" base_Element="_5MHpNtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MHpOdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MHpOtO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MHpO9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OMtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MHpPNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OM9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MHpPtO4Ee2O0cjNcmYJpQ" base_Element="_5MHpPdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MHpP9O4Ee2O0cjNcmYJpQ" base_Element="_5MHpPdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MHpQNO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MHpQdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MHpQtO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45ONNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MHpQ9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45ONdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MIQQNO4Ee2O0cjNcmYJpQ" base_Element="_5MHpRNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MIQQdO4Ee2O0cjNcmYJpQ" base_Element="_5MHpRNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MIQQtO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MIQQ9O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MIQRNO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45ONtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MIQRdO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45ON9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MIQR9O4Ee2O0cjNcmYJpQ" base_Element="_5MIQRtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MIQSNO4Ee2O0cjNcmYJpQ" base_Element="_5MIQRtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MIQSdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MIQStO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MIQS9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OONejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MIQTNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OOdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MIQTtO4Ee2O0cjNcmYJpQ" base_Element="_5MIQTdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MIQT9O4Ee2O0cjNcmYJpQ" base_Element="_5MIQTdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MIQUNO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MIQUdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MIQUtO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OOtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MIQU9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OO9ejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MI3UNO4Ee2O0cjNcmYJpQ" base_Element="_5MIQVNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MI3UdO4Ee2O0cjNcmYJpQ" base_Element="_5MIQVNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MI3UtO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MI3U9O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MI3VNO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OPNejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MI3VdO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OPdejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MI3V9O4Ee2O0cjNcmYJpQ" base_Element="_5MI3VtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MI3WNO4Ee2O0cjNcmYJpQ" base_Element="_5MI3VtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MI3WdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MI3WtO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MI3W9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C45OPtejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MI3XNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451QNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MI3XtO4Ee2O0cjNcmYJpQ" base_Element="_5MI3XdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MI3X9O4Ee2O0cjNcmYJpQ" base_Element="_5MI3XdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MI3YNO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MI3YdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MI3YtO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451QdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MI3Y9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451QtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MI3ZdO4Ee2O0cjNcmYJpQ" base_Element="_5MI3ZNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MJeYNO4Ee2O0cjNcmYJpQ" base_Element="_5MI3ZNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MJeYdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MJeYtO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MJeY9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451Q9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MJeZNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451RNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MJeZtO4Ee2O0cjNcmYJpQ" base_Element="_5MJeZdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MJeZ9O4Ee2O0cjNcmYJpQ" base_Element="_5MJeZdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MJeaNO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MJeadO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MJeatO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451RdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MJea9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451RtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MJebdO4Ee2O0cjNcmYJpQ" base_Element="_5MJebNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MJebtO4Ee2O0cjNcmYJpQ" base_Element="_5MJebNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MJeb9O4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MJecNO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MJecdO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451R9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MJectO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451SNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MJedNO4Ee2O0cjNcmYJpQ" base_Element="_5MJec9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MJeddO4Ee2O0cjNcmYJpQ" base_Element="_5MJec9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MJedtO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MJed9O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MJeeNO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451SdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MJeedO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451StejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MKFcdO4Ee2O0cjNcmYJpQ" base_Element="_5MKFcNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MKFctO4Ee2O0cjNcmYJpQ" base_Element="_5MKFcNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MKFc9O4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MKFdNO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MKFddO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451S9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MKFdtO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451TNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MKFeNO4Ee2O0cjNcmYJpQ" base_Element="_5MKFd9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MKFedO4Ee2O0cjNcmYJpQ" base_Element="_5MKFd9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MKFetO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MKFe9O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MKFfNO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451TdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MKFfdO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451TtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MKFf9O4Ee2O0cjNcmYJpQ" base_Element="_5MKFftO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MKFgNO4Ee2O0cjNcmYJpQ" base_Element="_5MKFftO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MKFgdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MKFgtO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MKFg9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451T9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MKFhNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451UNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MKsgNO4Ee2O0cjNcmYJpQ" base_Element="_5MKFhdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MKsgdO4Ee2O0cjNcmYJpQ" base_Element="_5MKFhdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MKsgtO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MKsg9O4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MKshNO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451UdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MKshdO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451UtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MKsh9O4Ee2O0cjNcmYJpQ" base_Element="_5MKshtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MKsiNO4Ee2O0cjNcmYJpQ" base_Element="_5MKshtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MKsidO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MKsitO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MKsi9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451U9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MKsjNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451VNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MKsjtO4Ee2O0cjNcmYJpQ" base_Element="_5MKsjdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MKsj9O4Ee2O0cjNcmYJpQ" base_Element="_5MKsjdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MKskNO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MKskdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MKsktO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451VdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MKsk9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451VtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MKsldO4Ee2O0cjNcmYJpQ" base_Element="_5MKslNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MLTkNO4Ee2O0cjNcmYJpQ" base_Element="_5MKslNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MLTkdO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MLTktO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MLTk9O4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451V9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MLTlNO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451WNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MLTltO4Ee2O0cjNcmYJpQ" base_Element="_5MLTldO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MLTl9O4Ee2O0cjNcmYJpQ" base_Element="_5MLTldO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MLTmNO4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MLTmdO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MLTmtO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451WdejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MLTm9O4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451WtejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MLTndO4Ee2O0cjNcmYJpQ" base_Element="_5MLTnNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MLTntO4Ee2O0cjNcmYJpQ" base_Element="_5MLTnNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MLTn9O4Ee2O0cjNcmYJpQ" name="Test"/>
    <annotations xmi:id="_5MLToNO4Ee2O0cjNcmYJpQ" name="Timeout">
      <annotationParameters xmi:id="_5MLTodO4Ee2O0cjNcmYJpQ" name="value" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451W9ejEe2IjMkQsyA0cQ" value="2"/>
      </annotationParameters>
      <annotationParameters xmi:id="_5MLTotO4Ee2O0cjNcmYJpQ" name="unit" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_C451XNejEe2IjMkQsyA0cQ" value="TimeUnit.SECONDS"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MO99tO4Ee2O0cjNcmYJpQ" base_Element="_5MO99NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MO999O4Ee2O0cjNcmYJpQ" base_Element="_5MO99NO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MO9-NO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MPlANO4Ee2O0cjNcmYJpQ" base_Element="_5MO9-9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MPlAdO4Ee2O0cjNcmYJpQ" base_Element="_5MO9-9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MPlAtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MPlBdO4Ee2O0cjNcmYJpQ" base_Element="_5MPlA9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MPlBtO4Ee2O0cjNcmYJpQ" base_Element="_5MPlA9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MPlB9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MPlDdO4Ee2O0cjNcmYJpQ" base_Element="_5MPlDNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MPlDtO4Ee2O0cjNcmYJpQ" base_Element="_5MPlDNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MQMENO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MQMEtO4Ee2O0cjNcmYJpQ" base_Element="_5MQMEdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MQME9O4Ee2O0cjNcmYJpQ" base_Element="_5MQMEdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MQMFNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MQMF9O4Ee2O0cjNcmYJpQ" base_Element="_5MQMFdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MQMGNO4Ee2O0cjNcmYJpQ" base_Element="_5MQMFdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MQMGdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MQMHNO4Ee2O0cjNcmYJpQ" base_Element="_5MQMGtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MQMHdO4Ee2O0cjNcmYJpQ" base_Element="_5MQMGtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MQMHtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5MQzItO4Ee2O0cjNcmYJpQ" base_Element="_5MQzINO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5MQzI9O4Ee2O0cjNcmYJpQ" base_Element="_5MQzINO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5MQzJNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5MQzJtO4Ee2O0cjNcmYJpQ" genericsValue="String, Integer" base_Element="_5MQzJdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QP7QdO4Ee2O0cjNcmYJpQ" base_Element="_5QP7QNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QQiUdO4Ee2O0cjNcmYJpQ" base_Element="_5QQiUNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QQiU9O4Ee2O0cjNcmYJpQ" base_Element="_5QQiUtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QRJYNO4Ee2O0cjNcmYJpQ" base_Element="_5QQiVNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QRJYtO4Ee2O0cjNcmYJpQ" base_Element="_5QRJYdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QSXgdO4Ee2O0cjNcmYJpQ" base_Element="_5QRwfNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QSXgtO4Ee2O0cjNcmYJpQ" base_Element="_5QRwfNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QSXg9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5QS-ltO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5QS-ldO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QTloNO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5QS-mNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QUzwNO4Ee2O0cjNcmYJpQ" genericsValue="String, Activation" base_Element="_5QUMsNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QWo8NO4Ee2O0cjNcmYJpQ" base_Element="_5QWB4NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QX3EdO4Ee2O0cjNcmYJpQ" base_Element="_5QXQDNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QX3EtO4Ee2O0cjNcmYJpQ" base_Element="_5QXQDNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QX3E9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5QZFMtO4Ee2O0cjNcmYJpQ" base_Element="_5QZFMdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QZsQ9O4Ee2O0cjNcmYJpQ" base_Element="_5QZsQNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QZsRNO4Ee2O0cjNcmYJpQ" base_Element="_5QZsQNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QZsRdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5QaTUdO4Ee2O0cjNcmYJpQ" base_Element="_5QaTUNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qa6YNO4Ee2O0cjNcmYJpQ" base_Element="_5QaTUtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qa6YtO4Ee2O0cjNcmYJpQ" base_Element="_5Qa6YdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qa6ZNO4Ee2O0cjNcmYJpQ" base_Element="_5Qa6Y9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qa6ZtO4Ee2O0cjNcmYJpQ" base_Element="_5Qa6ZdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qa6aNO4Ee2O0cjNcmYJpQ" base_Element="_5Qa6Z9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QbhcdO4Ee2O0cjNcmYJpQ" base_Element="_5QbhcNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QdWoNO4Ee2O0cjNcmYJpQ" genericsValue="String, Flow" base_Element="_5QcvkNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QdWotO4Ee2O0cjNcmYJpQ" genericsValue="Node, Activation" base_Element="_5QdWodO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QekwNO4Ee2O0cjNcmYJpQ" base_Element="_5Qd9udO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QekwtO4Ee2O0cjNcmYJpQ" base_Element="_5QekwdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QekxNO4Ee2O0cjNcmYJpQ" base_Element="_5Qekw9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QekxtO4Ee2O0cjNcmYJpQ" base_Element="_5QekxdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QfL0NO4Ee2O0cjNcmYJpQ" base_Element="_5Qekx9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QfL0tO4Ee2O0cjNcmYJpQ" base_Element="_5QfL0dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QfL1NO4Ee2O0cjNcmYJpQ" base_Element="_5QfL09O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QfL1tO4Ee2O0cjNcmYJpQ" base_Element="_5QfL1dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qfy5NO4Ee2O0cjNcmYJpQ" base_Element="_5Qfy49O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Qfy59O4Ee2O0cjNcmYJpQ" base_Element="_5Qfy5dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Qfy6NO4Ee2O0cjNcmYJpQ" base_Element="_5Qfy5dO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Qfy6dO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5QgZ8NO4Ee2O0cjNcmYJpQ" base_Element="_5Qfy6tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QgZ89O4Ee2O0cjNcmYJpQ" base_Element="_5QgZ8dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QgZ9NO4Ee2O0cjNcmYJpQ" base_Element="_5QgZ8dO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QgZ9dO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5QgZ99O4Ee2O0cjNcmYJpQ" base_Element="_5QgZ9tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QgZ-tO4Ee2O0cjNcmYJpQ" base_Element="_5QgZ-NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QgZ-9O4Ee2O0cjNcmYJpQ" base_Element="_5QgZ-NO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QgZ_NO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5QhBAdO4Ee2O0cjNcmYJpQ" base_Element="_5QhBANO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QhBBNO4Ee2O0cjNcmYJpQ" base_Element="_5QhBAtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QhBBdO4Ee2O0cjNcmYJpQ" base_Element="_5QhBAtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QhBBtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5QhBCNO4Ee2O0cjNcmYJpQ" base_Element="_5QhBB9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QhoENO4Ee2O0cjNcmYJpQ" base_Element="_5QhBCdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QhoEdO4Ee2O0cjNcmYJpQ" base_Element="_5QhBCdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QhoEtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5QhoFNO4Ee2O0cjNcmYJpQ" base_Element="_5QhoE9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QhoF9O4Ee2O0cjNcmYJpQ" base_Element="_5QhoFdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QhoGNO4Ee2O0cjNcmYJpQ" base_Element="_5QhoFdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QhoGdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5QiPIdO4Ee2O0cjNcmYJpQ" base_Element="_5QiPINO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QiPI9O4Ee2O0cjNcmYJpQ" base_Element="_5QiPItO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QiPJdO4Ee2O0cjNcmYJpQ" base_Element="_5QiPJNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qi2MNO4Ee2O0cjNcmYJpQ" base_Element="_5QiPJtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qi2MtO4Ee2O0cjNcmYJpQ" base_Element="_5Qi2MdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Qi2NNO4Ee2O0cjNcmYJpQ" base_Element="_5Qi2M9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QjdQdO4Ee2O0cjNcmYJpQ" base_Element="_5QjdQNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QjdQ9O4Ee2O0cjNcmYJpQ" base_Element="_5QjdQtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QkEVtO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5QkEVdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QkrYdO4Ee2O0cjNcmYJpQ" base_Element="_5QkrYNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Ql5g9O4Ee2O0cjNcmYJpQ" base_Element="_5Ql5gNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Ql5hNO4Ee2O0cjNcmYJpQ" base_Element="_5Ql5gNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Ql5hdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5QmglNO4Ee2O0cjNcmYJpQ" genericsValue="String, Node" base_Element="_5Qmgk9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QnusdO4Ee2O0cjNcmYJpQ" base_Element="_5QnusNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Qpj4tO4Ee2O0cjNcmYJpQ" base_Element="_5Qo81tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Qpj49O4Ee2O0cjNcmYJpQ" base_Element="_5Qo81tO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Qpj5NO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5QqK8dO4Ee2O0cjNcmYJpQ" genericsValue="ScheduleTime" base_Element="_5Qpj6dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5QqyCdO4Ee2O0cjNcmYJpQ" base_Element="_5QqyBtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5QqyCtO4Ee2O0cjNcmYJpQ" base_Element="_5QqyBtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5QqyC9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5QsAINO4Ee2O0cjNcmYJpQ" genericsValue="String,InstructionTimeSlot" base_Element="_5QrZENO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QsnNdO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5QsnMdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QtOQdO4Ee2O0cjNcmYJpQ" base_Element="_5QtOQNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QtOQ9O4Ee2O0cjNcmYJpQ" base_Element="_5QtOQtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QtORdO4Ee2O0cjNcmYJpQ" base_Element="_5QtORNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Qt1WNO4Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_5Qt1VtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QucYtO4Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_5QucYNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QucZdO4Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_5QucY9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5QvqgdO4Ee2O0cjNcmYJpQ" genericsValue="Double" base_Element="_5QvqgNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Qvqg9O4Ee2O0cjNcmYJpQ" genericsValue="Double,ReliabilityRow" base_Element="_5QvqgtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5QxfsdO4Ee2O0cjNcmYJpQ" base_Element="_5QxfsNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Q1KEdO4Ee2O0cjNcmYJpQ" genericsValue="Activation,Row&lt;Activation>" base_Element="_5Q1KENO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Q1xJdO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5Q1xIdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q2YMdO4Ee2O0cjNcmYJpQ" base_Element="_5Q2YMNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q2_QdO4Ee2O0cjNcmYJpQ" base_Element="_5Q2_QNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q2_Q9O4Ee2O0cjNcmYJpQ" base_Element="_5Q2_QtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q6CktO4Ee2O0cjNcmYJpQ" base_Element="_5Q6CkdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q6podO4Ee2O0cjNcmYJpQ" base_Element="_5Q6poNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q6po9O4Ee2O0cjNcmYJpQ" base_Element="_5Q6potO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q6ppdO4Ee2O0cjNcmYJpQ" base_Element="_5Q6ppNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q7QsNO4Ee2O0cjNcmYJpQ" base_Element="_5Q6pptO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Q9s8NO4Ee2O0cjNcmYJpQ" base_Element="_5Q9F4NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Q9s89O4Ee2O0cjNcmYJpQ" base_Element="_5Q9s8dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Q9s9NO4Ee2O0cjNcmYJpQ" base_Element="_5Q9s8dO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Q9s9dO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Q-UANO4Ee2O0cjNcmYJpQ" base_Element="_5Q9s9tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Q-UAdO4Ee2O0cjNcmYJpQ" base_Element="_5Q9s9tO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Q-UAtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5Q-UBNO4Ee2O0cjNcmYJpQ" base_Element="_5Q-UA9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Q-UB9O4Ee2O0cjNcmYJpQ" base_Element="_5Q-UBdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Q-UCNO4Ee2O0cjNcmYJpQ" base_Element="_5Q-UBdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Q-UCdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5Q-7ENO4Ee2O0cjNcmYJpQ" base_Element="_5Q-UCtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Q-7E9O4Ee2O0cjNcmYJpQ" base_Element="_5Q-7EdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Q-7FNO4Ee2O0cjNcmYJpQ" base_Element="_5Q-7EdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Q-7FdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5Q-7F9O4Ee2O0cjNcmYJpQ" base_Element="_5Q-7FtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Q_iItO4Ee2O0cjNcmYJpQ" base_Element="_5Q_iINO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Q_iI9O4Ee2O0cjNcmYJpQ" base_Element="_5Q_iINO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Q_iJNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5Q_iJtO4Ee2O0cjNcmYJpQ" base_Element="_5Q_iJdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Q_iKdO4Ee2O0cjNcmYJpQ" base_Element="_5Q_iJ9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RAJMNO4Ee2O0cjNcmYJpQ" base_Element="_5Q_iJ9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RAJMdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5RAJM9O4Ee2O0cjNcmYJpQ" base_Element="_5RAJMtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RAJNtO4Ee2O0cjNcmYJpQ" base_Element="_5RAJNNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RAJN9O4Ee2O0cjNcmYJpQ" base_Element="_5RAJNNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RAJONO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5RDMgdO4Ee2O0cjNcmYJpQ" base_Element="_5RDMgNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RDMg9O4Ee2O0cjNcmYJpQ" base_Element="_5RDMgtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RDzkNO4Ee2O0cjNcmYJpQ" base_Element="_5RDMhNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RGP0NO4Ee2O0cjNcmYJpQ" base_Element="_5RFowNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RGP0tO4Ee2O0cjNcmYJpQ" base_Element="_5RGP0dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RJ6OdO4Ee2O0cjNcmYJpQ" base_Element="_5RJ6N9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RKhQNO4Ee2O0cjNcmYJpQ" base_Element="_5RJ6N9O4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RKhQdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RKhRNO4Ee2O0cjNcmYJpQ" base_Element="_5RKhQtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RKhRdO4Ee2O0cjNcmYJpQ" base_Element="_5RKhQtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RKhRtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5RKhSNO4Ee2O0cjNcmYJpQ" base_Element="_5RKhR9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RLIUNO4Ee2O0cjNcmYJpQ" base_Element="_5RKhSdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RLIUdO4Ee2O0cjNcmYJpQ" base_Element="_5RKhSdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RLIUtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5RLIVNO4Ee2O0cjNcmYJpQ" base_Element="_5RLIU9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RLIV9O4Ee2O0cjNcmYJpQ" base_Element="_5RLIVdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RLIWNO4Ee2O0cjNcmYJpQ" base_Element="_5RLIVdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RLIWdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5RLvYdO4Ee2O0cjNcmYJpQ" base_Element="_5RLvYNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RLvZNO4Ee2O0cjNcmYJpQ" base_Element="_5RLvYtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RLvZdO4Ee2O0cjNcmYJpQ" base_Element="_5RLvYtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RLvZtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5RLvaNO4Ee2O0cjNcmYJpQ" base_Element="_5RLvZ9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RMWctO4Ee2O0cjNcmYJpQ" base_Element="_5RMWcNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RMWc9O4Ee2O0cjNcmYJpQ" base_Element="_5RMWcNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RMWdNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RMWd9O4Ee2O0cjNcmYJpQ" base_Element="_5RMWddO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RMWeNO4Ee2O0cjNcmYJpQ" base_Element="_5RMWddO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RMWedO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RMWfNO4Ee2O0cjNcmYJpQ" base_Element="_5RMWetO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RM9gNO4Ee2O0cjNcmYJpQ" base_Element="_5RMWetO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RM9gdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RM9hNO4Ee2O0cjNcmYJpQ" base_Element="_5RM9gtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RM9hdO4Ee2O0cjNcmYJpQ" base_Element="_5RM9gtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RM9htO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5RNkkdO4Ee2O0cjNcmYJpQ" base_Element="_5RNkkNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RNkk9O4Ee2O0cjNcmYJpQ" base_Element="_5RNkktO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RNkldO4Ee2O0cjNcmYJpQ" base_Element="_5RNklNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5ROLoNO4Ee2O0cjNcmYJpQ" base_Element="_5RNkltO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5ROLotO4Ee2O0cjNcmYJpQ" base_Element="_5ROLodO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RZx0dO4Ee2O0cjNcmYJpQ" genericsValue="T, E" base_Element="_5RZx0NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RaY4tO4Ee2O0cjNcmYJpQ" base_Element="_5RaY4dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RaY5NO4Ee2O0cjNcmYJpQ" genericsValue="Activation" base_Element="_5RaY49O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Ra_8tO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5Ra_8dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RbnANO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5Ra_9NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RbnA9O4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5RbnAtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RcOEdO4Ee2O0cjNcmYJpQ" genericsValue="ScheduleTime" base_Element="_5RcOENO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Rc1IdO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5Rc1INO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5ReDQNO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5RdcM9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5ReDQdO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5RdcNNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5ReqUNO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5ReDRNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5ReqVNO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5ReqUtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RfRYdO4Ee2O0cjNcmYJpQ" genericsValue="Activation" base_Element="_5RfRYNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Rf4cdO4Ee2O0cjNcmYJpQ" base_Element="_5RfRYtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Rf4ctO4Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_5RfRY9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Rf4c9O4Ee2O0cjNcmYJpQ" base_Element="_5RfRYtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Rf4dNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5Rf4dtO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5Rf4ddO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RgfgdO4Ee2O0cjNcmYJpQ" base_Element="_5RgfgNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RgfhtO4Ee2O0cjNcmYJpQ" base_Element="_5RgfgtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Rgfh9O4Ee2O0cjNcmYJpQ" base_Element="_5RgfgtO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RgfiNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5RhGkdO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5RhGkNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RhGk9O4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5RhGktO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RiUsNO4Ee2O0cjNcmYJpQ" genericsValue="Flow" base_Element="_5RhtoNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Ri7wtO4Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_5Ri7wdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Ri7xdO4Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_5Ri7xNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5Rkw8dO4Ee2O0cjNcmYJpQ" base_Element="_5Rkw8NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RlYAdO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5RlYANO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Rl_FNO4Ee2O0cjNcmYJpQ" base_Element="_5Rl_ENO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Rl_FdO4Ee2O0cjNcmYJpQ" base_Element="_5Rl_ENO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Rl_FtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5Rl_GNO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5Rl_F9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RmmJNO4Ee2O0cjNcmYJpQ" base_Element="_5RmmINO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RmmJdO4Ee2O0cjNcmYJpQ" base_Element="_5RmmINO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RmmJtO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5RmmKNO4Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_5RmmJ9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Rn0QNO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5RnNMNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Rn0RdO4Ee2O0cjNcmYJpQ" base_Element="_5Rn0QdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Rn0RtO4Ee2O0cjNcmYJpQ" base_Element="_5Rn0QdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5Rn0R9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5RobVdO4Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_5RobU9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5RpCYtO4Ee2O0cjNcmYJpQ" base_Element="_5RobVtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RpCY9O4Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_5RobV9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RppcdO4Ee2O0cjNcmYJpQ" base_Element="_5RppcNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RqQgNO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5RppdtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5RqQhdO4Ee2O0cjNcmYJpQ" base_Element="_5RqQgdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5RqQhtO4Ee2O0cjNcmYJpQ" base_Element="_5RqQgdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RqQh9O4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5Rq3kdO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5Rq3kNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Rq3ltO4Ee2O0cjNcmYJpQ" base_Element="_5Rq3ktO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5Rq3l9O4Ee2O0cjNcmYJpQ" base_Element="_5Rq3ktO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5RreoNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5RreotO4Ee2O0cjNcmYJpQ" base_Element="_5RreodO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Rt64NO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5RtT3NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Rt65tO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5Rt64tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Ruh9tO4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5Ruh8dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5Ruh99O4Ee2O0cjNcmYJpQ" genericsValue="T" base_Element="_5Ruh8tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RvwEdO4Ee2O0cjNcmYJpQ" genericsValue="E" base_Element="_5RvwENO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RwXIdO4Ee2O0cjNcmYJpQ" base_Element="_5RwXINO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RwXKtO4Ee2O0cjNcmYJpQ" base_Element="_5RwXKdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_5Rw-MNO4Ee2O0cjNcmYJpQ" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_5RwXNtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Rw-MdO4Ee2O0cjNcmYJpQ" base_Element="_5RwXNtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5RyzYdO4Ee2O0cjNcmYJpQ" base_Element="_5RyzYNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Rzac9O4Ee2O0cjNcmYJpQ" base_Element="_5RzacNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5RzadNO4Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_5RzacdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Annotations xmi:id="_5R0BgNO4Ee2O0cjNcmYJpQ" base_Element="_5RzacNO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5R0BgdO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5R0Bg9O4Ee2O0cjNcmYJpQ" base_Element="_5R0BgtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5R4S8dO4Ee2O0cjNcmYJpQ" base_Element="_5R4S8NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5R_Ao9O4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5R_AotO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5R_nsdO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5R_nsNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5R_ns9O4Ee2O0cjNcmYJpQ" genericsValue="ScheduleTime" base_Element="_5R_nstO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SAOw9O4Ee2O0cjNcmYJpQ" base_Element="_5SAOwtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SAOxdO4Ee2O0cjNcmYJpQ" base_Element="_5SAOxNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SAOx9O4Ee2O0cjNcmYJpQ" base_Element="_5SAOxtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SA109O4Ee2O0cjNcmYJpQ" base_Element="_5SA10tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SA11dO4Ee2O0cjNcmYJpQ" base_Element="_5SA11NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SA12dO4Ee2O0cjNcmYJpQ" base_Element="_5SA12NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SA129O4Ee2O0cjNcmYJpQ" base_Element="_5SA12tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SBc4NO4Ee2O0cjNcmYJpQ" genericsValue="ChannelSet" base_Element="_5SA13NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SBc4dO4Ee2O0cjNcmYJpQ" base_Element="_5SA13NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SBc5dO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5SBc5NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SBc5tO4Ee2O0cjNcmYJpQ" base_Element="_5SBc5NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SCD8NO4Ee2O0cjNcmYJpQ" base_Element="_5SBc59O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SCD8tO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5SCD8dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SCD89O4Ee2O0cjNcmYJpQ" base_Element="_5SCD8dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SCD9dO4Ee2O0cjNcmYJpQ" base_Element="_5SCD9NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SCD99O4Ee2O0cjNcmYJpQ" base_Element="_5SCD9tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SCrAdO4Ee2O0cjNcmYJpQ" base_Element="_5SCrANO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SCrA9O4Ee2O0cjNcmYJpQ" base_Element="_5SCrAtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SCrBdO4Ee2O0cjNcmYJpQ" base_Element="_5SCrBNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SCrB9O4Ee2O0cjNcmYJpQ" base_Element="_5SCrBtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SD5INO4Ee2O0cjNcmYJpQ" base_Element="_5SDSGtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SD5L9O4Ee2O0cjNcmYJpQ" base_Element="_5SD5LdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SEgMNO4Ee2O0cjNcmYJpQ" base_Element="_5SD5MNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SEgMtO4Ee2O0cjNcmYJpQ" base_Element="_5SEgMdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SEgNNO4Ee2O0cjNcmYJpQ" genericsValue="Node" base_Element="_5SEgM9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SEgNdO4Ee2O0cjNcmYJpQ" base_Element="_5SEgM9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SEgN9O4Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_5SEgNtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SEgONO4Ee2O0cjNcmYJpQ" base_Element="_5SEgNtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SFHQNO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5SEgOdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SFHQdO4Ee2O0cjNcmYJpQ" base_Element="_5SEgOdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SFHQ9O4Ee2O0cjNcmYJpQ" base_Element="_5SFHQtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SFHRdO4Ee2O0cjNcmYJpQ" base_Element="_5SFHRNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SFuV9O4Ee2O0cjNcmYJpQ" base_Element="_5SFuVtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SFuWdO4Ee2O0cjNcmYJpQ" base_Element="_5SFuWNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SFuW9O4Ee2O0cjNcmYJpQ" base_Element="_5SFuWtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SFuXdO4Ee2O0cjNcmYJpQ" base_Element="_5SFuXNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SGVYNO4Ee2O0cjNcmYJpQ" base_Element="_5SFuXtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SGVYtO4Ee2O0cjNcmYJpQ" base_Element="_5SGVYdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SGVZNO4Ee2O0cjNcmYJpQ" base_Element="_5SGVY9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SGVZtO4Ee2O0cjNcmYJpQ" base_Element="_5SGVZdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SG8cdO4Ee2O0cjNcmYJpQ" base_Element="_5SG8cNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SG8ddO4Ee2O0cjNcmYJpQ" base_Element="_5SG8dNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SG8eNO4Ee2O0cjNcmYJpQ" base_Element="_5SG8d9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SG8e9O4Ee2O0cjNcmYJpQ" base_Element="_5SG8edO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SHjhNO4Ee2O0cjNcmYJpQ" base_Element="_5SHjgtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SHjhtO4Ee2O0cjNcmYJpQ" base_Element="_5SHjhdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SHjidO4Ee2O0cjNcmYJpQ" base_Element="_5SHjiNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SHji9O4Ee2O0cjNcmYJpQ" base_Element="_5SHjitO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SIKkNO4Ee2O0cjNcmYJpQ" base_Element="_5SHjjNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SIKktO4Ee2O0cjNcmYJpQ" base_Element="_5SIKkdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SIKlNO4Ee2O0cjNcmYJpQ" genericsValue="String, Integer" base_Element="_5SIKk9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SIKldO4Ee2O0cjNcmYJpQ" base_Element="_5SIKk9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SIxoNO4Ee2O0cjNcmYJpQ" base_Element="_5SIKmtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SIxotO4Ee2O0cjNcmYJpQ" base_Element="_5SIxodO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SIxqNO4Ee2O0cjNcmYJpQ" genericsValue="Edge" base_Element="_5SIxp9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SJYu9O4Ee2O0cjNcmYJpQ" base_Element="_5SJYutO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SJ_wdO4Ee2O0cjNcmYJpQ" base_Element="_5SJ_wNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SJ_xtO4Ee2O0cjNcmYJpQ" base_Element="_5SJ_wtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SJ_y9O4Ee2O0cjNcmYJpQ" base_Element="_5SJ_x9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SJ_zdO4Ee2O0cjNcmYJpQ" base_Element="_5SJ_zNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SKm0NO4Ee2O0cjNcmYJpQ" genericsValue="Activation" base_Element="_5SJ_ztO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SKm0dO4Ee2O0cjNcmYJpQ" base_Element="_5SJ_ztO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SKm09O4Ee2O0cjNcmYJpQ" genericsValue="String, Integer" base_Element="_5SKm0tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SKm1NO4Ee2O0cjNcmYJpQ" base_Element="_5SKm0tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SKm1tO4Ee2O0cjNcmYJpQ" base_Element="_5SKm1dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SLN5dO4Ee2O0cjNcmYJpQ" base_Element="_5SLN5NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SLN59O4Ee2O0cjNcmYJpQ" base_Element="_5SLN5tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SLN6dO4Ee2O0cjNcmYJpQ" base_Element="_5SLN6NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SL0-9O4Ee2O0cjNcmYJpQ" base_Element="_5SL0-dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SL0_tO4Ee2O0cjNcmYJpQ" base_Element="_5SL0_NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SMcAdO4Ee2O0cjNcmYJpQ" base_Element="_5SL0_9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SMcBNO4Ee2O0cjNcmYJpQ" base_Element="_5SMcAtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SNDEdO4Ee2O0cjNcmYJpQ" base_Element="_5SNDENO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SNDE9O4Ee2O0cjNcmYJpQ" base_Element="_5SNDEtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SNDF9O4Ee2O0cjNcmYJpQ" base_Element="_5SNDFtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SNDGdO4Ee2O0cjNcmYJpQ" base_Element="_5SNDGNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SNqJ9O4Ee2O0cjNcmYJpQ" base_Element="_5SNqJtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SNqKdO4Ee2O0cjNcmYJpQ" base_Element="_5SNqKNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SNqK9O4Ee2O0cjNcmYJpQ" base_Element="_5SNqKtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SORNdO4Ee2O0cjNcmYJpQ" base_Element="_5SORNNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SORN9O4Ee2O0cjNcmYJpQ" base_Element="_5SORNtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SOROtO4Ee2O0cjNcmYJpQ" base_Element="_5SORONO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SORPNO4Ee2O0cjNcmYJpQ" base_Element="_5SORO9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SO4QdO4Ee2O0cjNcmYJpQ" base_Element="_5SO4QNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SO4Q9O4Ee2O0cjNcmYJpQ" base_Element="_5SO4QtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SO4RdO4Ee2O0cjNcmYJpQ" base_Element="_5SO4RNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SO4R9O4Ee2O0cjNcmYJpQ" base_Element="_5SO4RtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQGYNO4Ee2O0cjNcmYJpQ" base_Element="_5SPfWNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQGYtO4Ee2O0cjNcmYJpQ" base_Element="_5SQGYdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQGZNO4Ee2O0cjNcmYJpQ" base_Element="_5SQGY9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQGZtO4Ee2O0cjNcmYJpQ" base_Element="_5SQGZdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQGaNO4Ee2O0cjNcmYJpQ" base_Element="_5SQGZ9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQGatO4Ee2O0cjNcmYJpQ" base_Element="_5SQGadO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQtcNO4Ee2O0cjNcmYJpQ" base_Element="_5SQGa9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQtc9O4Ee2O0cjNcmYJpQ" base_Element="_5SQtcdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQtdtO4Ee2O0cjNcmYJpQ" base_Element="_5SQtdNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SQteNO4Ee2O0cjNcmYJpQ" base_Element="_5SQtd9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SRUgdO4Ee2O0cjNcmYJpQ" base_Element="_5SRUgNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SRUg9O4Ee2O0cjNcmYJpQ" base_Element="_5SRUgtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SRUhdO4Ee2O0cjNcmYJpQ" base_Element="_5SRUhNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Array xmi:id="_5SRUitO4Ee2O0cjNcmYJpQ" dimensions="2" base_Element="_5SRUiNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SRUi9O4Ee2O0cjNcmYJpQ" base_Element="_5SRUiNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SSioNO4Ee2O0cjNcmYJpQ" base_Element="_5SR7nNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SSiotO4Ee2O0cjNcmYJpQ" base_Element="_5SSiodO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SSipNO4Ee2O0cjNcmYJpQ" base_Element="_5SSio9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SSiptO4Ee2O0cjNcmYJpQ" base_Element="_5SSipdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SSiqNO4Ee2O0cjNcmYJpQ" base_Element="_5SSip9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SSiqtO4Ee2O0cjNcmYJpQ" base_Element="_5SSiqdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SSirNO4Ee2O0cjNcmYJpQ" base_Element="_5SSiq9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STJsNO4Ee2O0cjNcmYJpQ" base_Element="_5SSirdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STJstO4Ee2O0cjNcmYJpQ" base_Element="_5STJsdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STJtNO4Ee2O0cjNcmYJpQ" base_Element="_5STJs9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STJttO4Ee2O0cjNcmYJpQ" base_Element="_5STJtdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STJuNO4Ee2O0cjNcmYJpQ" base_Element="_5STJt9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STJutO4Ee2O0cjNcmYJpQ" base_Element="_5STJudO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STJvNO4Ee2O0cjNcmYJpQ" base_Element="_5STJu9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STwwtO4Ee2O0cjNcmYJpQ" base_Element="_5STwwNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STwxNO4Ee2O0cjNcmYJpQ" base_Element="_5STww9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STwxtO4Ee2O0cjNcmYJpQ" base_Element="_5STwxdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5STwyNO4Ee2O0cjNcmYJpQ" base_Element="_5STwx9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SUX39O4Ee2O0cjNcmYJpQ" base_Element="_5SUX3dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SU-4tO4Ee2O0cjNcmYJpQ" base_Element="_5SU-4dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SU-5NO4Ee2O0cjNcmYJpQ" genericsValue="InstructionParameters" base_Element="_5SU-49O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SU-5dO4Ee2O0cjNcmYJpQ" base_Element="_5SU-49O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SU-59O4Ee2O0cjNcmYJpQ" base_Element="_5SU-5tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SVl8dO4Ee2O0cjNcmYJpQ" base_Element="_5SVl8NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SVl89O4Ee2O0cjNcmYJpQ" base_Element="_5SVl8tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SVl9dO4Ee2O0cjNcmYJpQ" base_Element="_5SVl9NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SWNANO4Ee2O0cjNcmYJpQ" base_Element="_5SVl9tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SWNAtO4Ee2O0cjNcmYJpQ" base_Element="_5SWNAdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SWNBNO4Ee2O0cjNcmYJpQ" base_Element="_5SWNA9O4Ee2O0cjNcmYJpQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5SWNBdO4Ee2O0cjNcmYJpQ" name="getNumChannels" method="_5StZZtO4Ee2O0cjNcmYJpQ">
      <ownedParameter xmi:id="_5SWNBtO4Ee2O0cjNcmYJpQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5SWNB9O4Ee2O0cjNcmYJpQ" base_Element="_5SWNBdO4Ee2O0cjNcmYJpQ">
    <annotations xmi:id="_5SWNCNO4Ee2O0cjNcmYJpQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SWNC9O4Ee2O0cjNcmYJpQ" base_Element="_5SWNCdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SW0ENO4Ee2O0cjNcmYJpQ" base_Element="_5SWNDNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SXbJdO4Ee2O0cjNcmYJpQ" base_Element="_5SXbI9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SXbKtO4Ee2O0cjNcmYJpQ" base_Element="_5SXbKNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SYCMNO4Ee2O0cjNcmYJpQ" base_Element="_5SXbLdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SYCMtO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5SYCMdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SYCNdO4Ee2O0cjNcmYJpQ" genericsValue="String" base_Element="_5SYCNNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SZQU9O4Ee2O0cjNcmYJpQ" base_Element="_5SZQUtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SZQWNO4Ee2O0cjNcmYJpQ" base_Element="_5SZQV9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SZQWtO4Ee2O0cjNcmYJpQ" base_Element="_5SZQWdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SZQXNO4Ee2O0cjNcmYJpQ" base_Element="_5SZQW9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SZ3ZNO4Ee2O0cjNcmYJpQ" genericsValue="Integer" base_Element="_5SZ3Y9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SZ3ZdO4Ee2O0cjNcmYJpQ" base_Element="_5SZ3Y9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_5SaecdO4Ee2O0cjNcmYJpQ" genericsValue="SchedulableObject" base_Element="_5SaecNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SbFgNO4Ee2O0cjNcmYJpQ" base_Element="_5SaectO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SbFgtO4Ee2O0cjNcmYJpQ" base_Element="_5SbFgdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Sbsl9O4Ee2O0cjNcmYJpQ" base_Element="_5SbsltO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SbsmdO4Ee2O0cjNcmYJpQ" base_Element="_5SbsmNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Sbsm9O4Ee2O0cjNcmYJpQ" base_Element="_5SbsmtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5SbsndO4Ee2O0cjNcmYJpQ" base_Element="_5SbsnNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ScToNO4Ee2O0cjNcmYJpQ" base_Element="_5SbsntO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ScTotO4Ee2O0cjNcmYJpQ" base_Element="_5ScTodO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ScTpNO4Ee2O0cjNcmYJpQ" base_Element="_5ScTo9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ScTptO4Ee2O0cjNcmYJpQ" base_Element="_5ScTpdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ScTqNO4Ee2O0cjNcmYJpQ" base_Element="_5ScTp9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ScTqtO4Ee2O0cjNcmYJpQ" base_Element="_5ScTqdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ScTrNO4Ee2O0cjNcmYJpQ" base_Element="_5ScTq9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Sc6sdO4Ee2O0cjNcmYJpQ" base_Element="_5Sc6sNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Sc6s9O4Ee2O0cjNcmYJpQ" base_Element="_5Sc6stO4Ee2O0cjNcmYJpQ"/>
  <uml:OpaqueBehavior xmi:id="_5StZZtO4Ee2O0cjNcmYJpQ" name="getNumChannels" specification="_5SWNBdO4Ee2O0cjNcmYJpQ">
    <ownedParameter xmi:id="_5StZZ9O4Ee2O0cjNcmYJpQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_5TFM0tO4Ee2O0cjNcmYJpQ" base_Element="_5TFM0NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TFM1dO4Ee2O0cjNcmYJpQ" base_Element="_5TFM09O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TFz4NO4Ee2O0cjNcmYJpQ" base_Element="_5TFM1tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TFz49O4Ee2O0cjNcmYJpQ" base_Element="_5TFz4dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TFz5tO4Ee2O0cjNcmYJpQ" base_Element="_5TFz5NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TFz6dO4Ee2O0cjNcmYJpQ" base_Element="_5TFz59O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TGa8NO4Ee2O0cjNcmYJpQ" base_Element="_5TFz6tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TGa89O4Ee2O0cjNcmYJpQ" base_Element="_5TGa8dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TGa9tO4Ee2O0cjNcmYJpQ" base_Element="_5TGa9NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TGa-dO4Ee2O0cjNcmYJpQ" base_Element="_5TGa99O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5THCANO4Ee2O0cjNcmYJpQ" base_Element="_5TGa-tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5THCA9O4Ee2O0cjNcmYJpQ" base_Element="_5THCAdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5THCBtO4Ee2O0cjNcmYJpQ" base_Element="_5THCBNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5THCCdO4Ee2O0cjNcmYJpQ" base_Element="_5THCB9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5THpENO4Ee2O0cjNcmYJpQ" base_Element="_5THCCtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5THpE9O4Ee2O0cjNcmYJpQ" base_Element="_5THpEdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5THpFtO4Ee2O0cjNcmYJpQ" base_Element="_5THpFNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TIQINO4Ee2O0cjNcmYJpQ" base_Element="_5THpF9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TIQI9O4Ee2O0cjNcmYJpQ" base_Element="_5TIQIdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TIQJtO4Ee2O0cjNcmYJpQ" base_Element="_5TIQJNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TIQKdO4Ee2O0cjNcmYJpQ" base_Element="_5TIQJ9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TI3MNO4Ee2O0cjNcmYJpQ" base_Element="_5TIQKtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TI3M9O4Ee2O0cjNcmYJpQ" base_Element="_5TI3MdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TI3NtO4Ee2O0cjNcmYJpQ" base_Element="_5TI3NNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TI3OdO4Ee2O0cjNcmYJpQ" base_Element="_5TI3N9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TJeQNO4Ee2O0cjNcmYJpQ" base_Element="_5TI3OtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TJeQ9O4Ee2O0cjNcmYJpQ" base_Element="_5TJeQdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TJeRtO4Ee2O0cjNcmYJpQ" base_Element="_5TJeRNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TKFUNO4Ee2O0cjNcmYJpQ" base_Element="_5TJeR9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TKFU9O4Ee2O0cjNcmYJpQ" base_Element="_5TKFUdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TKFVtO4Ee2O0cjNcmYJpQ" base_Element="_5TKFVNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TKFWdO4Ee2O0cjNcmYJpQ" base_Element="_5TKFV9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TKsYNO4Ee2O0cjNcmYJpQ" base_Element="_5TKFWtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TKsY9O4Ee2O0cjNcmYJpQ" base_Element="_5TKsYdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TKsZtO4Ee2O0cjNcmYJpQ" base_Element="_5TKsZNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TKsadO4Ee2O0cjNcmYJpQ" base_Element="_5TKsZ9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TLTctO4Ee2O0cjNcmYJpQ" base_Element="_5TLTcNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TLTddO4Ee2O0cjNcmYJpQ" base_Element="_5TLTc9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TLTeNO4Ee2O0cjNcmYJpQ" base_Element="_5TLTdtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TL6gNO4Ee2O0cjNcmYJpQ" base_Element="_5TLTedO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TL6g9O4Ee2O0cjNcmYJpQ" base_Element="_5TL6gdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TL6htO4Ee2O0cjNcmYJpQ" base_Element="_5TL6hNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TL6idO4Ee2O0cjNcmYJpQ" base_Element="_5TL6h9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TMhkNO4Ee2O0cjNcmYJpQ" base_Element="_5TL6itO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TMhk9O4Ee2O0cjNcmYJpQ" base_Element="_5TMhkdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TMhltO4Ee2O0cjNcmYJpQ" base_Element="_5TMhlNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TMhmdO4Ee2O0cjNcmYJpQ" base_Element="_5TMhl9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TNIotO4Ee2O0cjNcmYJpQ" base_Element="_5TNIoNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TNIpdO4Ee2O0cjNcmYJpQ" base_Element="_5TNIo9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TNIqNO4Ee2O0cjNcmYJpQ" base_Element="_5TNIptO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TNvsNO4Ee2O0cjNcmYJpQ" base_Element="_5TNIqdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TNvs9O4Ee2O0cjNcmYJpQ" base_Element="_5TNvsdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TNvttO4Ee2O0cjNcmYJpQ" base_Element="_5TNvtNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TNvudO4Ee2O0cjNcmYJpQ" base_Element="_5TNvt9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TOWwtO4Ee2O0cjNcmYJpQ" base_Element="_5TOWwNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TOWxdO4Ee2O0cjNcmYJpQ" base_Element="_5TOWw9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TOWyNO4Ee2O0cjNcmYJpQ" base_Element="_5TOWxtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TO90NO4Ee2O0cjNcmYJpQ" base_Element="_5TOWydO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TO909O4Ee2O0cjNcmYJpQ" base_Element="_5TO90dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TO91tO4Ee2O0cjNcmYJpQ" base_Element="_5TO91NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TO92dO4Ee2O0cjNcmYJpQ" base_Element="_5TO919O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TPk4NO4Ee2O0cjNcmYJpQ" base_Element="_5TO92tO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TPk49O4Ee2O0cjNcmYJpQ" base_Element="_5TPk4dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TPk5tO4Ee2O0cjNcmYJpQ" base_Element="_5TPk5NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TQL8NO4Ee2O0cjNcmYJpQ" base_Element="_5TPk59O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TQL89O4Ee2O0cjNcmYJpQ" base_Element="_5TQL8dO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TQL9tO4Ee2O0cjNcmYJpQ" base_Element="_5TQL9NO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TQzANO4Ee2O0cjNcmYJpQ" base_Element="_5TQL99O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TQzA9O4Ee2O0cjNcmYJpQ" base_Element="_5TQzAdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TQzBtO4Ee2O0cjNcmYJpQ" base_Element="_5TQzBNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TQzCdO4Ee2O0cjNcmYJpQ" base_Element="_5TQzB9O4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TRaENO4Ee2O0cjNcmYJpQ" base_Element="_5TQzCtO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TRaE9O4Ee2O0cjNcmYJpQ" base_Element="_5TRaEdO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Reference xmi:id="_5TRaFtO4Ee2O0cjNcmYJpQ" base_Element="_5TRaFNO4Ee2O0cjNcmYJpQ"/>
  <UMLLabProfile:Generics xmi:id="_DTYx0tejEe2IjMkQsyA0cQ" genericsValue="String" base_Element="_DTYKwtejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Generics xmi:id="_DTZY4tejEe2IjMkQsyA0cQ" genericsValue="String" base_Element="_DTZY4dejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Generics xmi:id="_DTZ_8NejEe2IjMkQsyA0cQ" genericsValue="String" base_Element="_DTZY5NejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Generics xmi:id="_DTanANejEe2IjMkQsyA0cQ" genericsValue="String" base_Element="_DTZ_8tejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Array xmi:id="_DTgtpdejEe2IjMkQsyA0cQ" base_Element="_DTgtotejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Reference xmi:id="_DTs64NejEe2IjMkQsyA0cQ" base_Element="_DTsT0NejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DTuJAdejEe2IjMkQsyA0cQ" base_Element="_DTuJANejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Reference xmi:id="_DTyacNejEe2IjMkQsyA0cQ" base_Element="_DTxzYNejEe2IjMkQsyA0cQ"/>
  <UMLLabProfile:Patch xmi:id="_EnVF8NejEe2IjMkQsyA0cQ" base_Element="_5K0ot9O4Ee2O0cjNcmYJpQ" patchText="@@ -359,12 +359,8 @@&#xA; tate&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_EnWUENejEe2IjMkQsyA0cQ" base_Element="_5LCEHtO4Ee2O0cjNcmYJpQ" patchText="@@ -192,22 +192,25 @@&#xA; is %7B%0D%0A%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_EnXiMNejEe2IjMkQsyA0cQ" base_Element="_5Lf-JdO4Ee2O0cjNcmYJpQ" patchText="@@ -117,12 +117,8 @@&#xA; ices&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_EnZXYNejEe2IjMkQsyA0cQ" base_Element="_5LjBcNO4Ee2O0cjNcmYJpQ" patchText="@@ -145,28 +145,24 @@&#xA; ystemChoices&#xA;-()()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -288,12 +288,8 @@&#xA; ices&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_EnbMkNejEe2IjMkQsyA0cQ" base_Element="_5LsLYNO4Ee2O0cjNcmYJpQ" patchText="@@ -136,122 +136,8 @@&#xA;  */%0D&#xA;-%0Aimport edu.uiowa.cs.warp.WarpDSL.InstructionParameters;%0D%0Aimport edu.uiowa.cs.warp.WarpDSL.InstructionParameters;%0D&#xA; %0A%0D%0Ai&#xA;" conflicting="false"/>
</xmi:XMI>

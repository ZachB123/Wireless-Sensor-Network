<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_oG-a8M3KEe2aPrCP15OoQw" name="WorkLoad">
    <eAnnotations xmi:id="_oMd-8M3KEe2aPrCP15OoQw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_oMd-8c3KEe2aPrCP15OoQw" source="codegen">
        <details xmi:id="_oMd-8s3KEe2aPrCP15OoQw" key="codegenDirectory" value="/cs2820-spring23/src"/>
        <details xmi:id="_of4DIM3KEe2aPrCP15OoQw" key="AssociatedSourceCode" value="/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoad.java;1306107233/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_ocuogM3KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_ocvPkM3KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_ocvPkc3KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_ocvPks3KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_ocvPk83KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_ocvPlM3KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_ocvPlc3KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_ocvPls3KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_ocvPl83KEe2aPrCP15OoQw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_ocew4M3KEe2aPrCP15OoQw" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_ocew4c3KEe2aPrCP15OoQw" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_ocew4s3KEe2aPrCP15OoQw" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_ocew483KEe2aPrCP15OoQw" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_odWTkM3KEe2aPrCP15OoQw" name="Utilities"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ocibQM3KEe2aPrCP15OoQw" name="warp">
            <packagedElement xmi:type="uml:Class" xmi:id="_ocszUM3KEe2aPrCP15OoQw" name="WorkLoad">
              <ownedComment xmi:id="_odzmkM3KEe2aPrCP15OoQw">
                <body>Build the nodes and flows for the workload described in the workload&#xD;
description file, whose name is passed into the Constructor via the parameter&#xD;
inputFileName. Good default values for the constructors are m = 0.9, e2e =&#xD;
0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_odmyQM3KEe2aPrCP15OoQw" general="_odgroM3KEe2aPrCP15OoQw"/>
              <ownedAttribute xmi:id="_odoncM3KEe2aPrCP15OoQw" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odoncc3KEe2aPrCP15OoQw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odpOgM3KEe2aPrCP15OoQw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odpOgc3KEe2aPrCP15OoQw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odpOgs3KEe2aPrCP15OoQw" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odpOg83KEe2aPrCP15OoQw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odpOhM3KEe2aPrCP15OoQw" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odpOhc3KEe2aPrCP15OoQw" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odpOhs3KEe2aPrCP15OoQw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odpOh83KEe2aPrCP15OoQw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odpOiM3KEe2aPrCP15OoQw" name="minPacketReceptionRate" type="_odig0c3KEe2aPrCP15OoQw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odpOic3KEe2aPrCP15OoQw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odp1kM3KEe2aPrCP15OoQw" name="e2e" visibility="private" type="_odig0c3KEe2aPrCP15OoQw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odp1kc3KEe2aPrCP15OoQw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odp1k83KEe2aPrCP15OoQw" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odp1lM3KEe2aPrCP15OoQw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odp1lc3KEe2aPrCP15OoQw" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odp1ls3KEe2aPrCP15OoQw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odqcoM3KEe2aPrCP15OoQw" name="flows" type="_odjH4M3KEe2aPrCP15OoQw" association="_odzmkc3KEe2aPrCP15OoQw"/>
              <ownedAttribute xmi:id="_odqcoc3KEe2aPrCP15OoQw" name="nodes" type="_odju8M3KEe2aPrCP15OoQw" association="_od0NoM3KEe2aPrCP15OoQw"/>
              <ownedAttribute xmi:id="_odqcos3KEe2aPrCP15OoQw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odqcpM3KEe2aPrCP15OoQw" name="flowNamesInOriginalOrder" type="_odXhsc3KEe2aPrCP15OoQw" association="_od3Q8M3KEe2aPrCP15OoQw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odrDsc3KEe2aPrCP15OoQw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_odrqwM3KEe2aPrCP15OoQw" name="flowNamesInPriorityOrder" type="_odXhsc3KEe2aPrCP15OoQw" association="_od34Ac3KEe2aPrCP15OoQw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_odsR0M3KEe2aPrCP15OoQw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_odh5wc3KEe2aPrCP15OoQw" client="_ocszUM3KEe2aPrCP15OoQw" supplier="_odhSsM3KEe2aPrCP15OoQw" contract="_odhSsM3KEe2aPrCP15OoQw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odtf8M3KEe2aPrCP15OoQw" name="WorkLoad" specification="_odkWAM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odtf8c3KEe2aPrCP15OoQw" name="m" type="_odig0c3KEe2aPrCP15OoQw"/>
                <ownedParameter xmi:id="_odtf8s3KEe2aPrCP15OoQw" name="e2e" type="_odig0c3KEe2aPrCP15OoQw"/>
                <ownedParameter xmi:id="_odtf883KEe2aPrCP15OoQw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odtf9M3KEe2aPrCP15OoQw" type="_ocszUM3KEe2aPrCP15OoQw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
		setDefaultParameters();&#xD;
		minPacketReceptionRate = m; // use file manager passed to this object&#xD;
		this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
		/*&#xD;
		 * Read input file, build the AST of graph and the listener will build the node&#xD;
		 * and flow data objects&#xD;
		 */&#xD;
		WorkLoadListener.buildNodesAndFlows(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odtf9c3KEe2aPrCP15OoQw" name="WorkLoad" specification="_odkWB83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odtf9s3KEe2aPrCP15OoQw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odtf983KEe2aPrCP15OoQw" name="m" type="_odig0c3KEe2aPrCP15OoQw"/>
                <ownedParameter xmi:id="_odtf-M3KEe2aPrCP15OoQw" name="e2e" type="_odig0c3KEe2aPrCP15OoQw"/>
                <ownedParameter xmi:id="_odtf-c3KEe2aPrCP15OoQw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odtf-s3KEe2aPrCP15OoQw" type="_ocszUM3KEe2aPrCP15OoQw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
		setDefaultParameters();&#xD;
		this.numFaults = numFaults;&#xD;
		minPacketReceptionRate = m; // use file manager passed to this object&#xD;
		this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
		/*&#xD;
		 * Read input file, build the AST of graph and the listener will build the node&#xD;
		 * and flow data objects&#xD;
		 */&#xD;
		WorkLoadListener.buildNodesAndFlows(this);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odtf-83KEe2aPrCP15OoQw" name="setDefaultParameters" specification="_ocwdsM3KEe2aPrCP15OoQw">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
		intForFlowNames = true; // default is that node names are all alpha names&#xD;
		flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
		nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
		flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
														// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		numFaults = DEFAULT_TX_NUM;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduHAM3KEe2aPrCP15OoQw" name="getE2e" specification="_ocxEwM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduHAc3KEe2aPrCP15OoQw" type="_odig0c3KEe2aPrCP15OoQw" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduHAs3KEe2aPrCP15OoQw" name="getIntForFlowNames" specification="_ocyS4M3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduHA83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduHBM3KEe2aPrCP15OoQw" name="getName" specification="_ocyS4s3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduHBc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduHBs3KEe2aPrCP15OoQw" name="setMinPacketReceptionRate" specification="_odk9Fs3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduHB83KEe2aPrCP15OoQw" name="minPacketReceptionRate" type="_odig0c3KEe2aPrCP15OoQw"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduHCM3KEe2aPrCP15OoQw" name="getMaxPhase" specification="_ocy58M3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduHCc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
		return queue.poll().getPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduHCs3KEe2aPrCP15OoQw" name="getMinPeriod" specification="_ocy58s3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduHC83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
		return queue.poll().getPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduHDM3KEe2aPrCP15OoQw" name="setE2e" specification="_odk9GM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduHDc3KEe2aPrCP15OoQw" name="e2e" type="_odig0c3KEe2aPrCP15OoQw"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduHDs3KEe2aPrCP15OoQw" name="setIntForFlowNames" specification="_oczhAc3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduHD83KEe2aPrCP15OoQw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduuEM3KEe2aPrCP15OoQw" name="setName" specification="_oczhA83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduuEc3KEe2aPrCP15OoQw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduuEs3KEe2aPrCP15OoQw" name="setNodeChannel" specification="_oczhBc3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduuE83KEe2aPrCP15OoQw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oduuFM3KEe2aPrCP15OoQw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
		node.setChannel(channel);&#xD;
		nodes.put(name, node); // update the nodes map with the updated object&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduuFc3KEe2aPrCP15OoQw" name="getNodeChannel" specification="_oc0IEM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduuFs3KEe2aPrCP15OoQw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oduuF83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
		return node.getChannel();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduuGM3KEe2aPrCP15OoQw" name="addFlow" specification="_oc0vIM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduuGc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
		 * add a new flow node to the Flows dictionary. Only name, priority, and index&#xD;
		 * are changed from default values priority is set to the number of flows&#xD;
		 * already added (index), 0 for first flow This will create a default priority&#xD;
		 * equal to the order listed in the input graph file. We also set index to the&#xD;
		 * same value so we can preserve that order as a secondary sort key. The&#xD;
		 * initalPriority field is probably not needed, but it might be useful in the&#xD;
		 * future?? If the optional flow parameters (priority, period, ...) is set, then&#xD;
		 * this default priority will be over written&#xD;
		 */&#xD;
		if (flows.containsKey(flowName)) {&#xD;
			System.out.printf(&#xD;
					&quot;\n\tWarning! A flow with name %s already exists. &quot; + &quot;It has been replaced with a new flow\n.&quot;, flowName);&#xD;
		}&#xD;
		var index = flows.size();&#xD;
		var flowNode = new Flow(flowName, index, index);&#xD;
		flows.put(flowName, flowNode);&#xD;
		if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
			intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
										// only set it once&#xD;
		}&#xD;
		flowNamesInOriginalOrder.add(flowName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduuGs3KEe2aPrCP15OoQw" name="isIntForNodeNames" specification="_oc0vIs3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduuG83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
		return intForNodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduuHM3KEe2aPrCP15OoQw" name="isIntForFlowNames" specification="_oc0vJM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduuHc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
		return intForFlowNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oduuHs3KEe2aPrCP15OoQw" name="addNodeToFlow" specification="_oc1WMM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oduuH83KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oduuIM3KEe2aPrCP15OoQw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
			/*&#xD;
			 * set false because name not is a number; &amp;&amp; above makes sure we only set it&#xD;
			 * once&#xD;
			 */&#xD;
			intForNodeNames = false;&#xD;
		}&#xD;
		if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
											// this node already.&#xD;
			/* If the node already exists, just need to add to the flow */&#xD;
			var index = nodes.size(); // nodeIndex will be the order added&#xD;
			var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
			nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
		}&#xD;
		/*&#xD;
		 * Node is now created and in the nodes map Next we need to get the current flow&#xD;
		 * and add this node to that flow by appending it to the node array for that&#xD;
		 * flow&#xD;
		 */&#xD;
		var flowNode = getFlow(flowName);&#xD;
		var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
		/*&#xD;
		 * the priority is the node's index in the flow, which is the current array size&#xD;
		 */&#xD;
		flowNode.addNode(graphNode);&#xD;
		flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odvVIM3KEe2aPrCP15OoQw" name="getFlowPriority" specification="_oc1WM83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odvVIc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odvVIs3KEe2aPrCP15OoQw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odvVI83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
		var flow = getFlow(flowName);&#xD;
		Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
		while (nodes.hasNext()) {&#xD;
			var node = nodes.next();&#xD;
			if (node.getName() == nodeName) {&#xD;
				priority = node.getPriority(); // found the src node, set its index&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return priority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odvVJM3KEe2aPrCP15OoQw" name="setFlowPriority" specification="_oc19QM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odvVJc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odvVJs3KEe2aPrCP15OoQw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPriority(priority);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odvVJ83KEe2aPrCP15OoQw" name="setFlowPeriod" specification="_oc19Q83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odvVKM3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odvVKc3KEe2aPrCP15OoQw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPeriod(period);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odvVKs3KEe2aPrCP15OoQw" name="setFlowDeadline" specification="_oc19Rs3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odvVK83KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odvVLM3KEe2aPrCP15OoQw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setDeadline(deadline);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odvVLc3KEe2aPrCP15OoQw" name="setFlowPhase" specification="_oc2kUM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odvVLs3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odvVL83KEe2aPrCP15OoQw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		flowNode.setPhase(phase);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odvVMM3KEe2aPrCP15OoQw" name="getFlowIndex" specification="_oc3LYM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odvVMc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odvVMs3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odv8MM3KEe2aPrCP15OoQw" name="getFlowPriority" specification="_oc3ycM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odv8Mc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odv8Ms3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPriority();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odwjQM3KEe2aPrCP15OoQw" name="getFlowPeriod" specification="_oc3yc83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odwjQc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odwjQs3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odwjQ83KEe2aPrCP15OoQw" name="getFlowDeadline" specification="_oc3yds3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odwjRM3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odwjRc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getDeadline();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odwjRs3KEe2aPrCP15OoQw" name="getFlowPhase" specification="_oc4Zgc3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odwjR83KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odwjSM3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.getPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odwjSc3KEe2aPrCP15OoQw" name="getFlowTxAttemptsPerLink" specification="_oc4ZhM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odwjSs3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odwjS83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
		return flowNode.numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odwjTM3KEe2aPrCP15OoQw" name="setFlowsInPriorityOrder" specification="_oc5AkM3KEe2aPrCP15OoQw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		// Now sort by a secondary key, which is index in this case&#xD;
		List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
				.collect(Collectors.toList());&#xD;
		// Now sort by primary key, which is priority in this case&#xD;
		List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		// Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		// in the requested&#xD;
		// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxKUM3KEe2aPrCP15OoQw" name="setFlowsInDMorder" specification="_oc5Akc3KEe2aPrCP15OoQw">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		/* Now sort by a secondary key, which is priority in this case */&#xD;
		List&lt;Flow> sortedByPriority = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		/* Now sort by primary key, which is deadline in this case */&#xD;
		List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getDeadline))&#xD;
				.collect(Collectors.toList());&#xD;
		/*&#xD;
		 * Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		 * in the requested order&#xD;
		 */&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxKUc3KEe2aPrCP15OoQw" name="setFlowsInRMorder" specification="_oc5Aks3KEe2aPrCP15OoQw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
		List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
		// Now sort by a secondary key, which is priority in this case&#xD;
		List&lt;Flow> sortedByPriority = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
				.collect(Collectors.toList());&#xD;
		// Now sort by primary key, which is period in this case&#xD;
		List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
				.collect(Collectors.toList());&#xD;
		// Finally, create a new flowNamesInPriorityOrder that contains the flow names&#xD;
		// in the requested&#xD;
		// order&#xD;
		flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
		sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxKUs3KEe2aPrCP15OoQw" name="setFlowsInRealTimeHARTorder" specification="_oc5Ak83KEe2aPrCP15OoQw">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxKU83KEe2aPrCP15OoQw" name="finalizeCurrentFlow" specification="_oc5AlM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxKVM3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
			finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
		} else {&#xD;
			finalizeFlowWithE2eParameters(flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxKVc3KEe2aPrCP15OoQw" name="nextReleaseTime" specification="_oc5noM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxKVs3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odxKV83KEe2aPrCP15OoQw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odxKWM3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		flow.setLastUpdateTime(currentTime);&#xD;
		flow.setNextReleaseTime(currentTime);&#xD;
		return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxKWc3KEe2aPrCP15OoQw" name="nextAbsoluteDeadline" specification="_oc5npM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxKWs3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odxKW83KEe2aPrCP15OoQw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odxKXM3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		flow.setLastUpdateTime(currentTime);&#xD;
		flow.setNextReleaseTime(currentTime);&#xD;
		return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxKXc3KEe2aPrCP15OoQw" name="finalizeFlowWithE2eParameters" specification="_oc6OsM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxKXs3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
		var m = minPacketReceptionRate; // shorten the name :-)&#xD;
		if (flowNode != null) {&#xD;
			var nodes = flowNode.nodes;&#xD;
			int nHops = nodes.size();&#xD;
			if (nHops &lt; 1) {&#xD;
				/*&#xD;
				 * number of hops in flow, but make sure it will be at least 1, else it isn't a&#xD;
				 * flow! || was -1 at end&#xD;
				 */&#xD;
				nHops = 2;&#xD;
			}&#xD;
			Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
								// and when m == 1.0&#xD;
			if (m &lt; 1.0) {&#xD;
				/*&#xD;
				 * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) /&#xD;
				 * log(1 - M) = # txs per hop&#xD;
				 */&#xD;
				nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
			}&#xD;
			/* set numTxPerLink based on M, E2E, and flow length */&#xD;
			flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
			/* Now compute nTx per link to reach E2E requirement. */&#xD;
			// use constructor that doesn't set numFaults so fixed = false &#xD;
			// numTxPerLinkAndTotalTxCost will calculate numTxAttemptsPerLinkAndTotalTxAttempts&#xD;
			ReliabilityAnalysis reliabilityAnalysisObj = new ReliabilityAnalysis(e2e, minPacketReceptionRate);&#xD;
			ArrayList&lt;Integer> linkTxAndTotalCost = reliabilityAnalysisObj.numTxPerLinkAndTotalTxCost(flowNode);            &#xD;
			flowNode.linkTxAndTotalCost = linkTxAndTotalCost;                                                               &#xD;
			flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
		} else { // should never happen...&#xD;
			System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
					+ &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxxYM3KEe2aPrCP15OoQw" name="finalizeFlowWithFixedFaultTolerance" specification="_oc6Oss3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxxYc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
		if (flowNode != null) {&#xD;
			/* set numTxPerLink based on numFaults */&#xD;
			flowNode.numTxPerLink = numFaults + 1;&#xD;
			/* Now compute nTx per link to reach E2E requirement. */&#xD;
			// use numFaults constructor so fixed = true&#xD;
			// numTxPerLinkAndTotalTxCost will return getFixedTxPerLinkAndTotalTxCost&#xD;
			ReliabilityAnalysis reliabilityAnalysisObj = new ReliabilityAnalysis(numFaults);&#xD;
			ArrayList&lt;Integer> linkTxAndTotalCost = reliabilityAnalysisObj.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
			flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
			flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
		} else { // should never happen...&#xD;
			System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
					+ &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxxYs3KEe2aPrCP15OoQw" name="getNodeNamesOrderedAlphabetically" specification="_oc6OtM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxxY83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_odxxZM3KEe2aPrCP15OoQw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
		Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
		String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
		Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
		// However, if names are actually strings of integers, then the sort doesn't&#xD;
		// come out&#xD;
		// the way we would like. So, handle that case&#xD;
		var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
		var allIntNames = true; // flag to see if all names are Ints or not&#xD;
		for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
			var nodeName = nodeNames[i];&#xD;
			if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
				// nodeName is an alpha representation of an integer&#xD;
				nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
			} else {&#xD;
				// nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
				allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
										// set it once&#xD;
				break; // can stop the loop once we know not all of the names are ints&#xD;
			}&#xD;
		}&#xD;
		if (allIntNames) {&#xD;
			// If all names are ints, then we need to sort them accordingly&#xD;
			// Otherwise, we get names in what appears to not be in order because&#xD;
			Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
			for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
				nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
			}&#xD;
		}&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxxZc3KEe2aPrCP15OoQw" name="getFlow" specification="_oc61wc3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxxZs3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odxxZ83KEe2aPrCP15OoQw" type="_odlkIM3KEe2aPrCP15OoQw" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
		if (flow == null) {// return empty node if not found&#xD;
			flow = new Flow();&#xD;
			System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
		}&#xD;
		return flow;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxxaM3KEe2aPrCP15OoQw" name="getFlowNames" specification="_oc61w83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxxac3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_odxxas3KEe2aPrCP15OoQw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
		// could use new String[list.size()], but due to JVM optimizations new (new&#xD;
		// String[0] is better&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odxxa83KEe2aPrCP15OoQw" name="getNodeIndex" specification="_oc7c083KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odxxbM3KEe2aPrCP15OoQw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odxxbc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
		var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
		if (node != null) {&#xD;
			index = node.getIndex();&#xD;
		}&#xD;
		return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odyYcM3KEe2aPrCP15OoQw" name="getNodesInFlow" specification="_oc8D4c3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odyYcc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odyYcs3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_odyYc83KEe2aPrCP15OoQw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
		// nodes in the flow to create an array of the node names in&#xD;
		// the same order as they exist in the flow specification (i.e., Graph file)&#xD;
		var flow = flows.get(flowName);&#xD;
		String[] nodes;&#xD;
		if (flow != null) {&#xD;
			nodes = new String[flow.nodes.size()];&#xD;
			for (int i = 0; i &lt; nodes.length; i++) {&#xD;
				var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
				nodes[i] = node.getName(); // get the name and store it in the array&#xD;
			}&#xD;
&#xD;
		} else {&#xD;
			nodes = new String[0]; // return empty array&#xD;
			System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
		}&#xD;
		return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odyYdM3KEe2aPrCP15OoQw" name="getHyperPeriod" specification="_oc8D5s3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odyYdc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
		for (String flowName : getFlowNames()) {&#xD;
			// var dm = new Utlitities();&#xD;
			hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
																				// so far and the current&#xD;
																				// period, then update the&#xD;
																				// hyperPeriod with that&#xD;
																				// value&#xD;
		}&#xD;
		return hyperPeriod;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odyYds3KEe2aPrCP15OoQw" name="getTotalTxAttemptsInFlow" specification="_oc8q8M3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odyYd83KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odyYeM3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
		var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
		var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
		return totalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odyYec3KEe2aPrCP15OoQw" name="getNumTxAttemptsPerLink" specification="_oc8q883KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odyYes3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odyYe83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_odyYfM3KEe2aPrCP15OoQw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
		var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
		var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
		linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of others&#xD;
		return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odyYfc3KEe2aPrCP15OoQw" name="addEdge" specification="_odmLM83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odyYfs3KEe2aPrCP15OoQw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odyYf83KEe2aPrCP15OoQw" name="edge" type="_odmLMc3KEe2aPrCP15OoQw"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
		node.addEdge(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_odyYgM3KEe2aPrCP15OoQw" name="maxFlowLength" specification="_oc9SAM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_odyYgc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
		for (Flow flow : flows.values()) {&#xD;
			maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
		}&#xD;
		return maxLength;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ocwdsM3KEe2aPrCP15OoQw" name="setDefaultParameters" visibility="private" method="_odtf-83KEe2aPrCP15OoQw"/>
              <ownedOperation xmi:id="_ocxEwM3KEe2aPrCP15OoQw" name="getE2e" method="_oduHAM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0NpM3KEe2aPrCP15OoQw">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_odk9Fc3KEe2aPrCP15OoQw" type="_odig0c3KEe2aPrCP15OoQw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocyS4M3KEe2aPrCP15OoQw" name="getIntForFlowNames" method="_oduHAs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0Npc3KEe2aPrCP15OoQw">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocyS4c3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocyS4s3KEe2aPrCP15OoQw" name="getName" method="_oduHBM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0Nps3KEe2aPrCP15OoQw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocyS483KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocy58M3KEe2aPrCP15OoQw" name="getMaxPhase" method="_oduHCM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0NqM3KEe2aPrCP15OoQw">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocy58c3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocy58s3KEe2aPrCP15OoQw" name="getMinPeriod" method="_oduHCs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0Nqc3KEe2aPrCP15OoQw">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_oczhAM3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oczhAc3KEe2aPrCP15OoQw" name="setIntForFlowNames" method="_oduHDs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0Nq83KEe2aPrCP15OoQw">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oczhAs3KEe2aPrCP15OoQw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oczhA83KEe2aPrCP15OoQw" name="setName" method="_oduuEM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0NrM3KEe2aPrCP15OoQw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oczhBM3KEe2aPrCP15OoQw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oczhBc3KEe2aPrCP15OoQw" name="setNodeChannel" method="_oduuEs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0Nrc3KEe2aPrCP15OoQw">
                  <body>@param name    the node whose channel is to be set&#xD;
	 * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oczhBs3KEe2aPrCP15OoQw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oczhB83KEe2aPrCP15OoQw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc0IEM3KEe2aPrCP15OoQw" name="getNodeChannel" method="_oduuFc3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00sM3KEe2aPrCP15OoQw">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc0IEc3KEe2aPrCP15OoQw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc0IEs3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc0vIM3KEe2aPrCP15OoQw" name="addFlow" method="_oduuGM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00sc3KEe2aPrCP15OoQw">
                  <body>This method will add a new flow to the Flows dictionary. If the flow being&#xD;
	 * added is already in the dictionary it will overwrite the current entry but&#xD;
	 * also produce a warning so the user knows if a flow has already been added&#xD;
	 * &#xD;
	 * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc0vIc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc0vIs3KEe2aPrCP15OoQw" name="isIntForNodeNames" method="_oduuGs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00ss3KEe2aPrCP15OoQw">
                  <body>@return intForNodeNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc0vI83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc0vJM3KEe2aPrCP15OoQw" name="isIntForFlowNames" method="_oduuHM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00s83KEe2aPrCP15OoQw">
                  <body>@return intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc0vJc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc1WMM3KEe2aPrCP15OoQw" name="addNodeToFlow" method="_oduuHs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00tM3KEe2aPrCP15OoQw">
                  <body>This method takes a node name and adds that node to a flow corresponding to&#xD;
	 * the flow name. The node is appended to the node array for the given flow&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param flowName name of which flow nodeName will be added to&#xD;
	 * @param nodeName name of the node to be added to flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc1WMc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc1WMs3KEe2aPrCP15OoQw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc1WM83KEe2aPrCP15OoQw" name="getFlowPriority" method="_odvVIM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00tc3KEe2aPrCP15OoQw">
                  <body>This method returns the index priority of a node in a flow. It gets the nodes&#xD;
	 * from a given flow name and then iterates through that set flows nodes in&#xD;
	 * order to find the priority of a of the nodeName.&#xD;
	 * &#xD;
	 * @param flowName name of the flow that will contain the desired nodes&#xD;
	 * @param nodeName name of the node in which the priority is desired&#xD;
	 * @return the priority of a node in a specific flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc1WNM3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc1WNc3KEe2aPrCP15OoQw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc1WNs3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc19QM3KEe2aPrCP15OoQw" name="setFlowPriority" method="_odvVJM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc19Qc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc19Qs3KEe2aPrCP15OoQw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc19Q83KEe2aPrCP15OoQw" name="setFlowPeriod" method="_odvVJ83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc19RM3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc19Rc3KEe2aPrCP15OoQw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc19Rs3KEe2aPrCP15OoQw" name="setFlowDeadline" method="_odvVKs3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc19R83KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc19SM3KEe2aPrCP15OoQw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc2kUM3KEe2aPrCP15OoQw" name="setFlowPhase" method="_odvVLc3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc2kUc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc2kUs3KEe2aPrCP15OoQw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc3LYM3KEe2aPrCP15OoQw" name="getFlowIndex" method="_odvVMM3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc3LYc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc3LYs3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc3ycM3KEe2aPrCP15OoQw" name="getFlowPriority" method="_odv8MM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00ts3KEe2aPrCP15OoQw">
                  <body>This method takes in the name of a flow and retrieves the priority of the&#xD;
	 * flow node&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer that represents the priority of the flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc3ycc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc3ycs3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc3yc83KEe2aPrCP15OoQw" name="getFlowPeriod" method="_odwjQM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00t83KEe2aPrCP15OoQw">
                  <body>This method takes in the name of a flow and retrieves the period from the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that is the period of a flow node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc3ydM3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc3ydc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc3yds3KEe2aPrCP15OoQw" name="getFlowDeadline" method="_odwjQ83KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00uM3KEe2aPrCP15OoQw">
                  <body>This method takes in the name of a flow and retrieves the deadline from the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that is the deadline of a flowNode.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc3yd83KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc4ZgM3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc4Zgc3KEe2aPrCP15OoQw" name="getFlowPhase" method="_odwjRs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00uc3KEe2aPrCP15OoQw">
                  <body>This method takes in the name of a flow and retrieves the phase number of the&#xD;
	 * flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return an Integer that represents the phase of the flow node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc4Zgs3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc4Zg83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc4ZhM3KEe2aPrCP15OoQw" name="getFlowTxAttemptsPerLink" method="_odwjSc3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00us3KEe2aPrCP15OoQw">
                  <body>This method takes in the name of a flow and retrieves the number of tx per&#xD;
	 * link in a flow node.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return and Integer to represent the number of tx per link.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc4Zhc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc4Zhs3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc5AkM3KEe2aPrCP15OoQw" name="setFlowsInPriorityOrder" method="_odwjTM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00u83KEe2aPrCP15OoQw">
                  <body>When called this method sorts flows into priority order. First sort the flows&#xD;
	 * by index and then sort them by priority. Creates a new ArrayList and adds the&#xD;
	 * flows in the new priority order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oc5Akc3KEe2aPrCP15OoQw" name="setFlowsInDMorder" method="_odxKUM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00vM3KEe2aPrCP15OoQw">
                  <body>When called this method sorts flows into deadline order. First sort the flows&#xD;
	 * by priority and then sort them by deadline. Creates a new ArrayList and adds&#xD;
	 * the flows in the new deadline order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oc5Aks3KEe2aPrCP15OoQw" name="setFlowsInRMorder" method="_odxKUc3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od00vc3KEe2aPrCP15OoQw">
                  <body>When called this method sorts flows into priority order. First sort the flows&#xD;
	 * by priority and then sort them by period. Creates a new ArrayList and adds&#xD;
	 * the flows in the new period order. no parameters or return value.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oc5Ak83KEe2aPrCP15OoQw" name="setFlowsInRealTimeHARTorder" method="_odxKUs3KEe2aPrCP15OoQw"/>
              <ownedOperation xmi:id="_oc5AlM3KEe2aPrCP15OoQw" name="finalizeCurrentFlow" method="_odxKU83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc5Alc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc5noM3KEe2aPrCP15OoQw" name="nextReleaseTime" method="_odxKVc3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc5noc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc5nos3KEe2aPrCP15OoQw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc5no83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc5npM3KEe2aPrCP15OoQw" name="nextAbsoluteDeadline" method="_odxKWc3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc5npc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc5nps3KEe2aPrCP15OoQw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc5np83KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc6OsM3KEe2aPrCP15OoQw" name="finalizeFlowWithE2eParameters" visibility="private" method="_odxKXc3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1bwM3KEe2aPrCP15OoQw">
                  <body>This method calculates and sets the flow's linkTxAndTotalCost as the numTxAttemptsPerLinkAndTotalTxAttempts&#xD;
	 * based on the E2E (end-to-end) reliability requirement&#xD;
	 * &#xD;
	 * @param flowName is a specified flow object</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc6Osc3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc6Oss3KEe2aPrCP15OoQw" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_odxxYM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1bwc3KEe2aPrCP15OoQw">
                  <body>This method calculates and sets the flow's linkTxAndTotalCost as the fixedTxPerLinkAndTotalTxCost&#xD;
	 * with fixed fault tolerance based on the flow's number of faults (numFaults)&#xD;
	 * &#xD;
	 * @param flowName is a specified flow object</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc6Os83KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc6OtM3KEe2aPrCP15OoQw" name="getNodeNamesOrderedAlphabetically" method="_odxxYs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1bws3KEe2aPrCP15OoQw">
                  <body>This method shall sort the nodes alphabetically. Three different sorting&#xD;
	 * processes are needed based on whether the nodes are integers or letters.&#xD;
	 * &#xD;
	 * @return a String Array of the node names in an alphabetically sorted order</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc6Otc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oc6Ots3KEe2aPrCP15OoQw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc61wc3KEe2aPrCP15OoQw" name="getFlow" visibility="private" method="_odxxZc3KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc61ws3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odmLMM3KEe2aPrCP15OoQw" type="_odlkIM3KEe2aPrCP15OoQw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oc61w83KEe2aPrCP15OoQw" name="getFlowNames" method="_odxxaM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1bw83KEe2aPrCP15OoQw">
                  <body>This method returns the flow names in their original order.&#xD;
	 * &#xD;
	 * @return a String Array containing the flow names in their original order.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc7c0M3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oc7c0c3KEe2aPrCP15OoQw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc7c083KEe2aPrCP15OoQw" name="getNodeIndex" method="_odxxa83KEe2aPrCP15OoQw">
                <ownedParameter xmi:id="_oc7c1M3KEe2aPrCP15OoQw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc8D4M3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc8D4c3KEe2aPrCP15OoQw" name="getNodesInFlow" method="_odyYcM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1bxM3KEe2aPrCP15OoQw">
                  <body>This method takes in a flow name and retrieves the nodes in the given flow.&#xD;
	 * If no nodes are present the method will return an empty array.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow.&#xD;
	 * @return a String Array of the nodes in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc8D4s3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc8D483KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oc8D5M3KEe2aPrCP15OoQw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc8D5s3KEe2aPrCP15OoQw" name="getHyperPeriod" method="_odyYdM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1bxc3KEe2aPrCP15OoQw">
                  <body>This method computes the LCM of all periods and then updates the current&#xD;
	 * hyperPeriod to new number.&#xD;
	 * &#xD;
	 * @return an Integer that represents the hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc8D583KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc8q8M3KEe2aPrCP15OoQw" name="getTotalTxAttemptsInFlow" method="_odyYds3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1bxs3KEe2aPrCP15OoQw">
                  <body>This method takes in a flow name and calculates the total cost of the&#xD;
	 * specified flow.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer representing the total cost of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc8q8c3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc8q8s3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc8q883KEe2aPrCP15OoQw" name="getNumTxAttemptsPerLink" method="_odyYec3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1bx83KEe2aPrCP15OoQw">
                  <body>This method takes in a flow name, gets the flow object and sets a new Array&#xD;
	 * List to the link tx and total cost of the flow. Removes last element because&#xD;
	 * it is just a sum of the others.&#xD;
	 * &#xD;
	 * @param flowName the name of the flow&#xD;
	 * @return an Integer Array containing the link tx and total cost of a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc8q9M3KEe2aPrCP15OoQw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc8q9c3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oc8q9s3KEe2aPrCP15OoQw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc9SAM3KEe2aPrCP15OoQw" name="maxFlowLength" method="_odyYgM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1byc3KEe2aPrCP15OoQw">
                  <body>This method records the max flow length by looping through all flows and&#xD;
	 * keeping track of the max value.&#xD;
	 * &#xD;
	 * @return an Integer that represents the max length of the flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc9SAc3KEe2aPrCP15OoQw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_odkWAM3KEe2aPrCP15OoQw" name="WorkLoad" visibility="package" method="_odtf8M3KEe2aPrCP15OoQw">
                <eAnnotations xmi:id="_odkWBM3KEe2aPrCP15OoQw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_odkWBc3KEe2aPrCP15OoQw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_od0Nos3KEe2aPrCP15OoQw">
                  <body>This method takes the below parameters and constructs nodes and flows using&#xD;
	 * the WorkloadListener build nodes and flows function.&#xD;
	 * &#xD;
	 * @param m             is a double that represents the minimum packet reception&#xD;
	 *                      rate&#xD;
	 * @param e2e           is a double that populates this flow object as the input&#xD;
	 *                      is read&#xD;
	 * @param inputFileName is a String that represents the name of the file used to&#xD;
	 *                      create a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_odkWAc3KEe2aPrCP15OoQw" name="m" type="_odig0c3KEe2aPrCP15OoQw"/>
                <ownedParameter xmi:id="_odkWAs3KEe2aPrCP15OoQw" name="e2e" type="_odig0c3KEe2aPrCP15OoQw"/>
                <ownedParameter xmi:id="_odkWA83KEe2aPrCP15OoQw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odkWBs3KEe2aPrCP15OoQw" type="_ocszUM3KEe2aPrCP15OoQw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odkWB83KEe2aPrCP15OoQw" name="WorkLoad" visibility="package" method="_odtf9c3KEe2aPrCP15OoQw">
                <eAnnotations xmi:id="_odk9Es3KEe2aPrCP15OoQw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_odk9E83KEe2aPrCP15OoQw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_od0No83KEe2aPrCP15OoQw">
                  <body>This method takes the below parameters and constructs nodes and flows using&#xD;
	 * the WorkloadListener build nodes and flows function.&#xD;
	 * &#xD;
	 * @param numFaults     is an Integer that represents the number of faults in a&#xD;
	 *                      flow.&#xD;
	 * @param m             is a double that represents the minimum packet reception&#xD;
	 *                      rate&#xD;
	 * @param e2e           is a double that populates this flow object as the input&#xD;
	 *                      is read&#xD;
	 * @param inputFileName is a String that represents the name of the file used to&#xD;
	 *                      create a flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_odkWCM3KEe2aPrCP15OoQw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odkWCc3KEe2aPrCP15OoQw" name="m" type="_odig0c3KEe2aPrCP15OoQw"/>
                <ownedParameter xmi:id="_odk9EM3KEe2aPrCP15OoQw" name="e2e" type="_odig0c3KEe2aPrCP15OoQw"/>
                <ownedParameter xmi:id="_odk9Ec3KEe2aPrCP15OoQw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odk9FM3KEe2aPrCP15OoQw" type="_ocszUM3KEe2aPrCP15OoQw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odk9Fs3KEe2aPrCP15OoQw" name="setMinPacketReceptionRate" method="_oduHBs3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0Np83KEe2aPrCP15OoQw">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_odk9F83KEe2aPrCP15OoQw" name="minPacketReceptionRate" type="_odig0c3KEe2aPrCP15OoQw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odk9GM3KEe2aPrCP15OoQw" name="setE2e" method="_oduHDM3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od0Nqs3KEe2aPrCP15OoQw">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_odk9Gc3KEe2aPrCP15OoQw" name="e2e" type="_odig0c3KEe2aPrCP15OoQw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odmLM83KEe2aPrCP15OoQw" name="addEdge" method="_odyYfc3KEe2aPrCP15OoQw">
                <ownedComment xmi:id="_od1byM3KEe2aPrCP15OoQw">
                  <body>This method adds an edge to a node by getting the node object a and adding an&#xD;
	 * edge.&#xD;
	 * &#xD;
	 * @param nodeName name of the node.&#xD;
	 * @param edge     name of the edge that will be added.</body>
                </ownedComment>
                <ownedParameter xmi:id="_odmLNM3KEe2aPrCP15OoQw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odmLNc3KEe2aPrCP15OoQw" name="edge" type="_odmLMc3KEe2aPrCP15OoQw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_odgroM3KEe2aPrCP15OoQw" name="WorkLoadDescription"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_odhSsM3KEe2aPrCP15OoQw" name="ReliabilityParameters"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_odjH4M3KEe2aPrCP15OoQw" name="FlowMap"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_odju8M3KEe2aPrCP15OoQw" name="NodeMap"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_odlkIM3KEe2aPrCP15OoQw" name="Flow"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_odmLMc3KEe2aPrCP15OoQw" name="Edge"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_odzmkc3KEe2aPrCP15OoQw" name="" memberEnd="_odqcoM3KEe2aPrCP15OoQw _odzmks3KEe2aPrCP15OoQw">
              <ownedEnd xmi:id="_odzmks3KEe2aPrCP15OoQw" name="" type="_ocszUM3KEe2aPrCP15OoQw" association="_odzmkc3KEe2aPrCP15OoQw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_od0NoM3KEe2aPrCP15OoQw" name="" memberEnd="_odqcoc3KEe2aPrCP15OoQw _od0Noc3KEe2aPrCP15OoQw">
              <ownedEnd xmi:id="_od0Noc3KEe2aPrCP15OoQw" name="" type="_ocszUM3KEe2aPrCP15OoQw" association="_od0NoM3KEe2aPrCP15OoQw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_od3Q8M3KEe2aPrCP15OoQw" name="" memberEnd="_od3Q8c3KEe2aPrCP15OoQw _odqcpM3KEe2aPrCP15OoQw">
              <ownedEnd xmi:id="_od3Q8c3KEe2aPrCP15OoQw" name="" type="_ocszUM3KEe2aPrCP15OoQw" association="_od3Q8M3KEe2aPrCP15OoQw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_od34Ac3KEe2aPrCP15OoQw" name="" memberEnd="_od34As3KEe2aPrCP15OoQw _odrqwM3KEe2aPrCP15OoQw">
              <ownedEnd xmi:id="_od34As3KEe2aPrCP15OoQw" name="" type="_ocszUM3KEe2aPrCP15OoQw" association="_od34Ac3KEe2aPrCP15OoQw"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ocew5M3KEe2aPrCP15OoQw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_ocew5c3KEe2aPrCP15OoQw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_ocfX8M3KEe2aPrCP15OoQw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_odbME83KEe2aPrCP15OoQw" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_odXhsc3KEe2aPrCP15OoQw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_odYIwc3KEe2aPrCP15OoQw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_odYv0c3KEe2aPrCP15OoQw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_odZW4c3KEe2aPrCP15OoQw" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_odZ98c3KEe2aPrCP15OoQw" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_odalAc3KEe2aPrCP15OoQw" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_odalA83KEe2aPrCP15OoQw" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_odbMEc3KEe2aPrCP15OoQw" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_odig0M3KEe2aPrCP15OoQw" name="lang">
        <packagedElement xmi:type="uml:DataType" xmi:id="_odig0c3KEe2aPrCP15OoQw" name="Double"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_oMfNEM3KEe2aPrCP15OoQw">
      <eAnnotations xmi:id="_oMkFkM3KEe2aPrCP15OoQw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_oMkFkc3KEe2aPrCP15OoQw" base_Package="_oG-a8M3KEe2aPrCP15OoQw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_oc61wM3KEe2aPrCP15OoQw" base_Element="_oc6OtM3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Array xmi:id="_oc7c0s3KEe2aPrCP15OoQw" base_Element="_oc61w83KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Array xmi:id="_oc8D5c3KEe2aPrCP15OoQw" base_Element="_oc8D4c3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Array xmi:id="_oc8q983KEe2aPrCP15OoQw" dimensions="1" base_Element="_oc8q883KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odXhsM3KEe2aPrCP15OoQw" base_Element="_odWTkM3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odYIwM3KEe2aPrCP15OoQw" base_Element="_odXhsc3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odYv0M3KEe2aPrCP15OoQw" base_Element="_odYIwc3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odZW4M3KEe2aPrCP15OoQw" base_Element="_odYv0c3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odZ98M3KEe2aPrCP15OoQw" base_Element="_odZW4c3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odalAM3KEe2aPrCP15OoQw" base_Element="_odZ98c3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odalAs3KEe2aPrCP15OoQw" base_Element="_odalAc3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odbMEM3KEe2aPrCP15OoQw" base_Element="_odalA83KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odbMEs3KEe2aPrCP15OoQw" base_Element="_odbMEc3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odbzIM3KEe2aPrCP15OoQw" base_Element="_odbME83KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odgroc3KEe2aPrCP15OoQw" base_Element="_odgroM3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odh5wM3KEe2aPrCP15OoQw" base_Element="_odhSsM3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odig0s3KEe2aPrCP15OoQw" base_Element="_odig0c3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odjH4c3KEe2aPrCP15OoQw" base_Element="_odjH4M3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odju8c3KEe2aPrCP15OoQw" base_Element="_odju8M3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odlkIc3KEe2aPrCP15OoQw" base_Element="_odlkIM3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_odmLMs3KEe2aPrCP15OoQw" base_Element="_odmLMc3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odp1ks3KEe2aPrCP15OoQw" base_Element="_odp1kM3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odp1l83KEe2aPrCP15OoQw" base_Element="_odp1lc3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odqco83KEe2aPrCP15OoQw" base_Element="_odqcos3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Generics xmi:id="_odrDsM3KEe2aPrCP15OoQw" genericsValue="String" base_Element="_odqcpM3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Generics xmi:id="_odrqwc3KEe2aPrCP15OoQw" genericsValue="String" base_Element="_odrqwM3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_od34AM3KEe2aPrCP15OoQw" base_Element="_od3Q8M3KEe2aPrCP15OoQw"/>
  <UMLLabProfile:Reference xmi:id="_od4fEM3KEe2aPrCP15OoQw" base_Element="_od34Ac3KEe2aPrCP15OoQw"/>
</xmi:XMI>
